

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Sun Sep  7 01:58:46 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F24J10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    16  0000                     _ADCON0	set	4034
    17  0000                     _ADCON1	set	4033
    18  0000                     _ADCON2	set	4032
    19  0000                     _ADRESH	set	4036
    20  0000                     _ADRESL	set	4035
    21  0000                     _PIR1bits	set	3998
    22  0000                     _PORTA	set	3968
    23  0000                     _PORTB	set	3969
    24  0000                     _PORTBbits	set	3969
    25  0000                     _PORTC	set	3970
    26  0000                     _PORTCbits	set	3970
    27  0000                     _SSP1BUF	set	4041
    28  0000                     _SSP1CON1	set	4038
    29  0000                     _SSP1CON1bits	set	4038
    30  0000                     _SSPBUF	set	4041
    31  0000                     _SSPCON1	set	4038
    32  0000                     _SSPSTAT	set	4039
    33  0000                     _T0CON	set	4053
    34  0000                     _TMR0H	set	4055
    35  0000                     _TMR0L	set	4054
    36  0000                     _TRISA	set	3986
    37  0000                     _TRISB	set	3987
    38  0000                     _TRISC	set	3988
    39  0000                     _TRISCbits	set	3988
    40  0000                     _GODONE	set	32273
    41  0000                     _SSPIF	set	31987
    42  0000                     _TMR0IF	set	32658
    43                           
    44 ;;
    45 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
    46 ;;
    47 ;; *************** function _main *****************
    48 ;; Defined at:
    49 ;;		line 45 in file "main.c"
    50 ;; Parameters:    Size  Location     Type
    51 ;;		None
    52 ;; Auto vars:     Size  Location     Type
    53 ;;  total           4   19[COMRAM] long 
    54 ;;  stepNumber      2   62[COMRAM] int 
    55 ;;  PWMcount        2   59[COMRAM] int 
    56 ;;  currentStep     2   57[COMRAM] int 
    57 ;;  midPWM          2   53[COMRAM] int 
    58 ;;  tickCounter     2   50[COMRAM] int 
    59 ;;  sequenceRepe    2   48[COMRAM] int 
    60 ;;  highPWM         2   46[COMRAM] int 
    61 ;;  lowPWM          2   44[COMRAM] int 
    62 ;;  currentGainL    2   42[COMRAM] int 
    63 ;;  clapCounter     2   40[COMRAM] int 
    64 ;;  average         2   38[COMRAM] int 
    65 ;;  highLevel       2   35[COMRAM] int 
    66 ;;  soundDetecte    2   33[COMRAM] int 
    67 ;;  fadeCounter     2   31[COMRAM] int 
    68 ;;  sampleCount     2   29[COMRAM] int 
    69 ;;  mainLevel       2   27[COMRAM] int 
    70 ;;  lowLevel        2   25[COMRAM] int 
    71 ;;  midLevel        2   23[COMRAM] int 
    72 ;;  sequenceNumb    1   61[COMRAM] unsigned char 
    73 ;;  brightness      1   56[COMRAM] unsigned char 
    74 ;;  patternNumbe    1   55[COMRAM] unsigned char 
    75 ;;  mode            1   52[COMRAM] unsigned char 
    76 ;;  soundFlag       1   37[COMRAM] unsigned char 
    77 ;; Return value:  Size  Location     Type
    78 ;;		None               void
    79 ;; Registers used:
    80 ;;		wreg, status,2, status,0, prodl, cstack
    81 ;; Tracked objects:
    82 ;;		On entry : 0/0
    83 ;;		On exit  : 0/0
    84 ;;		Unchanged: 0/0
    85 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
    86 ;;      Params:         0       0       0       0       0
    87 ;;      Locals:        45       0       0       0       0
    88 ;;      Temps:          4       0       0       0       0
    89 ;;      Totals:        49       0       0       0       0
    90 ;;Total ram usage:       49 bytes
    91 ;; Hardware stack levels required when called:    1
    92 ;; This function calls:
    93 ;;		___aldiv
    94 ;;		_readMyADC
    95 ;;		_setGainLevel
    96 ;;		_setupSPI
    97 ;; This function is called by:
    98 ;;		Startup code after reset
    99 ;; This function uses a non-reentrant model
   100 ;;
   101                           
   102                           	psect	text0
   103  0033D4                     __ptext0:
   104                           	opt stack 0
   105  0033D4                     _main:
   106                           	opt stack 30
   107                           
   108                           ;main.c: 50: ADCON1 = 0x0B;
   109                           
   110                           ;incstack = 0
   111  0033D4  0E0B               	movlw	11
   112  0033D6  6EC1               	movwf	4033,c	;volatile
   113                           
   114                           ;main.c: 54: ADCON0 = 0x01;
   115  0033D8  0E01               	movlw	1
   116  0033DA  6EC2               	movwf	4034,c	;volatile
   117                           
   118                           ;main.c: 57: ADCON2 = 0xB5;
   119  0033DC  0EB5               	movlw	181
   120  0033DE  6EC0               	movwf	4032,c	;volatile
   121                           
   122                           ;main.c: 60: TRISA = 0x0F;
   123  0033E0  0E0F               	movlw	15
   124  0033E2  6E92               	movwf	3986,c	;volatile
   125                           
   126                           ;main.c: 61: TRISB = 0x00;
   127  0033E4  0E00               	movlw	0
   128  0033E6  6E93               	movwf	3987,c	;volatile
   129                           
   130                           ;main.c: 62: TRISC = 0xC0;
   131  0033E8  0EC0               	movlw	192
   132  0033EA  6E94               	movwf	3988,c	;volatile
   133                           
   134                           ;main.c: 69: PORTA = 0x00;
   135  0033EC  0E00               	movlw	0
   136  0033EE  6E80               	movwf	3968,c	;volatile
   137                           
   138                           ;main.c: 70: PORTB = 0x00;
   139  0033F0  0E00               	movlw	0
   140  0033F2  6E81               	movwf	3969,c	;volatile
   141                           
   142                           ;main.c: 71: PORTC = 0x00;
   143  0033F4  0E00               	movlw	0
   144  0033F6  6E82               	movwf	3970,c	;volatile
   145                           
   146                           ;main.c: 78: setupSPI();
   147  0033F8  EC13  F019         	call	_setupSPI	;wreg free
   148                           
   149                           ;main.c: 81: int highLevel = 0;
   150  0033FC  0E00               	movlw	0
   151  0033FE  6E25               	movwf	main@highLevel+1,c
   152  003400  0E00               	movlw	0
   153  003402  6E24               	movwf	main@highLevel,c
   154                           
   155                           ;main.c: 82: int midLevel = 0;
   156  003404  0E00               	movlw	0
   157  003406  6E19               	movwf	main@midLevel+1,c
   158  003408  0E00               	movlw	0
   159  00340A  6E18               	movwf	main@midLevel,c
   160                           
   161                           ;main.c: 83: int lowLevel = 0;
   162  00340C  0E00               	movlw	0
   163  00340E  6E1B               	movwf	main@lowLevel+1,c
   164  003410  0E00               	movlw	0
   165  003412  6E1A               	movwf	main@lowLevel,c
   166                           
   167                           ;main.c: 84: int mainLevel = 0;
   168  003414  0E00               	movlw	0
   169  003416  6E1D               	movwf	main@mainLevel+1,c
   170  003418  0E00               	movlw	0
   171  00341A  6E1C               	movwf	main@mainLevel,c
   172                           
   173                           ;main.c: 97: TMR0IF = 0;
   174  00341C  94F2               	bcf	intcon,2,c	;volatile
   175                           
   176                           ;main.c: 98: TMR0H = 0xF9;
   177  00341E  0EF9               	movlw	249
   178  003420  6ED7               	movwf	4055,c	;volatile
   179                           
   180                           ;main.c: 99: TMR0L = 0xE4;
   181  003422  0EE4               	movlw	228
   182  003424  6ED6               	movwf	4054,c	;volatile
   183                           
   184                           ;main.c: 101: T0CON = 0x84;
   185  003426  0E84               	movlw	132
   186  003428  6ED5               	movwf	4053,c	;volatile
   187                           
   188                           ;main.c: 104: int currentGainLevel = 80;
   189  00342A  0E00               	movlw	0
   190  00342C  6E2C               	movwf	main@currentGainLevel+1,c
   191  00342E  0E50               	movlw	80
   192  003430  6E2B               	movwf	main@currentGainLevel,c
   193                           
   194                           ;main.c: 106: setGainLevel(currentGainLevel);
   195  003432  502B               	movf	main@currentGainLevel,w,c
   196  003434  EC2D  F019         	call	_setGainLevel
   197                           
   198                           ;main.c: 109: int sampleCount = 0;
   199  003438  0E00               	movlw	0
   200  00343A  6E1F               	movwf	main@sampleCount+1,c
   201  00343C  0E00               	movlw	0
   202  00343E  6E1E               	movwf	main@sampleCount,c
   203                           
   204                           ;main.c: 110: long total = 0;
   205  003440  0E00               	movlw	0
   206  003442  6E14               	movwf	main@total,c
   207  003444  0E00               	movlw	0
   208  003446  6E15               	movwf	main@total+1,c
   209  003448  0E00               	movlw	0
   210  00344A  6E16               	movwf	main@total+2,c
   211  00344C  0E00               	movlw	0
   212  00344E  6E17               	movwf	main@total+3,c
   213                           
   214                           ;main.c: 111: int average = 0;
   215  003450  0E00               	movlw	0
   216  003452  6E28               	movwf	main@average+1,c
   217  003454  0E00               	movlw	0
   218  003456  6E27               	movwf	main@average,c
   219                           
   220                           ;main.c: 114: int PWMcount = 0;
   221  003458  0E00               	movlw	0
   222  00345A  6E3D               	movwf	main@PWMcount+1,c
   223  00345C  0E00               	movlw	0
   224  00345E  6E3C               	movwf	main@PWMcount,c
   225                           
   226                           ;main.c: 115: int lowPWM = 0;
   227  003460  0E00               	movlw	0
   228  003462  6E2E               	movwf	main@lowPWM+1,c
   229  003464  0E00               	movlw	0
   230  003466  6E2D               	movwf	main@lowPWM,c
   231                           
   232                           ;main.c: 116: int midPWM = 0;
   233  003468  0E00               	movlw	0
   234  00346A  6E37               	movwf	main@midPWM+1,c
   235  00346C  0E00               	movlw	0
   236  00346E  6E36               	movwf	main@midPWM,c
   237                           
   238                           ;main.c: 117: int highPWM = 0;
   239  003470  0E00               	movlw	0
   240  003472  6E30               	movwf	main@highPWM+1,c
   241  003474  0E00               	movlw	0
   242  003476  6E2F               	movwf	main@highPWM,c
   243                           
   244                           ;main.c: 118: int fadeCounter = 0;
   245  003478  0E00               	movlw	0
   246  00347A  6E21               	movwf	main@fadeCounter+1,c
   247  00347C  0E00               	movlw	0
   248  00347E  6E20               	movwf	main@fadeCounter,c
   249                           
   250                           ;main.c: 121: unsigned char mode = 0;
   251  003480  6E10               	movwf	??_main& (0+255),c
   252  003482  0E00               	movlw	0
   253  003484  6E35               	movwf	main@mode,c
   254  003486  5010               	movf	??_main& (0+255),w,c
   255                           
   256                           ;main.c: 124: int tickCounter = 0;
   257  003488  0E00               	movlw	0
   258  00348A  6E34               	movwf	main@tickCounter+1,c
   259  00348C  0E00               	movlw	0
   260  00348E  6E33               	movwf	main@tickCounter,c
   261                           
   262                           ;main.c: 127: unsigned char patternNumber = 0;
   263  003490  6E10               	movwf	??_main& (0+255),c
   264  003492  0E00               	movlw	0
   265  003494  6E38               	movwf	main@patternNumber,c
   266  003496  5010               	movf	??_main& (0+255),w,c
   267                           
   268                           ;main.c: 128: unsigned char sequenceNumber = 0;
   269  003498  6E10               	movwf	??_main& (0+255),c
   270  00349A  0E00               	movlw	0
   271  00349C  6E3E               	movwf	main@sequenceNumber,c
   272  00349E  5010               	movf	??_main& (0+255),w,c
   273                           
   274                           ;main.c: 129: int stepNumber = 0;
   275  0034A0  0E00               	movlw	0
   276  0034A2  6E40               	movwf	main@stepNumber+1,c
   277  0034A4  0E00               	movlw	0
   278  0034A6  6E3F               	movwf	main@stepNumber,c
   279                           
   280                           ;main.c: 130: int currentStep = 0;
   281  0034A8  0E00               	movlw	0
   282  0034AA  6E3B               	movwf	main@currentStep+1,c
   283  0034AC  0E00               	movlw	0
   284  0034AE  6E3A               	movwf	main@currentStep,c
   285                           
   286                           ;main.c: 131: unsigned char brightness = 0;
   287  0034B0  6E10               	movwf	??_main& (0+255),c
   288  0034B2  0E00               	movlw	0
   289  0034B4  6E39               	movwf	main@brightness,c
   290  0034B6  5010               	movf	??_main& (0+255),w,c
   291                           
   292                           ;main.c: 132: int sequenceRepeats = 0;
   293  0034B8  0E00               	movlw	0
   294  0034BA  6E32               	movwf	main@sequenceRepeats+1,c
   295  0034BC  0E00               	movlw	0
   296  0034BE  6E31               	movwf	main@sequenceRepeats,c
   297                           
   298                           ;main.c: 135: int soundDetectedCount = 0;
   299  0034C0  0E00               	movlw	0
   300  0034C2  6E23               	movwf	main@soundDetectedCount+1,c
   301  0034C4  0E00               	movlw	0
   302  0034C6  6E22               	movwf	main@soundDetectedCount,c
   303                           
   304                           ;main.c: 136: unsigned char soundFlag = 0;
   305  0034C8  6E10               	movwf	??_main& (0+255),c
   306  0034CA  0E00               	movlw	0
   307  0034CC  6E26               	movwf	main@soundFlag,c
   308  0034CE  5010               	movf	??_main& (0+255),w,c
   309                           
   310                           ;main.c: 137: int clapCounter = 0;
   311  0034D0  0E00               	movlw	0
   312  0034D2  6E2A               	movwf	main@clapCounter+1,c
   313  0034D4  0E00               	movlw	0
   314  0034D6  6E29               	movwf	main@clapCounter,c
   315  0034D8                     l1320:
   316                           
   317                           ;main.c: 140: {
   318                           ;main.c: 147: if (TMR0IF == 1)
   319  0034D8  A4F2               	btfss	intcon,2,c	;volatile
   320  0034DA  D013               	goto	l1330
   321                           
   322                           ;main.c: 148: {
   323                           ;main.c: 149: tickCounter++;
   324  0034DC  4A33               	infsnz	main@tickCounter,f,c
   325  0034DE  2A34               	incf	main@tickCounter+1,f,c
   326                           
   327                           ;main.c: 150: if (tickCounter > 1000) tickCounter = 0;
   328  0034E0  5034               	movf	main@tickCounter+1,w,c
   329  0034E2  0A80               	xorlw	128
   330  0034E4  0F7D               	addlw	-131
   331  0034E6  0EE9               	movlw	233
   332  0034E8  B4D8               	btfsc	status,2,c
   333  0034EA  5C33               	subwf	main@tickCounter,w,c
   334  0034EC  A0D8               	btfss	status,0,c
   335  0034EE  D004               	goto	l47
   336  0034F0  0E00               	movlw	0
   337  0034F2  6E34               	movwf	main@tickCounter+1,c
   338  0034F4  0E00               	movlw	0
   339  0034F6  6E33               	movwf	main@tickCounter,c
   340  0034F8                     l47:
   341                           
   342                           ;main.c: 153: TMR0H = 0xF9;
   343  0034F8  0EF9               	movlw	249
   344  0034FA  6ED7               	movwf	4055,c	;volatile
   345                           
   346                           ;main.c: 154: TMR0L = 0xE4;
   347  0034FC  0EE4               	movlw	228
   348  0034FE  6ED6               	movwf	4054,c	;volatile
   349                           
   350                           ;main.c: 155: TMR0IF = 0;
   351  003500  94F2               	bcf	intcon,2,c	;volatile
   352  003502                     l1330:
   353                           
   354                           ;main.c: 156: }
   355                           ;main.c: 159: highLevel = readMyADC(0);
   356  003502  0E00               	movlw	0
   357  003504  EC40  F019         	call	_readMyADC
   358  003508  C001  F024         	movff	?_readMyADC,main@highLevel
   359  00350C  C002  F025         	movff	?_readMyADC+1,main@highLevel+1
   360                           
   361                           ;main.c: 160: midLevel = readMyADC(1);
   362  003510  0E01               	movlw	1
   363  003512  EC40  F019         	call	_readMyADC
   364  003516  C001  F018         	movff	?_readMyADC,main@midLevel
   365  00351A  C002  F019         	movff	?_readMyADC+1,main@midLevel+1
   366                           
   367                           ;main.c: 161: lowLevel = readMyADC(2);
   368  00351E  0E02               	movlw	2
   369  003520  EC40  F019         	call	_readMyADC
   370  003524  C001  F01A         	movff	?_readMyADC,main@lowLevel
   371  003528  C002  F01B         	movff	?_readMyADC+1,main@lowLevel+1
   372                           
   373                           ;main.c: 162: mainLevel = readMyADC(3);
   374  00352C  0E03               	movlw	3
   375  00352E  EC40  F019         	call	_readMyADC
   376  003532  C001  F01C         	movff	?_readMyADC,main@mainLevel
   377  003536  C002  F01D         	movff	?_readMyADC+1,main@mainLevel+1
   378                           
   379                           ;main.c: 165: if (PORTCbits.RC6 == 1 && PORTCbits.RC7 == 0)
   380  00353A  BC82               	btfsc	3970,6,c	;volatile
   381  00353C  BE82               	btfsc	3970,7,c	;volatile
   382  00353E  D025               	goto	l1364
   383                           
   384                           ;main.c: 166: {
   385                           ;main.c: 167: if (mode != 0)
   386  003540  5035               	movf	main@mode,w,c
   387  003542  B4D8               	btfsc	status,2,c
   388  003544  D022               	goto	l1364
   389                           
   390                           ;main.c: 168: {
   391                           ;main.c: 169: mode = 0;
   392  003546  6E10               	movwf	??_main& (0+255),c
   393  003548  0E00               	movlw	0
   394  00354A  6E35               	movwf	main@mode,c
   395  00354C  5010               	movf	??_main& (0+255),w,c
   396                           
   397                           ;main.c: 172: PORTBbits.RB3 = 0;
   398  00354E  9681               	bcf	3969,3,c	;volatile
   399                           
   400                           ;main.c: 173: PORTBbits.RB4 = 0;
   401  003550  9881               	bcf	3969,4,c	;volatile
   402                           
   403                           ;main.c: 174: PORTBbits.RB5 = 0;
   404  003552  9A81               	bcf	3969,5,c	;volatile
   405                           
   406                           ;main.c: 175: PORTBbits.RB0 = 0;
   407  003554  9081               	bcf	3969,0,c	;volatile
   408                           
   409                           ;main.c: 176: PORTBbits.RB1 = 0;
   410  003556  9281               	bcf	3969,1,c	;volatile
   411                           
   412                           ;main.c: 177: PORTBbits.RB2 = 0;
   413  003558  9481               	bcf	3969,2,c	;volatile
   414                           
   415                           ;main.c: 180: patternNumber = 0;
   416  00355A  6E10               	movwf	??_main& (0+255),c
   417  00355C  0E00               	movlw	0
   418  00355E  6E38               	movwf	main@patternNumber,c
   419  003560  5010               	movf	??_main& (0+255),w,c
   420                           
   421                           ;main.c: 181: sequenceNumber = 0;
   422  003562  6E10               	movwf	??_main& (0+255),c
   423  003564  0E00               	movlw	0
   424  003566  6E3E               	movwf	main@sequenceNumber,c
   425  003568  5010               	movf	??_main& (0+255),w,c
   426                           
   427                           ;main.c: 182: stepNumber = 0;
   428  00356A  0E00               	movlw	0
   429  00356C  6E40               	movwf	main@stepNumber+1,c
   430  00356E  0E00               	movlw	0
   431  003570  6E3F               	movwf	main@stepNumber,c
   432                           
   433                           ;main.c: 183: currentStep = 0;
   434  003572  0E00               	movlw	0
   435  003574  6E3B               	movwf	main@currentStep+1,c
   436  003576  0E00               	movlw	0
   437  003578  6E3A               	movwf	main@currentStep,c
   438                           
   439                           ;main.c: 184: brightness = 0;
   440  00357A  6E10               	movwf	??_main& (0+255),c
   441  00357C  0E00               	movlw	0
   442  00357E  6E39               	movwf	main@brightness,c
   443  003580  5010               	movf	??_main& (0+255),w,c
   444                           
   445                           ;main.c: 185: sequenceRepeats = 0;
   446  003582  0E00               	movlw	0
   447  003584  6E32               	movwf	main@sequenceRepeats+1,c
   448  003586  0E00               	movlw	0
   449  003588  6E31               	movwf	main@sequenceRepeats,c
   450  00358A                     l1364:
   451                           
   452                           ;main.c: 186: }
   453                           ;main.c: 187: }
   454                           ;main.c: 189: if (PORTCbits.RC6 == 0 && PORTCbits.RC7 == 0)
   455  00358A  AC82               	btfss	3970,6,c	;volatile
   456  00358C  BE82               	btfsc	3970,7,c	;volatile
   457  00358E  D00D               	goto	l1384
   458                           
   459                           ;main.c: 190: {
   460                           ;main.c: 191: if (mode != 1)
   461  003590  0435               	decf	main@mode,w,c
   462  003592  B4D8               	btfsc	status,2,c
   463  003594  D00A               	goto	l1384
   464                           
   465                           ;main.c: 192: {
   466                           ;main.c: 193: mode = 1;
   467  003596  6E10               	movwf	??_main& (0+255),c
   468  003598  0E01               	movlw	1
   469  00359A  6E35               	movwf	main@mode,c
   470  00359C  5010               	movf	??_main& (0+255),w,c
   471                           
   472                           ;main.c: 196: PORTBbits.RB3 = 0;
   473  00359E  9681               	bcf	3969,3,c	;volatile
   474                           
   475                           ;main.c: 197: PORTBbits.RB4 = 0;
   476  0035A0  9881               	bcf	3969,4,c	;volatile
   477                           
   478                           ;main.c: 198: PORTBbits.RB5 = 0;
   479  0035A2  9A81               	bcf	3969,5,c	;volatile
   480                           
   481                           ;main.c: 199: PORTBbits.RB0 = 0;
   482  0035A4  9081               	bcf	3969,0,c	;volatile
   483                           
   484                           ;main.c: 200: PORTBbits.RB1 = 0;
   485  0035A6  9281               	bcf	3969,1,c	;volatile
   486                           
   487                           ;main.c: 201: PORTBbits.RB2 = 0;
   488  0035A8  9481               	bcf	3969,2,c	;volatile
   489  0035AA                     l1384:
   490                           
   491                           ;main.c: 202: }
   492                           ;main.c: 203: }
   493                           ;main.c: 205: if (PORTCbits.RC6 == 0 && PORTCbits.RC7 == 1)
   494  0035AA  AC82               	btfss	3970,6,c	;volatile
   495  0035AC  AE82               	btfss	3970,7,c	;volatile
   496  0035AE  D00E               	goto	l1404
   497                           
   498                           ;main.c: 206: {
   499                           ;main.c: 207: if (mode != 2)
   500  0035B0  5035               	movf	main@mode,w,c
   501  0035B2  0A02               	xorlw	2
   502  0035B4  B4D8               	btfsc	status,2,c
   503  0035B6  D00A               	goto	l1404
   504                           
   505                           ;main.c: 208: {
   506                           ;main.c: 209: mode = 2;
   507  0035B8  6E10               	movwf	??_main& (0+255),c
   508  0035BA  0E02               	movlw	2
   509  0035BC  6E35               	movwf	main@mode,c
   510  0035BE  5010               	movf	??_main& (0+255),w,c
   511                           
   512                           ;main.c: 212: PORTBbits.RB3 = 0;
   513  0035C0  9681               	bcf	3969,3,c	;volatile
   514                           
   515                           ;main.c: 213: PORTBbits.RB4 = 0;
   516  0035C2  9881               	bcf	3969,4,c	;volatile
   517                           
   518                           ;main.c: 214: PORTBbits.RB5 = 0;
   519  0035C4  9A81               	bcf	3969,5,c	;volatile
   520                           
   521                           ;main.c: 215: PORTBbits.RB0 = 0;
   522  0035C6  9081               	bcf	3969,0,c	;volatile
   523                           
   524                           ;main.c: 216: PORTBbits.RB1 = 0;
   525  0035C8  9281               	bcf	3969,1,c	;volatile
   526                           
   527                           ;main.c: 217: PORTBbits.RB2 = 0;
   528  0035CA  9481               	bcf	3969,2,c	;volatile
   529  0035CC                     l1404:
   530                           
   531                           ;main.c: 218: }
   532                           ;main.c: 219: }
   533                           ;main.c: 222: total += mainLevel;
   534  0035CC  C01C  F010         	movff	main@mainLevel,??_main
   535  0035D0  C01D  F011         	movff	main@mainLevel+1,??_main+1
   536  0035D4  0E00               	movlw	0
   537  0035D6  BE11               	btfsc	(??_main+1)& (0+255),7,c
   538  0035D8  0EFF               	movlw	255
   539  0035DA  6E12               	movwf	(??_main+2)& (0+255),c
   540  0035DC  6E13               	movwf	(??_main+3)& (0+255),c
   541  0035DE  5010               	movf	??_main,w,c
   542  0035E0  2614               	addwf	main@total,f,c
   543  0035E2  5011               	movf	??_main+1,w,c
   544  0035E4  2215               	addwfc	main@total+1,f,c
   545  0035E6  5012               	movf	??_main+2,w,c
   546  0035E8  2216               	addwfc	main@total+2,f,c
   547  0035EA  5013               	movf	??_main+3,w,c
   548  0035EC  2217               	addwfc	main@total+3,f,c
   549                           
   550                           ;main.c: 223: sampleCount++;
   551  0035EE  4A1E               	infsnz	main@sampleCount,f,c
   552  0035F0  2A1F               	incf	main@sampleCount+1,f,c
   553                           
   554                           ;main.c: 225: if (sampleCount == 200)
   555  0035F2  501E               	movf	main@sampleCount,w,c
   556  0035F4  0AC8               	xorlw	200
   557  0035F6  101F               	iorwf	main@sampleCount+1,w,c
   558  0035F8  A4D8               	btfss	status,2,c
   559  0035FA  D075               	goto	l1436
   560                           
   561                           ;main.c: 226: {
   562                           ;main.c: 227: average = total / sampleCount;
   563  0035FC  C014  F001         	movff	main@total,___aldiv@dividend
   564  003600  C015  F002         	movff	main@total+1,___aldiv@dividend+1
   565  003604  C016  F003         	movff	main@total+2,___aldiv@dividend+2
   566  003608  C017  F004         	movff	main@total+3,___aldiv@dividend+3
   567  00360C  C01E  F005         	movff	main@sampleCount,___aldiv@divisor
   568  003610  C01F  F006         	movff	main@sampleCount+1,___aldiv@divisor+1
   569  003614  0E00               	movlw	0
   570  003616  BE06               	btfsc	___aldiv@divisor+1,7,c
   571  003618  0EFF               	movlw	-1
   572  00361A  6E07               	movwf	___aldiv@divisor+2,c
   573  00361C  6E08               	movwf	___aldiv@divisor+3,c
   574  00361E  EC66  F019         	call	___aldiv	;wreg free
   575  003622  C001  F010         	movff	?___aldiv,??_main
   576  003626  C002  F011         	movff	?___aldiv+1,??_main+1
   577  00362A  C003  F012         	movff	?___aldiv+2,??_main+2
   578  00362E  C004  F013         	movff	?___aldiv+3,??_main+3
   579  003632  C010  F027         	movff	??_main,main@average
   580  003636  C011  F028         	movff	??_main+1,main@average+1
   581                           
   582                           ;main.c: 230: if (currentGainLevel <= 250 && currentGainLevel >= 10)
   583  00363A  502C               	movf	main@currentGainLevel+1,w,c
   584  00363C  0A80               	xorlw	128
   585  00363E  6EF3               	movwf	prodl,c
   586  003640  0E80               	movlw	128
   587  003642  5CF3               	subwf	prodl,w,c
   588  003644  0EFB               	movlw	251
   589  003646  B4D8               	btfsc	status,2,c
   590  003648  5C2B               	subwf	main@currentGainLevel,w,c
   591  00364A  B0D8               	btfsc	status,0,c
   592  00364C  D023               	goto	l1422
   593  00364E  502C               	movf	main@currentGainLevel+1,w,c
   594  003650  0A80               	xorlw	128
   595  003652  0F80               	addlw	-128
   596  003654  0E0A               	movlw	10
   597  003656  B4D8               	btfsc	status,2,c
   598  003658  5C2B               	subwf	main@currentGainLevel,w,c
   599  00365A  A0D8               	btfss	status,0,c
   600  00365C  D01B               	goto	l1422
   601                           
   602                           ;main.c: 231: {
   603                           ;main.c: 232: if (average < 100) currentGainLevel += 4;
   604  00365E  5028               	movf	main@average+1,w,c
   605  003660  0A80               	xorlw	128
   606  003662  6EF3               	movwf	prodl,c
   607  003664  0E80               	movlw	128
   608  003666  5CF3               	subwf	prodl,w,c
   609  003668  0E64               	movlw	100
   610  00366A  B4D8               	btfsc	status,2,c
   611  00366C  5C27               	subwf	main@average,w,c
   612  00366E  B0D8               	btfsc	status,0,c
   613  003670  D004               	goto	l56
   614  003672  0E04               	movlw	4
   615  003674  262B               	addwf	main@currentGainLevel,f,c
   616  003676  0E00               	movlw	0
   617  003678  222C               	addwfc	main@currentGainLevel+1,f,c
   618  00367A                     l56:
   619                           
   620                           ;main.c: 233: if (average > 100) currentGainLevel -= 4;
   621  00367A  5028               	movf	main@average+1,w,c
   622  00367C  0A80               	xorlw	128
   623  00367E  0F80               	addlw	-128
   624  003680  0E65               	movlw	101
   625  003682  B4D8               	btfsc	status,2,c
   626  003684  5C27               	subwf	main@average,w,c
   627  003686  A0D8               	btfss	status,0,c
   628  003688  D01F               	goto	l1430
   629  00368A  0EFC               	movlw	252
   630  00368C  262B               	addwf	main@currentGainLevel,f,c
   631  00368E  0EFF               	movlw	255
   632  003690  222C               	addwfc	main@currentGainLevel+1,f,c
   633  003692  D01A               	goto	l1430
   634  003694                     l1422:
   635                           
   636                           ;main.c: 235: else
   637                           ;main.c: 236: {
   638                           ;main.c: 237: if (currentGainLevel < 10) currentGainLevel = 10 + 1;
   639  003694  502C               	movf	main@currentGainLevel+1,w,c
   640  003696  0A80               	xorlw	128
   641  003698  6EF3               	movwf	prodl,c
   642  00369A  0E80               	movlw	128
   643  00369C  5CF3               	subwf	prodl,w,c
   644  00369E  0E0A               	movlw	10
   645  0036A0  B4D8               	btfsc	status,2,c
   646  0036A2  5C2B               	subwf	main@currentGainLevel,w,c
   647  0036A4  B0D8               	btfsc	status,0,c
   648  0036A6  D004               	goto	l1426
   649  0036A8  0E00               	movlw	0
   650  0036AA  6E2C               	movwf	main@currentGainLevel+1,c
   651  0036AC  0E0B               	movlw	11
   652  0036AE  6E2B               	movwf	main@currentGainLevel,c
   653  0036B0                     l1426:
   654                           
   655                           ;main.c: 238: if (currentGainLevel > 250) currentGainLevel = 250 - 1;
   656  0036B0  502C               	movf	main@currentGainLevel+1,w,c
   657  0036B2  0A80               	xorlw	128
   658  0036B4  0F80               	addlw	-128
   659  0036B6  0EFB               	movlw	251
   660  0036B8  B4D8               	btfsc	status,2,c
   661  0036BA  5C2B               	subwf	main@currentGainLevel,w,c
   662  0036BC  A0D8               	btfss	status,0,c
   663  0036BE  D004               	goto	l1430
   664  0036C0  0E00               	movlw	0
   665  0036C2  6E2C               	movwf	main@currentGainLevel+1,c
   666  0036C4  0EF9               	movlw	249
   667  0036C6  6E2B               	movwf	main@currentGainLevel,c
   668  0036C8                     l1430:
   669                           
   670                           ;main.c: 239: }
   671                           ;main.c: 241: setGainLevel(currentGainLevel);
   672  0036C8  502B               	movf	main@currentGainLevel,w,c
   673  0036CA  EC2D  F019         	call	_setGainLevel
   674                           
   675                           ;main.c: 243: sampleCount = 0;
   676  0036CE  0E00               	movlw	0
   677  0036D0  6E1F               	movwf	main@sampleCount+1,c
   678  0036D2  0E00               	movlw	0
   679  0036D4  6E1E               	movwf	main@sampleCount,c
   680                           
   681                           ;main.c: 244: total = 0;
   682  0036D6  0E00               	movlw	0
   683  0036D8  6E14               	movwf	main@total,c
   684  0036DA  0E00               	movlw	0
   685  0036DC  6E15               	movwf	main@total+1,c
   686  0036DE  0E00               	movlw	0
   687  0036E0  6E16               	movwf	main@total+2,c
   688  0036E2  0E00               	movlw	0
   689  0036E4  6E17               	movwf	main@total+3,c
   690  0036E6                     l1436:
   691                           
   692                           ;main.c: 245: }
   693                           ;main.c: 249: if (mode == 1)
   694  0036E6  0435               	decf	main@mode,w,c
   695  0036E8  A4D8               	btfss	status,2,c
   696  0036EA  D04C               	goto	l1474
   697                           
   698                           ;main.c: 250: {
   699                           ;main.c: 251: if (soundFlag == 0)
   700  0036EC  6626               	tstfsz	main@soundFlag,c
   701  0036EE  D01A               	goto	l1452
   702                           
   703                           ;main.c: 252: {
   704                           ;main.c: 253: if (average >= 80) soundDetectedCount++; else soundDetectedCount = 0;
   705  0036F0  5028               	movf	main@average+1,w,c
   706  0036F2  0A80               	xorlw	128
   707  0036F4  0F80               	addlw	-128
   708  0036F6  0E50               	movlw	80
   709  0036F8  B4D8               	btfsc	status,2,c
   710  0036FA  5C27               	subwf	main@average,w,c
   711  0036FC  A0D8               	btfss	status,0,c
   712  0036FE  D003               	goto	l1444
   713  003700  4A22               	infsnz	main@soundDetectedCount,f,c
   714  003702  2A23               	incf	main@soundDetectedCount+1,f,c
   715  003704  D004               	goto	l1446
   716  003706                     l1444:
   717  003706  0E00               	movlw	0
   718  003708  6E23               	movwf	main@soundDetectedCount+1,c
   719  00370A  0E00               	movlw	0
   720  00370C  6E22               	movwf	main@soundDetectedCount,c
   721  00370E                     l1446:
   722                           
   723                           ;main.c: 254: if (soundDetectedCount > 1500)
   724  00370E  5023               	movf	main@soundDetectedCount+1,w,c
   725  003710  0A80               	xorlw	128
   726  003712  0F7B               	addlw	-133
   727  003714  0EDD               	movlw	221
   728  003716  B4D8               	btfsc	status,2,c
   729  003718  5C22               	subwf	main@soundDetectedCount,w,c
   730  00371A  A0D8               	btfss	status,0,c
   731  00371C  D024               	goto	l1464
   732                           
   733                           ;main.c: 255: {
   734                           ;main.c: 256: soundFlag = 1;
   735  00371E  6E10               	movwf	??_main& (0+255),c
   736  003720  0E01               	movlw	1
   737  003722  D01B               	goto	L1
   738  003724                     l1452:
   739                           
   740                           ;main.c: 260: else
   741                           ;main.c: 261: {
   742                           ;main.c: 262: if (average < 50) soundDetectedCount++; else soundDetectedCount = 0;
   743  003724  5028               	movf	main@average+1,w,c
   744  003726  0A80               	xorlw	128
   745  003728  6EF3               	movwf	prodl,c
   746  00372A  0E80               	movlw	128
   747  00372C  5CF3               	subwf	prodl,w,c
   748  00372E  0E32               	movlw	50
   749  003730  B4D8               	btfsc	status,2,c
   750  003732  5C27               	subwf	main@average,w,c
   751  003734  B0D8               	btfsc	status,0,c
   752  003736  D003               	goto	l1456
   753  003738  4A22               	infsnz	main@soundDetectedCount,f,c
   754  00373A  2A23               	incf	main@soundDetectedCount+1,f,c
   755  00373C  D004               	goto	l1458
   756  00373E                     l1456:
   757  00373E  0E00               	movlw	0
   758  003740  6E23               	movwf	main@soundDetectedCount+1,c
   759  003742  0E00               	movlw	0
   760  003744  6E22               	movwf	main@soundDetectedCount,c
   761  003746                     l1458:
   762                           
   763                           ;main.c: 263: if (soundDetectedCount > 10000)
   764  003746  5023               	movf	main@soundDetectedCount+1,w,c
   765  003748  0A80               	xorlw	128
   766  00374A  0F59               	addlw	-167
   767  00374C  0E11               	movlw	17
   768  00374E  B4D8               	btfsc	status,2,c
   769  003750  5C22               	subwf	main@soundDetectedCount,w,c
   770  003752  A0D8               	btfss	status,0,c
   771  003754  D008               	goto	l1464
   772                           
   773                           ;main.c: 264: {
   774                           ;main.c: 265: soundFlag = 0;
   775  003756  6E10               	movwf	??_main& (0+255),c
   776  003758  0E00               	movlw	0
   777  00375A                     L1:
   778  00375A  6E26               	movwf	main@soundFlag,c
   779  00375C  5010               	movf	??_main& (0+255),w,c
   780                           
   781                           ;main.c: 266: soundDetectedCount = 0;
   782  00375E  0E00               	movlw	0
   783  003760  6E23               	movwf	main@soundDetectedCount+1,c
   784  003762  0E00               	movlw	0
   785  003764  6E22               	movwf	main@soundDetectedCount,c
   786  003766                     l1464:
   787                           
   788                           ;main.c: 267: }
   789                           ;main.c: 268: }
   790                           ;main.c: 270: if (soundFlag == 0) PORTBbits.RB3 = 1; else PORTBbits.RB3 = 0;
   791  003766  6626               	tstfsz	main@soundFlag,c
   792  003768  D002               	goto	l70
   793  00376A  8681               	bsf	3969,3,c	;volatile
   794  00376C  D001               	goto	l1468
   795  00376E                     l70:
   796  00376E  9681               	bcf	3969,3,c	;volatile
   797  003770                     l1468:
   798                           
   799                           ;main.c: 273: if (soundFlag == 1) mode = 2; else mode = 0;
   800  003770  0426               	decf	main@soundFlag,w,c
   801  003772  A4D8               	btfss	status,2,c
   802  003774  D003               	goto	l1472
   803  003776  6E10               	movwf	??_main& (0+255),c
   804  003778  0E02               	movlw	2
   805  00377A  D002               	goto	L2
   806  00377C                     l1472:
   807  00377C  6E10               	movwf	??_main& (0+255),c
   808  00377E  0E00               	movlw	0
   809  003780                     L2:
   810  003780  6E35               	movwf	main@mode,c
   811  003782  5010               	movf	??_main& (0+255),w,c
   812  003784                     l1474:
   813                           
   814                           ;main.c: 274: }
   815                           ;main.c: 277: if (mode == 0)
   816  003784  6635               	tstfsz	main@mode,c
   817  003786  D37D               	goto	l1880
   818                           
   819                           ;main.c: 278: {
   820                           ;main.c: 280: if ((highLevel > 600) && (clapCounter == 0))
   821  003788  5025               	movf	main@highLevel+1,w,c
   822  00378A  0A80               	xorlw	128
   823  00378C  0F7E               	addlw	-130
   824  00378E  0E59               	movlw	89
   825  003790  B4D8               	btfsc	status,2,c
   826  003792  5C24               	subwf	main@highLevel,w,c
   827  003794  A0D8               	btfss	status,0,c
   828  003796  D008               	goto	l1482
   829  003798  502A               	movf	main@clapCounter+1,w,c
   830  00379A  1029               	iorwf	main@clapCounter,w,c
   831  00379C  A4D8               	btfss	status,2,c
   832  00379E  D004               	goto	l1482
   833                           
   834                           ;main.c: 281: {
   835                           ;main.c: 282: clapCounter = 1;
   836  0037A0  0E00               	movlw	0
   837  0037A2  6E2A               	movwf	main@clapCounter+1,c
   838  0037A4  0E01               	movlw	1
   839  0037A6  6E29               	movwf	main@clapCounter,c
   840  0037A8                     l1482:
   841                           
   842                           ;main.c: 283: }
   843                           ;main.c: 285: if (clapCounter > 0) clapCounter++;
   844  0037A8  502A               	movf	main@clapCounter+1,w,c
   845  0037AA  0A80               	xorlw	128
   846  0037AC  0F80               	addlw	-128
   847  0037AE  0E01               	movlw	1
   848  0037B0  B4D8               	btfsc	status,2,c
   849  0037B2  5C29               	subwf	main@clapCounter,w,c
   850  0037B4  A0D8               	btfss	status,0,c
   851  0037B6  D002               	goto	l1486
   852  0037B8  4A29               	infsnz	main@clapCounter,f,c
   853  0037BA  2A2A               	incf	main@clapCounter+1,f,c
   854  0037BC                     l1486:
   855                           
   856                           ;main.c: 286: if (clapCounter > 1000)
   857  0037BC  502A               	movf	main@clapCounter+1,w,c
   858  0037BE  0A80               	xorlw	128
   859  0037C0  0F7D               	addlw	-131
   860  0037C2  0EE9               	movlw	233
   861  0037C4  B4D8               	btfsc	status,2,c
   862  0037C6  5C29               	subwf	main@clapCounter,w,c
   863  0037C8  A0D8               	btfss	status,0,c
   864  0037CA  D02F               	goto	l1510
   865                           
   866                           ;main.c: 287: {
   867                           ;main.c: 288: if (highLevel < 600)
   868  0037CC  5025               	movf	main@highLevel+1,w,c
   869  0037CE  0A80               	xorlw	128
   870  0037D0  6EF3               	movwf	prodl,c
   871  0037D2  0E82               	movlw	130
   872  0037D4  5CF3               	subwf	prodl,w,c
   873  0037D6  0E58               	movlw	88
   874  0037D8  B4D8               	btfsc	status,2,c
   875  0037DA  5C24               	subwf	main@highLevel,w,c
   876  0037DC  B0D8               	btfsc	status,0,c
   877  0037DE  D021               	goto	l1508
   878                           
   879                           ;main.c: 289: {
   880                           ;main.c: 291: clapCounter = 0;
   881  0037E0  0E00               	movlw	0
   882  0037E2  6E2A               	movwf	main@clapCounter+1,c
   883  0037E4  0E00               	movlw	0
   884  0037E6  6E29               	movwf	main@clapCounter,c
   885                           
   886                           ;main.c: 292: patternNumber++;
   887  0037E8  2A38               	incf	main@patternNumber,f,c
   888                           
   889                           ;main.c: 293: sequenceNumber = 0;
   890  0037EA  6E10               	movwf	??_main& (0+255),c
   891  0037EC  0E00               	movlw	0
   892  0037EE  6E3E               	movwf	main@sequenceNumber,c
   893  0037F0  5010               	movf	??_main& (0+255),w,c
   894                           
   895                           ;main.c: 294: stepNumber = 0;
   896  0037F2  0E00               	movlw	0
   897  0037F4  6E40               	movwf	main@stepNumber+1,c
   898  0037F6  0E00               	movlw	0
   899  0037F8  6E3F               	movwf	main@stepNumber,c
   900                           
   901                           ;main.c: 295: currentStep = 0;
   902  0037FA  0E00               	movlw	0
   903  0037FC  6E3B               	movwf	main@currentStep+1,c
   904  0037FE  0E00               	movlw	0
   905  003800  6E3A               	movwf	main@currentStep,c
   906                           
   907                           ;main.c: 296: brightness = 0;
   908  003802  6E10               	movwf	??_main& (0+255),c
   909  003804  0E00               	movlw	0
   910  003806  6E39               	movwf	main@brightness,c
   911  003808  5010               	movf	??_main& (0+255),w,c
   912                           
   913                           ;main.c: 297: sequenceRepeats = 0;
   914  00380A  0E00               	movlw	0
   915  00380C  6E32               	movwf	main@sequenceRepeats+1,c
   916  00380E  0E00               	movlw	0
   917  003810  6E31               	movwf	main@sequenceRepeats,c
   918                           
   919                           ;main.c: 298: if (patternNumber > 4) patternNumber = 0;
   920  003812  0E04               	movlw	4
   921  003814  6438               	cpfsgt	main@patternNumber,c
   922  003816  D009               	goto	l1510
   923  003818  6E10               	movwf	??_main& (0+255),c
   924  00381A  0E00               	movlw	0
   925  00381C  6E38               	movwf	main@patternNumber,c
   926  00381E  5010               	movf	??_main& (0+255),w,c
   927  003820  D004               	goto	l1510
   928  003822                     l1508:
   929                           
   930                           ;main.c: 300: else clapCounter = 1;
   931  003822  0E00               	movlw	0
   932  003824  6E2A               	movwf	main@clapCounter+1,c
   933  003826  0E01               	movlw	1
   934  003828  6E29               	movwf	main@clapCounter,c
   935  00382A                     l1510:
   936                           
   937                           ;main.c: 301: }
   938                           ;main.c: 303: if (clapCounter > 0) PORTBbits.RB5 = 1; else PORTBbits.RB5 = 0;
   939  00382A  502A               	movf	main@clapCounter+1,w,c
   940  00382C  0A80               	xorlw	128
   941  00382E  0F80               	addlw	-128
   942  003830  0E01               	movlw	1
   943  003832  B4D8               	btfsc	status,2,c
   944  003834  5C29               	subwf	main@clapCounter,w,c
   945  003836  A0D8               	btfss	status,0,c
   946  003838  D002               	goto	l81
   947  00383A  8A81               	bsf	3969,5,c	;volatile
   948  00383C  D001               	goto	l82
   949  00383E                     l81:
   950  00383E  9A81               	bcf	3969,5,c	;volatile
   951  003840                     l82:
   952                           
   953                           ;main.c: 306: if (patternNumber == 0)
   954  003840  6638               	tstfsz	main@patternNumber,c
   955  003842  D0CF               	goto	l1606
   956                           
   957                           ;main.c: 307: {
   958                           ;main.c: 308: if (sequenceNumber == 0)
   959  003844  663E               	tstfsz	main@sequenceNumber,c
   960  003846  D01E               	goto	l1528
   961                           
   962                           ;main.c: 309: {
   963                           ;main.c: 310: if (currentStep != stepNumber)
   964  003848  5040               	movf	main@stepNumber+1,w,c
   965  00384A  183B               	xorwf	main@currentStep+1,w,c
   966  00384C  E102               	bnz	u845
   967  00384E  503F               	movf	main@stepNumber,w,c
   968  003850  183A               	xorwf	main@currentStep,w,c
   969  003852                     u845:
   970  003852  B4D8               	btfsc	status,2,c
   971  003854  D013               	goto	l1526
   972                           
   973                           ;main.c: 311: {
   974                           ;main.c: 312: currentStep = stepNumber;
   975  003856  C03F  F03A         	movff	main@stepNumber,main@currentStep
   976  00385A  C040  F03B         	movff	main@stepNumber+1,main@currentStep+1
   977                           
   978                           ;main.c: 313: if (currentStep < 16) brightness += 2; else brightness -= 2;
   979  00385E  503B               	movf	main@currentStep+1,w,c
   980  003860  0A80               	xorlw	128
   981  003862  6EF3               	movwf	prodl,c
   982  003864  0E80               	movlw	128
   983  003866  5CF3               	subwf	prodl,w,c
   984  003868  0E10               	movlw	16
   985  00386A  B4D8               	btfsc	status,2,c
   986  00386C  5C3A               	subwf	main@currentStep,w,c
   987  00386E  B0D8               	btfsc	status,0,c
   988  003870  D003               	goto	l1524
   989  003872  0E02               	movlw	2
   990  003874  2639               	addwf	main@brightness,f,c
   991  003876  D002               	goto	l1526
   992  003878                     l1524:
   993  003878  0E02               	movlw	2
   994  00387A  5E39               	subwf	main@brightness,f,c
   995  00387C                     l1526:
   996                           
   997                           ;main.c: 314: }
   998                           ;main.c: 315: highPWM = brightness;
   999  00387C  C039  F02F         	movff	main@brightness,main@highPWM
  1000  003880  6A30               	clrf	main@highPWM+1,c
  1001                           
  1002                           ;main.c: 316: } else highPWM = 0;
  1003  003882  D004               	goto	l1530
  1004  003884                     l1528:
  1005  003884  0E00               	movlw	0
  1006  003886  6E30               	movwf	main@highPWM+1,c
  1007  003888  0E00               	movlw	0
  1008  00388A  6E2F               	movwf	main@highPWM,c
  1009  00388C                     l1530:
  1010                           
  1011                           ;main.c: 318: if (sequenceNumber == 1)
  1012  00388C  043E               	decf	main@sequenceNumber,w,c
  1013  00388E  A4D8               	btfss	status,2,c
  1014  003890  D01E               	goto	l1544
  1015                           
  1016                           ;main.c: 319: {
  1017                           ;main.c: 320: if (currentStep != stepNumber)
  1018  003892  5040               	movf	main@stepNumber+1,w,c
  1019  003894  183B               	xorwf	main@currentStep+1,w,c
  1020  003896  E102               	bnz	u875
  1021  003898  503F               	movf	main@stepNumber,w,c
  1022  00389A  183A               	xorwf	main@currentStep,w,c
  1023  00389C                     u875:
  1024  00389C  B4D8               	btfsc	status,2,c
  1025  00389E  D013               	goto	l1542
  1026                           
  1027                           ;main.c: 321: {
  1028                           ;main.c: 322: currentStep = stepNumber;
  1029  0038A0  C03F  F03A         	movff	main@stepNumber,main@currentStep
  1030  0038A4  C040  F03B         	movff	main@stepNumber+1,main@currentStep+1
  1031                           
  1032                           ;main.c: 324: if (currentStep < 16) brightness += 2; else brightness -= 2;
  1033  0038A8  503B               	movf	main@currentStep+1,w,c
  1034  0038AA  0A80               	xorlw	128
  1035  0038AC  6EF3               	movwf	prodl,c
  1036  0038AE  0E80               	movlw	128
  1037  0038B0  5CF3               	subwf	prodl,w,c
  1038  0038B2  0E10               	movlw	16
  1039  0038B4  B4D8               	btfsc	status,2,c
  1040  0038B6  5C3A               	subwf	main@currentStep,w,c
  1041  0038B8  B0D8               	btfsc	status,0,c
  1042  0038BA  D003               	goto	l1540
  1043  0038BC  0E02               	movlw	2
  1044  0038BE  2639               	addwf	main@brightness,f,c
  1045  0038C0  D002               	goto	l1542
  1046  0038C2                     l1540:
  1047  0038C2  0E02               	movlw	2
  1048  0038C4  5E39               	subwf	main@brightness,f,c
  1049  0038C6                     l1542:
  1050                           
  1051                           ;main.c: 325: }
  1052                           ;main.c: 326: midPWM = brightness;
  1053  0038C6  C039  F036         	movff	main@brightness,main@midPWM
  1054  0038CA  6A37               	clrf	main@midPWM+1,c
  1055                           
  1056                           ;main.c: 327: } else if (sequenceNumber != 3) midPWM = 0;
  1057  0038CC  D008               	goto	l1548
  1058  0038CE                     l1544:
  1059  0038CE  503E               	movf	main@sequenceNumber,w,c
  1060  0038D0  0A03               	xorlw	3
  1061  0038D2  B4D8               	btfsc	status,2,c
  1062  0038D4  D004               	goto	l1548
  1063  0038D6  0E00               	movlw	0
  1064  0038D8  6E37               	movwf	main@midPWM+1,c
  1065  0038DA  0E00               	movlw	0
  1066  0038DC  6E36               	movwf	main@midPWM,c
  1067  0038DE                     l1548:
  1068                           
  1069                           ;main.c: 329: if (sequenceNumber == 2)
  1070  0038DE  503E               	movf	main@sequenceNumber,w,c
  1071  0038E0  0A02               	xorlw	2
  1072  0038E2  A4D8               	btfss	status,2,c
  1073  0038E4  D01E               	goto	l1562
  1074                           
  1075                           ;main.c: 330: {
  1076                           ;main.c: 331: if (currentStep != stepNumber)
  1077  0038E6  5040               	movf	main@stepNumber+1,w,c
  1078  0038E8  183B               	xorwf	main@currentStep+1,w,c
  1079  0038EA  E102               	bnz	u915
  1080  0038EC  503F               	movf	main@stepNumber,w,c
  1081  0038EE  183A               	xorwf	main@currentStep,w,c
  1082  0038F0                     u915:
  1083  0038F0  B4D8               	btfsc	status,2,c
  1084  0038F2  D013               	goto	l1560
  1085                           
  1086                           ;main.c: 332: {
  1087                           ;main.c: 333: currentStep = stepNumber;
  1088  0038F4  C03F  F03A         	movff	main@stepNumber,main@currentStep
  1089  0038F8  C040  F03B         	movff	main@stepNumber+1,main@currentStep+1
  1090                           
  1091                           ;main.c: 334: if (currentStep < 16) brightness += 2; else brightness -= 2;
  1092  0038FC  503B               	movf	main@currentStep+1,w,c
  1093  0038FE  0A80               	xorlw	128
  1094  003900  6EF3               	movwf	prodl,c
  1095  003902  0E80               	movlw	128
  1096  003904  5CF3               	subwf	prodl,w,c
  1097  003906  0E10               	movlw	16
  1098  003908  B4D8               	btfsc	status,2,c
  1099  00390A  5C3A               	subwf	main@currentStep,w,c
  1100  00390C  B0D8               	btfsc	status,0,c
  1101  00390E  D003               	goto	l1558
  1102  003910  0E02               	movlw	2
  1103  003912  2639               	addwf	main@brightness,f,c
  1104  003914  D002               	goto	l1560
  1105  003916                     l1558:
  1106  003916  0E02               	movlw	2
  1107  003918  5E39               	subwf	main@brightness,f,c
  1108  00391A                     l1560:
  1109                           
  1110                           ;main.c: 335: }
  1111                           ;main.c: 336: lowPWM = brightness;
  1112  00391A  C039  F02D         	movff	main@brightness,main@lowPWM
  1113  00391E  6A2E               	clrf	main@lowPWM+1,c
  1114                           
  1115                           ;main.c: 337: } else lowPWM = 0;
  1116  003920  D004               	goto	l1564
  1117  003922                     l1562:
  1118  003922  0E00               	movlw	0
  1119  003924  6E2E               	movwf	main@lowPWM+1,c
  1120  003926  0E00               	movlw	0
  1121  003928  6E2D               	movwf	main@lowPWM,c
  1122  00392A                     l1564:
  1123                           
  1124                           ;main.c: 339: if (sequenceNumber == 3)
  1125  00392A  503E               	movf	main@sequenceNumber,w,c
  1126  00392C  0A03               	xorlw	3
  1127  00392E  A4D8               	btfss	status,2,c
  1128  003930  D01E               	goto	l1578
  1129                           
  1130                           ;main.c: 340: {
  1131                           ;main.c: 341: if (currentStep != stepNumber)
  1132  003932  5040               	movf	main@stepNumber+1,w,c
  1133  003934  183B               	xorwf	main@currentStep+1,w,c
  1134  003936  E102               	bnz	u945
  1135  003938  503F               	movf	main@stepNumber,w,c
  1136  00393A  183A               	xorwf	main@currentStep,w,c
  1137  00393C                     u945:
  1138  00393C  B4D8               	btfsc	status,2,c
  1139  00393E  D013               	goto	l1576
  1140                           
  1141                           ;main.c: 342: {
  1142                           ;main.c: 343: currentStep = stepNumber;
  1143  003940  C03F  F03A         	movff	main@stepNumber,main@currentStep
  1144  003944  C040  F03B         	movff	main@stepNumber+1,main@currentStep+1
  1145                           
  1146                           ;main.c: 345: if (currentStep < 16) brightness += 2; else brightness -= 2;
  1147  003948  503B               	movf	main@currentStep+1,w,c
  1148  00394A  0A80               	xorlw	128
  1149  00394C  6EF3               	movwf	prodl,c
  1150  00394E  0E80               	movlw	128
  1151  003950  5CF3               	subwf	prodl,w,c
  1152  003952  0E10               	movlw	16
  1153  003954  B4D8               	btfsc	status,2,c
  1154  003956  5C3A               	subwf	main@currentStep,w,c
  1155  003958  B0D8               	btfsc	status,0,c
  1156  00395A  D003               	goto	l1574
  1157  00395C  0E02               	movlw	2
  1158  00395E  2639               	addwf	main@brightness,f,c
  1159  003960  D002               	goto	l1576
  1160  003962                     l1574:
  1161  003962  0E02               	movlw	2
  1162  003964  5E39               	subwf	main@brightness,f,c
  1163  003966                     l1576:
  1164                           
  1165                           ;main.c: 346: }
  1166                           ;main.c: 347: midPWM = brightness;
  1167  003966  C039  F036         	movff	main@brightness,main@midPWM
  1168  00396A  6A37               	clrf	main@midPWM+1,c
  1169                           
  1170                           ;main.c: 348: } else if (sequenceNumber != 1) midPWM = 0;
  1171  00396C  D007               	goto	l1582
  1172  00396E                     l1578:
  1173  00396E  043E               	decf	main@sequenceNumber,w,c
  1174  003970  B4D8               	btfsc	status,2,c
  1175  003972  D004               	goto	l1582
  1176  003974  0E00               	movlw	0
  1177  003976  6E37               	movwf	main@midPWM+1,c
  1178  003978  0E00               	movlw	0
  1179  00397A  6E36               	movwf	main@midPWM,c
  1180  00397C                     l1582:
  1181                           
  1182                           ;main.c: 350: if (tickCounter > 6)
  1183  00397C  5034               	movf	main@tickCounter+1,w,c
  1184  00397E  0A80               	xorlw	128
  1185  003980  0F80               	addlw	-128
  1186  003982  0E07               	movlw	7
  1187  003984  B4D8               	btfsc	status,2,c
  1188  003986  5C33               	subwf	main@tickCounter,w,c
  1189  003988  A0D8               	btfss	status,0,c
  1190  00398A  D02B               	goto	l1606
  1191                           
  1192                           ;main.c: 351: {
  1193                           ;main.c: 352: stepNumber++;
  1194  00398C  4A3F               	infsnz	main@stepNumber,f,c
  1195  00398E  2A40               	incf	main@stepNumber+1,f,c
  1196                           
  1197                           ;main.c: 353: tickCounter = 0;
  1198  003990  0E00               	movlw	0
  1199  003992  6E34               	movwf	main@tickCounter+1,c
  1200  003994  0E00               	movlw	0
  1201  003996  6E33               	movwf	main@tickCounter,c
  1202                           
  1203                           ;main.c: 355: if (stepNumber == 31)
  1204  003998  503F               	movf	main@stepNumber,w,c
  1205  00399A  0A1F               	xorlw	31
  1206  00399C  1040               	iorwf	main@stepNumber+1,w,c
  1207  00399E  A4D8               	btfss	status,2,c
  1208  0039A0  D020               	goto	l1606
  1209                           
  1210                           ;main.c: 356: {
  1211                           ;main.c: 357: stepNumber = 0;
  1212  0039A2  0E00               	movlw	0
  1213  0039A4  6E40               	movwf	main@stepNumber+1,c
  1214  0039A6  0E00               	movlw	0
  1215  0039A8  6E3F               	movwf	main@stepNumber,c
  1216                           
  1217                           ;main.c: 358: sequenceNumber++;
  1218  0039AA  2A3E               	incf	main@sequenceNumber,f,c
  1219                           
  1220                           ;main.c: 359: brightness = 0;
  1221  0039AC  6E10               	movwf	??_main& (0+255),c
  1222  0039AE  0E00               	movlw	0
  1223  0039B0  6E39               	movwf	main@brightness,c
  1224  0039B2  5010               	movf	??_main& (0+255),w,c
  1225                           
  1226                           ;main.c: 361: if (sequenceNumber == 4)
  1227  0039B4  503E               	movf	main@sequenceNumber,w,c
  1228  0039B6  0A04               	xorlw	4
  1229  0039B8  A4D8               	btfss	status,2,c
  1230  0039BA  D013               	goto	l1606
  1231                           
  1232                           ;main.c: 362: {
  1233                           ;main.c: 363: sequenceNumber = 0;
  1234  0039BC  6E10               	movwf	??_main& (0+255),c
  1235  0039BE  0E00               	movlw	0
  1236  0039C0  6E3E               	movwf	main@sequenceNumber,c
  1237  0039C2  5010               	movf	??_main& (0+255),w,c
  1238                           
  1239                           ;main.c: 364: sequenceRepeats++;
  1240  0039C4  4A31               	infsnz	main@sequenceRepeats,f,c
  1241  0039C6  2A32               	incf	main@sequenceRepeats+1,f,c
  1242                           
  1243                           ;main.c: 365: if (sequenceRepeats > 10)
  1244  0039C8  5032               	movf	main@sequenceRepeats+1,w,c
  1245  0039CA  0A80               	xorlw	128
  1246  0039CC  0F80               	addlw	-128
  1247  0039CE  0E0B               	movlw	11
  1248  0039D0  B4D8               	btfsc	status,2,c
  1249  0039D2  5C31               	subwf	main@sequenceRepeats,w,c
  1250  0039D4  A0D8               	btfss	status,0,c
  1251  0039D6  D005               	goto	l1606
  1252                           
  1253                           ;main.c: 366: {
  1254                           ;main.c: 367: sequenceRepeats = 0;
  1255  0039D8  0E00               	movlw	0
  1256  0039DA  6E32               	movwf	main@sequenceRepeats+1,c
  1257  0039DC  0E00               	movlw	0
  1258  0039DE  6E31               	movwf	main@sequenceRepeats,c
  1259                           
  1260                           ;main.c: 368: patternNumber++;
  1261  0039E0  2A38               	incf	main@patternNumber,f,c
  1262  0039E2                     l1606:
  1263                           
  1264                           ;main.c: 369: }
  1265                           ;main.c: 370: }
  1266                           ;main.c: 371: }
  1267                           ;main.c: 372: }
  1268                           ;main.c: 373: }
  1269                           ;main.c: 376: if (patternNumber == 1)
  1270  0039E2  0438               	decf	main@patternNumber,w,c
  1271  0039E4  A4D8               	btfss	status,2,c
  1272  0039E6  D03F               	goto	l1634
  1273                           
  1274                           ;main.c: 377: {
  1275                           ;main.c: 378: highPWM = 31;
  1276  0039E8  0E00               	movlw	0
  1277  0039EA  6E30               	movwf	main@highPWM+1,c
  1278  0039EC  0E1F               	movlw	31
  1279  0039EE  6E2F               	movwf	main@highPWM,c
  1280                           
  1281                           ;main.c: 379: midPWM = 31;
  1282  0039F0  0E00               	movlw	0
  1283  0039F2  6E37               	movwf	main@midPWM+1,c
  1284  0039F4  0E1F               	movlw	31
  1285  0039F6  6E36               	movwf	main@midPWM,c
  1286                           
  1287                           ;main.c: 380: lowPWM = 31;
  1288  0039F8  0E00               	movlw	0
  1289  0039FA  6E2E               	movwf	main@lowPWM+1,c
  1290  0039FC  0E1F               	movlw	31
  1291  0039FE  6E2D               	movwf	main@lowPWM,c
  1292                           
  1293                           ;main.c: 382: if (tickCounter > 8)
  1294  003A00  5034               	movf	main@tickCounter+1,w,c
  1295  003A02  0A80               	xorlw	128
  1296  003A04  0F80               	addlw	-128
  1297  003A06  0E09               	movlw	9
  1298  003A08  B4D8               	btfsc	status,2,c
  1299  003A0A  5C33               	subwf	main@tickCounter,w,c
  1300  003A0C  A0D8               	btfss	status,0,c
  1301  003A0E  D02B               	goto	l1634
  1302                           
  1303                           ;main.c: 383: {
  1304                           ;main.c: 384: stepNumber++;
  1305  003A10  4A3F               	infsnz	main@stepNumber,f,c
  1306  003A12  2A40               	incf	main@stepNumber+1,f,c
  1307                           
  1308                           ;main.c: 385: tickCounter = 0;
  1309  003A14  0E00               	movlw	0
  1310  003A16  6E34               	movwf	main@tickCounter+1,c
  1311  003A18  0E00               	movlw	0
  1312  003A1A  6E33               	movwf	main@tickCounter,c
  1313                           
  1314                           ;main.c: 387: if (stepNumber == 3)
  1315  003A1C  503F               	movf	main@stepNumber,w,c
  1316  003A1E  0A03               	xorlw	3
  1317  003A20  1040               	iorwf	main@stepNumber+1,w,c
  1318  003A22  A4D8               	btfss	status,2,c
  1319  003A24  D020               	goto	l1634
  1320                           
  1321                           ;main.c: 388: {
  1322                           ;main.c: 389: stepNumber = 0;
  1323  003A26  0E00               	movlw	0
  1324  003A28  6E40               	movwf	main@stepNumber+1,c
  1325  003A2A  0E00               	movlw	0
  1326  003A2C  6E3F               	movwf	main@stepNumber,c
  1327                           
  1328                           ;main.c: 390: sequenceNumber++;
  1329  003A2E  2A3E               	incf	main@sequenceNumber,f,c
  1330                           
  1331                           ;main.c: 391: brightness = 0;
  1332  003A30  6E10               	movwf	??_main& (0+255),c
  1333  003A32  0E00               	movlw	0
  1334  003A34  6E39               	movwf	main@brightness,c
  1335  003A36  5010               	movf	??_main& (0+255),w,c
  1336                           
  1337                           ;main.c: 393: if (sequenceNumber == 5)
  1338  003A38  503E               	movf	main@sequenceNumber,w,c
  1339  003A3A  0A05               	xorlw	5
  1340  003A3C  A4D8               	btfss	status,2,c
  1341  003A3E  D013               	goto	l1634
  1342                           
  1343                           ;main.c: 394: {
  1344                           ;main.c: 395: sequenceNumber = 0;
  1345  003A40  6E10               	movwf	??_main& (0+255),c
  1346  003A42  0E00               	movlw	0
  1347  003A44  6E3E               	movwf	main@sequenceNumber,c
  1348  003A46  5010               	movf	??_main& (0+255),w,c
  1349                           
  1350                           ;main.c: 396: sequenceRepeats++;
  1351  003A48  4A31               	infsnz	main@sequenceRepeats,f,c
  1352  003A4A  2A32               	incf	main@sequenceRepeats+1,f,c
  1353                           
  1354                           ;main.c: 397: if (sequenceRepeats > 40)
  1355  003A4C  5032               	movf	main@sequenceRepeats+1,w,c
  1356  003A4E  0A80               	xorlw	128
  1357  003A50  0F80               	addlw	-128
  1358  003A52  0E29               	movlw	41
  1359  003A54  B4D8               	btfsc	status,2,c
  1360  003A56  5C31               	subwf	main@sequenceRepeats,w,c
  1361  003A58  A0D8               	btfss	status,0,c
  1362  003A5A  D005               	goto	l1634
  1363                           
  1364                           ;main.c: 398: {
  1365                           ;main.c: 399: sequenceRepeats = 0;
  1366  003A5C  0E00               	movlw	0
  1367  003A5E  6E32               	movwf	main@sequenceRepeats+1,c
  1368  003A60  0E00               	movlw	0
  1369  003A62  6E31               	movwf	main@sequenceRepeats,c
  1370                           
  1371                           ;main.c: 400: patternNumber++;
  1372  003A64  2A38               	incf	main@patternNumber,f,c
  1373  003A66                     l1634:
  1374                           
  1375                           ;main.c: 401: }
  1376                           ;main.c: 402: }
  1377                           ;main.c: 403: }
  1378                           ;main.c: 404: }
  1379                           ;main.c: 405: }
  1380                           ;main.c: 408: if (patternNumber == 2)
  1381  003A66  5038               	movf	main@patternNumber,w,c
  1382  003A68  0A02               	xorlw	2
  1383  003A6A  A4D8               	btfss	status,2,c
  1384  003A6C  D100               	goto	l1760
  1385                           
  1386                           ;main.c: 409: {
  1387                           ;main.c: 410: if (sequenceNumber == 0)
  1388  003A6E  663E               	tstfsz	main@sequenceNumber,c
  1389  003A70  D025               	goto	l1656
  1390                           
  1391                           ;main.c: 411: {
  1392                           ;main.c: 412: if (stepNumber == 0) highPWM = 31; else highPWM = 0;
  1393  003A72  5040               	movf	main@stepNumber+1,w,c
  1394  003A74  103F               	iorwf	main@stepNumber,w,c
  1395  003A76  A4D8               	btfss	status,2,c
  1396  003A78  D004               	goto	l1642
  1397  003A7A  0E00               	movlw	0
  1398  003A7C  6E30               	movwf	main@highPWM+1,c
  1399  003A7E  0E1F               	movlw	31
  1400  003A80  D003               	goto	L3
  1401  003A82                     l1642:
  1402  003A82  0E00               	movlw	0
  1403  003A84  6E30               	movwf	main@highPWM+1,c
  1404  003A86  0E00               	movlw	0
  1405  003A88                     L3:
  1406  003A88  6E2F               	movwf	main@highPWM,c
  1407                           
  1408                           ;main.c: 413: if (stepNumber == 1) midPWM = 31; else midPWM = 0;
  1409  003A8A  043F               	decf	main@stepNumber,w,c
  1410  003A8C  1040               	iorwf	main@stepNumber+1,w,c
  1411  003A8E  A4D8               	btfss	status,2,c
  1412  003A90  D004               	goto	l1648
  1413  003A92  0E00               	movlw	0
  1414  003A94  6E37               	movwf	main@midPWM+1,c
  1415  003A96  0E1F               	movlw	31
  1416  003A98  D003               	goto	L4
  1417  003A9A                     l1648:
  1418  003A9A  0E00               	movlw	0
  1419  003A9C  6E37               	movwf	main@midPWM+1,c
  1420  003A9E  0E00               	movlw	0
  1421  003AA0                     L4:
  1422  003AA0  6E36               	movwf	main@midPWM,c
  1423                           
  1424                           ;main.c: 414: if (stepNumber == 2) lowPWM = 31; else lowPWM = 0;
  1425  003AA2  503F               	movf	main@stepNumber,w,c
  1426  003AA4  0A02               	xorlw	2
  1427  003AA6  1040               	iorwf	main@stepNumber+1,w,c
  1428  003AA8  A4D8               	btfss	status,2,c
  1429  003AAA  D004               	goto	l1654
  1430  003AAC  0E00               	movlw	0
  1431  003AAE  6E2E               	movwf	main@lowPWM+1,c
  1432  003AB0  0E1F               	movlw	31
  1433  003AB2  D003               	goto	L5
  1434  003AB4                     l1654:
  1435  003AB4  0E00               	movlw	0
  1436  003AB6  6E2E               	movwf	main@lowPWM+1,c
  1437  003AB8  0E00               	movlw	0
  1438  003ABA                     L5:
  1439  003ABA  6E2D               	movwf	main@lowPWM,c
  1440  003ABC                     l1656:
  1441                           
  1442                           ;main.c: 415: }
  1443                           ;main.c: 417: if (sequenceNumber == 1)
  1444  003ABC  043E               	decf	main@sequenceNumber,w,c
  1445  003ABE  A4D8               	btfss	status,2,c
  1446  003AC0  D025               	goto	l1676
  1447                           
  1448                           ;main.c: 418: {
  1449                           ;main.c: 419: if (stepNumber == 0) highPWM = 31; else highPWM = 0;
  1450  003AC2  5040               	movf	main@stepNumber+1,w,c
  1451  003AC4  103F               	iorwf	main@stepNumber,w,c
  1452  003AC6  A4D8               	btfss	status,2,c
  1453  003AC8  D004               	goto	l1662
  1454  003ACA  0E00               	movlw	0
  1455  003ACC  6E30               	movwf	main@highPWM+1,c
  1456  003ACE  0E1F               	movlw	31
  1457  003AD0  D003               	goto	L6
  1458  003AD2                     l1662:
  1459  003AD2  0E00               	movlw	0
  1460  003AD4  6E30               	movwf	main@highPWM+1,c
  1461  003AD6  0E00               	movlw	0
  1462  003AD8                     L6:
  1463  003AD8  6E2F               	movwf	main@highPWM,c
  1464                           
  1465                           ;main.c: 420: if (stepNumber == 1) lowPWM = 31; else lowPWM = 0;
  1466  003ADA  043F               	decf	main@stepNumber,w,c
  1467  003ADC  1040               	iorwf	main@stepNumber+1,w,c
  1468  003ADE  A4D8               	btfss	status,2,c
  1469  003AE0  D004               	goto	l1668
  1470  003AE2  0E00               	movlw	0
  1471  003AE4  6E2E               	movwf	main@lowPWM+1,c
  1472  003AE6  0E1F               	movlw	31
  1473  003AE8  D003               	goto	L7
  1474  003AEA                     l1668:
  1475  003AEA  0E00               	movlw	0
  1476  003AEC  6E2E               	movwf	main@lowPWM+1,c
  1477  003AEE  0E00               	movlw	0
  1478  003AF0                     L7:
  1479  003AF0  6E2D               	movwf	main@lowPWM,c
  1480                           
  1481                           ;main.c: 421: if (stepNumber == 2) midPWM = 31; else midPWM = 0;
  1482  003AF2  503F               	movf	main@stepNumber,w,c
  1483  003AF4  0A02               	xorlw	2
  1484  003AF6  1040               	iorwf	main@stepNumber+1,w,c
  1485  003AF8  A4D8               	btfss	status,2,c
  1486  003AFA  D004               	goto	l1674
  1487  003AFC  0E00               	movlw	0
  1488  003AFE  6E37               	movwf	main@midPWM+1,c
  1489  003B00  0E1F               	movlw	31
  1490  003B02  D003               	goto	L8
  1491  003B04                     l1674:
  1492  003B04  0E00               	movlw	0
  1493  003B06  6E37               	movwf	main@midPWM+1,c
  1494  003B08  0E00               	movlw	0
  1495  003B0A                     L8:
  1496  003B0A  6E36               	movwf	main@midPWM,c
  1497  003B0C                     l1676:
  1498                           
  1499                           ;main.c: 422: }
  1500                           ;main.c: 424: if (sequenceNumber == 2)
  1501  003B0C  503E               	movf	main@sequenceNumber,w,c
  1502  003B0E  0A02               	xorlw	2
  1503  003B10  A4D8               	btfss	status,2,c
  1504  003B12  D025               	goto	l1696
  1505                           
  1506                           ;main.c: 425: {
  1507                           ;main.c: 426: if (stepNumber == 0) lowPWM = 31; else lowPWM = 0;
  1508  003B14  5040               	movf	main@stepNumber+1,w,c
  1509  003B16  103F               	iorwf	main@stepNumber,w,c
  1510  003B18  A4D8               	btfss	status,2,c
  1511  003B1A  D004               	goto	l1682
  1512  003B1C  0E00               	movlw	0
  1513  003B1E  6E2E               	movwf	main@lowPWM+1,c
  1514  003B20  0E1F               	movlw	31
  1515  003B22  D003               	goto	L9
  1516  003B24                     l1682:
  1517  003B24  0E00               	movlw	0
  1518  003B26  6E2E               	movwf	main@lowPWM+1,c
  1519  003B28  0E00               	movlw	0
  1520  003B2A                     L9:
  1521  003B2A  6E2D               	movwf	main@lowPWM,c
  1522                           
  1523                           ;main.c: 427: if (stepNumber == 1) highPWM = 31; else highPWM = 0;
  1524  003B2C  043F               	decf	main@stepNumber,w,c
  1525  003B2E  1040               	iorwf	main@stepNumber+1,w,c
  1526  003B30  A4D8               	btfss	status,2,c
  1527  003B32  D004               	goto	l1688
  1528  003B34  0E00               	movlw	0
  1529  003B36  6E30               	movwf	main@highPWM+1,c
  1530  003B38  0E1F               	movlw	31
  1531  003B3A  D003               	goto	L10
  1532  003B3C                     l1688:
  1533  003B3C  0E00               	movlw	0
  1534  003B3E  6E30               	movwf	main@highPWM+1,c
  1535  003B40  0E00               	movlw	0
  1536  003B42                     L10:
  1537  003B42  6E2F               	movwf	main@highPWM,c
  1538                           
  1539                           ;main.c: 428: if (stepNumber == 2) midPWM = 31; else midPWM = 0;
  1540  003B44  503F               	movf	main@stepNumber,w,c
  1541  003B46  0A02               	xorlw	2
  1542  003B48  1040               	iorwf	main@stepNumber+1,w,c
  1543  003B4A  A4D8               	btfss	status,2,c
  1544  003B4C  D004               	goto	l1694
  1545  003B4E  0E00               	movlw	0
  1546  003B50  6E37               	movwf	main@midPWM+1,c
  1547  003B52  0E1F               	movlw	31
  1548  003B54  D003               	goto	L11
  1549  003B56                     l1694:
  1550  003B56  0E00               	movlw	0
  1551  003B58  6E37               	movwf	main@midPWM+1,c
  1552  003B5A  0E00               	movlw	0
  1553  003B5C                     L11:
  1554  003B5C  6E36               	movwf	main@midPWM,c
  1555  003B5E                     l1696:
  1556                           
  1557                           ;main.c: 429: }
  1558                           ;main.c: 431: if (sequenceNumber == 3)
  1559  003B5E  503E               	movf	main@sequenceNumber,w,c
  1560  003B60  0A03               	xorlw	3
  1561  003B62  A4D8               	btfss	status,2,c
  1562  003B64  D028               	goto	l1716
  1563                           
  1564                           ;main.c: 432: {
  1565                           ;main.c: 433: if (stepNumber == 0) lowPWM = 31; else highPWM = 0;
  1566  003B66  5040               	movf	main@stepNumber+1,w,c
  1567  003B68  103F               	iorwf	main@stepNumber,w,c
  1568  003B6A  A4D8               	btfss	status,2,c
  1569  003B6C  D005               	goto	l1702
  1570  003B6E  0E00               	movlw	0
  1571  003B70  6E2E               	movwf	main@lowPWM+1,c
  1572  003B72  0E1F               	movlw	31
  1573  003B74  6E2D               	movwf	main@lowPWM,c
  1574  003B76  D004               	goto	l1704
  1575  003B78                     l1702:
  1576  003B78  0E00               	movlw	0
  1577  003B7A  6E30               	movwf	main@highPWM+1,c
  1578  003B7C  0E00               	movlw	0
  1579  003B7E  6E2F               	movwf	main@highPWM,c
  1580  003B80                     l1704:
  1581                           
  1582                           ;main.c: 434: if (stepNumber == 1) midPWM = 31; else lowPWM = 0;
  1583  003B80  043F               	decf	main@stepNumber,w,c
  1584  003B82  1040               	iorwf	main@stepNumber+1,w,c
  1585  003B84  A4D8               	btfss	status,2,c
  1586  003B86  D005               	goto	l1708
  1587  003B88  0E00               	movlw	0
  1588  003B8A  6E37               	movwf	main@midPWM+1,c
  1589  003B8C  0E1F               	movlw	31
  1590  003B8E  6E36               	movwf	main@midPWM,c
  1591  003B90  D004               	goto	l1710
  1592  003B92                     l1708:
  1593  003B92  0E00               	movlw	0
  1594  003B94  6E2E               	movwf	main@lowPWM+1,c
  1595  003B96  0E00               	movlw	0
  1596  003B98  6E2D               	movwf	main@lowPWM,c
  1597  003B9A                     l1710:
  1598                           
  1599                           ;main.c: 435: if (stepNumber == 2) highPWM = 31; else midPWM = 0;
  1600  003B9A  503F               	movf	main@stepNumber,w,c
  1601  003B9C  0A02               	xorlw	2
  1602  003B9E  1040               	iorwf	main@stepNumber+1,w,c
  1603  003BA0  A4D8               	btfss	status,2,c
  1604  003BA2  D005               	goto	l1714
  1605  003BA4  0E00               	movlw	0
  1606  003BA6  6E30               	movwf	main@highPWM+1,c
  1607  003BA8  0E1F               	movlw	31
  1608  003BAA  6E2F               	movwf	main@highPWM,c
  1609  003BAC  D004               	goto	l1716
  1610  003BAE                     l1714:
  1611  003BAE  0E00               	movlw	0
  1612  003BB0  6E37               	movwf	main@midPWM+1,c
  1613  003BB2  0E00               	movlw	0
  1614  003BB4  6E36               	movwf	main@midPWM,c
  1615  003BB6                     l1716:
  1616                           
  1617                           ;main.c: 436: }
  1618                           ;main.c: 438: if (sequenceNumber == 4)
  1619  003BB6  503E               	movf	main@sequenceNumber,w,c
  1620  003BB8  0A04               	xorlw	4
  1621  003BBA  A4D8               	btfss	status,2,c
  1622  003BBC  D025               	goto	l1736
  1623                           
  1624                           ;main.c: 439: {
  1625                           ;main.c: 440: if (stepNumber == 0) midPWM = 31; else midPWM = 0;
  1626  003BBE  5040               	movf	main@stepNumber+1,w,c
  1627  003BC0  103F               	iorwf	main@stepNumber,w,c
  1628  003BC2  A4D8               	btfss	status,2,c
  1629  003BC4  D004               	goto	l1722
  1630  003BC6  0E00               	movlw	0
  1631  003BC8  6E37               	movwf	main@midPWM+1,c
  1632  003BCA  0E1F               	movlw	31
  1633  003BCC  D003               	goto	L12
  1634  003BCE                     l1722:
  1635  003BCE  0E00               	movlw	0
  1636  003BD0  6E37               	movwf	main@midPWM+1,c
  1637  003BD2  0E00               	movlw	0
  1638  003BD4                     L12:
  1639  003BD4  6E36               	movwf	main@midPWM,c
  1640                           
  1641                           ;main.c: 441: if (stepNumber == 1) highPWM = 31; else highPWM = 0;
  1642  003BD6  043F               	decf	main@stepNumber,w,c
  1643  003BD8  1040               	iorwf	main@stepNumber+1,w,c
  1644  003BDA  A4D8               	btfss	status,2,c
  1645  003BDC  D004               	goto	l1728
  1646  003BDE  0E00               	movlw	0
  1647  003BE0  6E30               	movwf	main@highPWM+1,c
  1648  003BE2  0E1F               	movlw	31
  1649  003BE4  D003               	goto	L13
  1650  003BE6                     l1728:
  1651  003BE6  0E00               	movlw	0
  1652  003BE8  6E30               	movwf	main@highPWM+1,c
  1653  003BEA  0E00               	movlw	0
  1654  003BEC                     L13:
  1655  003BEC  6E2F               	movwf	main@highPWM,c
  1656                           
  1657                           ;main.c: 442: if (stepNumber == 2) lowPWM = 31; else lowPWM = 0;
  1658  003BEE  503F               	movf	main@stepNumber,w,c
  1659  003BF0  0A02               	xorlw	2
  1660  003BF2  1040               	iorwf	main@stepNumber+1,w,c
  1661  003BF4  A4D8               	btfss	status,2,c
  1662  003BF6  D004               	goto	l1734
  1663  003BF8  0E00               	movlw	0
  1664  003BFA  6E2E               	movwf	main@lowPWM+1,c
  1665  003BFC  0E1F               	movlw	31
  1666  003BFE  D003               	goto	L14
  1667  003C00                     l1734:
  1668  003C00  0E00               	movlw	0
  1669  003C02  6E2E               	movwf	main@lowPWM+1,c
  1670  003C04  0E00               	movlw	0
  1671  003C06                     L14:
  1672  003C06  6E2D               	movwf	main@lowPWM,c
  1673  003C08                     l1736:
  1674                           
  1675                           ;main.c: 443: }
  1676                           ;main.c: 445: if (tickCounter > 8)
  1677  003C08  5034               	movf	main@tickCounter+1,w,c
  1678  003C0A  0A80               	xorlw	128
  1679  003C0C  0F80               	addlw	-128
  1680  003C0E  0E09               	movlw	9
  1681  003C10  B4D8               	btfsc	status,2,c
  1682  003C12  5C33               	subwf	main@tickCounter,w,c
  1683  003C14  A0D8               	btfss	status,0,c
  1684  003C16  D02B               	goto	l1760
  1685                           
  1686                           ;main.c: 446: {
  1687                           ;main.c: 447: stepNumber++;
  1688  003C18  4A3F               	infsnz	main@stepNumber,f,c
  1689  003C1A  2A40               	incf	main@stepNumber+1,f,c
  1690                           
  1691                           ;main.c: 448: tickCounter = 0;
  1692  003C1C  0E00               	movlw	0
  1693  003C1E  6E34               	movwf	main@tickCounter+1,c
  1694  003C20  0E00               	movlw	0
  1695  003C22  6E33               	movwf	main@tickCounter,c
  1696                           
  1697                           ;main.c: 450: if (stepNumber == 3)
  1698  003C24  503F               	movf	main@stepNumber,w,c
  1699  003C26  0A03               	xorlw	3
  1700  003C28  1040               	iorwf	main@stepNumber+1,w,c
  1701  003C2A  A4D8               	btfss	status,2,c
  1702  003C2C  D020               	goto	l1760
  1703                           
  1704                           ;main.c: 451: {
  1705                           ;main.c: 452: stepNumber = 0;
  1706  003C2E  0E00               	movlw	0
  1707  003C30  6E40               	movwf	main@stepNumber+1,c
  1708  003C32  0E00               	movlw	0
  1709  003C34  6E3F               	movwf	main@stepNumber,c
  1710                           
  1711                           ;main.c: 453: sequenceNumber++;
  1712  003C36  2A3E               	incf	main@sequenceNumber,f,c
  1713                           
  1714                           ;main.c: 454: brightness = 0;
  1715  003C38  6E10               	movwf	??_main& (0+255),c
  1716  003C3A  0E00               	movlw	0
  1717  003C3C  6E39               	movwf	main@brightness,c
  1718  003C3E  5010               	movf	??_main& (0+255),w,c
  1719                           
  1720                           ;main.c: 456: if (sequenceNumber == 5)
  1721  003C40  503E               	movf	main@sequenceNumber,w,c
  1722  003C42  0A05               	xorlw	5
  1723  003C44  A4D8               	btfss	status,2,c
  1724  003C46  D013               	goto	l1760
  1725                           
  1726                           ;main.c: 457: {
  1727                           ;main.c: 458: sequenceNumber = 0;
  1728  003C48  6E10               	movwf	??_main& (0+255),c
  1729  003C4A  0E00               	movlw	0
  1730  003C4C  6E3E               	movwf	main@sequenceNumber,c
  1731  003C4E  5010               	movf	??_main& (0+255),w,c
  1732                           
  1733                           ;main.c: 459: sequenceRepeats++;
  1734  003C50  4A31               	infsnz	main@sequenceRepeats,f,c
  1735  003C52  2A32               	incf	main@sequenceRepeats+1,f,c
  1736                           
  1737                           ;main.c: 460: if (sequenceRepeats > 30)
  1738  003C54  5032               	movf	main@sequenceRepeats+1,w,c
  1739  003C56  0A80               	xorlw	128
  1740  003C58  0F80               	addlw	-128
  1741  003C5A  0E1F               	movlw	31
  1742  003C5C  B4D8               	btfsc	status,2,c
  1743  003C5E  5C31               	subwf	main@sequenceRepeats,w,c
  1744  003C60  A0D8               	btfss	status,0,c
  1745  003C62  D005               	goto	l1760
  1746                           
  1747                           ;main.c: 461: {
  1748                           ;main.c: 462: sequenceRepeats = 0;
  1749  003C64  0E00               	movlw	0
  1750  003C66  6E32               	movwf	main@sequenceRepeats+1,c
  1751  003C68  0E00               	movlw	0
  1752  003C6A  6E31               	movwf	main@sequenceRepeats,c
  1753                           
  1754                           ;main.c: 463: patternNumber++;
  1755  003C6C  2A38               	incf	main@patternNumber,f,c
  1756  003C6E                     l1760:
  1757                           
  1758                           ;main.c: 464: }
  1759                           ;main.c: 465: }
  1760                           ;main.c: 466: }
  1761                           ;main.c: 467: }
  1762                           ;main.c: 468: }
  1763                           ;main.c: 471: if (patternNumber == 3)
  1764  003C6E  5038               	movf	main@patternNumber,w,c
  1765  003C70  0A03               	xorlw	3
  1766  003C72  A4D8               	btfss	status,2,c
  1767  003C74  D057               	goto	l1802
  1768                           
  1769                           ;main.c: 472: {
  1770                           ;main.c: 473: if (sequenceNumber == 0)
  1771  003C76  663E               	tstfsz	main@sequenceNumber,c
  1772  003C78  D023               	goto	l156
  1773                           
  1774                           ;main.c: 474: {
  1775                           ;main.c: 475: if (currentStep != stepNumber)
  1776  003C7A  5040               	movf	main@stepNumber+1,w,c
  1777  003C7C  183B               	xorwf	main@currentStep+1,w,c
  1778  003C7E  E102               	bnz	u1335
  1779  003C80  503F               	movf	main@stepNumber,w,c
  1780  003C82  183A               	xorwf	main@currentStep,w,c
  1781  003C84                     u1335:
  1782  003C84  B4D8               	btfsc	status,2,c
  1783  003C86  D013               	goto	l1774
  1784                           
  1785                           ;main.c: 476: {
  1786                           ;main.c: 477: currentStep = stepNumber;
  1787  003C88  C03F  F03A         	movff	main@stepNumber,main@currentStep
  1788  003C8C  C040  F03B         	movff	main@stepNumber+1,main@currentStep+1
  1789                           
  1790                           ;main.c: 478: if (currentStep < 16) brightness += 2; else brightness -= 2;
  1791  003C90  503B               	movf	main@currentStep+1,w,c
  1792  003C92  0A80               	xorlw	128
  1793  003C94  6EF3               	movwf	prodl,c
  1794  003C96  0E80               	movlw	128
  1795  003C98  5CF3               	subwf	prodl,w,c
  1796  003C9A  0E10               	movlw	16
  1797  003C9C  B4D8               	btfsc	status,2,c
  1798  003C9E  5C3A               	subwf	main@currentStep,w,c
  1799  003CA0  B0D8               	btfsc	status,0,c
  1800  003CA2  D003               	goto	l1772
  1801  003CA4  0E02               	movlw	2
  1802  003CA6  2639               	addwf	main@brightness,f,c
  1803  003CA8  D002               	goto	l1774
  1804  003CAA                     l1772:
  1805  003CAA  0E02               	movlw	2
  1806  003CAC  5E39               	subwf	main@brightness,f,c
  1807  003CAE                     l1774:
  1808                           
  1809                           ;main.c: 479: }
  1810                           ;main.c: 480: highPWM = brightness;
  1811  003CAE  C039  F02F         	movff	main@brightness,main@highPWM
  1812  003CB2  6A30               	clrf	main@highPWM+1,c
  1813                           
  1814                           ;main.c: 481: midPWM = brightness;
  1815  003CB4  C039  F036         	movff	main@brightness,main@midPWM
  1816  003CB8  6A37               	clrf	main@midPWM+1,c
  1817                           
  1818                           ;main.c: 482: lowPWM = brightness;
  1819  003CBA  C039  F02D         	movff	main@brightness,main@lowPWM
  1820  003CBE  6A2E               	clrf	main@lowPWM+1,c
  1821  003CC0                     l156:
  1822                           
  1823                           ;main.c: 483: }
  1824                           ;main.c: 485: if (tickCounter > 3)
  1825  003CC0  5034               	movf	main@tickCounter+1,w,c
  1826  003CC2  0A80               	xorlw	128
  1827  003CC4  0F80               	addlw	-128
  1828  003CC6  0E04               	movlw	4
  1829  003CC8  B4D8               	btfsc	status,2,c
  1830  003CCA  5C33               	subwf	main@tickCounter,w,c
  1831  003CCC  A0D8               	btfss	status,0,c
  1832  003CCE  D02A               	goto	l1802
  1833                           
  1834                           ;main.c: 486: {
  1835                           ;main.c: 487: stepNumber++;
  1836  003CD0  4A3F               	infsnz	main@stepNumber,f,c
  1837  003CD2  2A40               	incf	main@stepNumber+1,f,c
  1838                           
  1839                           ;main.c: 488: tickCounter = 0;
  1840  003CD4  0E00               	movlw	0
  1841  003CD6  6E34               	movwf	main@tickCounter+1,c
  1842  003CD8  0E00               	movlw	0
  1843  003CDA  6E33               	movwf	main@tickCounter,c
  1844                           
  1845                           ;main.c: 490: if (stepNumber == 31)
  1846  003CDC  503F               	movf	main@stepNumber,w,c
  1847  003CDE  0A1F               	xorlw	31
  1848  003CE0  1040               	iorwf	main@stepNumber+1,w,c
  1849  003CE2  A4D8               	btfss	status,2,c
  1850  003CE4  D01F               	goto	l1802
  1851                           
  1852                           ;main.c: 491: {
  1853                           ;main.c: 492: stepNumber = 0;
  1854  003CE6  0E00               	movlw	0
  1855  003CE8  6E40               	movwf	main@stepNumber+1,c
  1856  003CEA  0E00               	movlw	0
  1857  003CEC  6E3F               	movwf	main@stepNumber,c
  1858                           
  1859                           ;main.c: 493: sequenceNumber++;
  1860  003CEE  2A3E               	incf	main@sequenceNumber,f,c
  1861                           
  1862                           ;main.c: 494: brightness = 0;
  1863  003CF0  6E10               	movwf	??_main& (0+255),c
  1864  003CF2  0E00               	movlw	0
  1865  003CF4  6E39               	movwf	main@brightness,c
  1866  003CF6  5010               	movf	??_main& (0+255),w,c
  1867                           
  1868                           ;main.c: 496: if (sequenceNumber == 1)
  1869  003CF8  043E               	decf	main@sequenceNumber,w,c
  1870  003CFA  A4D8               	btfss	status,2,c
  1871  003CFC  D013               	goto	l1802
  1872                           
  1873                           ;main.c: 497: {
  1874                           ;main.c: 498: sequenceNumber = 0;
  1875  003CFE  6E10               	movwf	??_main& (0+255),c
  1876  003D00  0E00               	movlw	0
  1877  003D02  6E3E               	movwf	main@sequenceNumber,c
  1878  003D04  5010               	movf	??_main& (0+255),w,c
  1879                           
  1880                           ;main.c: 499: sequenceRepeats++;
  1881  003D06  4A31               	infsnz	main@sequenceRepeats,f,c
  1882  003D08  2A32               	incf	main@sequenceRepeats+1,f,c
  1883                           
  1884                           ;main.c: 500: if (sequenceRepeats > 60)
  1885  003D0A  5032               	movf	main@sequenceRepeats+1,w,c
  1886  003D0C  0A80               	xorlw	128
  1887  003D0E  0F80               	addlw	-128
  1888  003D10  0E3D               	movlw	61
  1889  003D12  B4D8               	btfsc	status,2,c
  1890  003D14  5C31               	subwf	main@sequenceRepeats,w,c
  1891  003D16  A0D8               	btfss	status,0,c
  1892  003D18  D005               	goto	l1802
  1893                           
  1894                           ;main.c: 501: {
  1895                           ;main.c: 502: sequenceRepeats = 0;
  1896  003D1A  0E00               	movlw	0
  1897  003D1C  6E32               	movwf	main@sequenceRepeats+1,c
  1898  003D1E  0E00               	movlw	0
  1899  003D20  6E31               	movwf	main@sequenceRepeats,c
  1900                           
  1901                           ;main.c: 503: patternNumber++;
  1902  003D22  2A38               	incf	main@patternNumber,f,c
  1903  003D24                     l1802:
  1904                           
  1905                           ;main.c: 504: }
  1906                           ;main.c: 505: }
  1907                           ;main.c: 506: }
  1908                           ;main.c: 507: }
  1909                           ;main.c: 508: }
  1910                           ;main.c: 511: if (patternNumber == 4)
  1911  003D24  5038               	movf	main@patternNumber,w,c
  1912  003D26  0A04               	xorlw	4
  1913  003D28  A4D8               	btfss	status,2,c
  1914  003D2A  D06F               	goto	l1858
  1915                           
  1916                           ;main.c: 512: {
  1917                           ;main.c: 513: if (sequenceNumber == 0)
  1918  003D2C  663E               	tstfsz	main@sequenceNumber,c
  1919  003D2E  D03B               	goto	l1834
  1920                           
  1921                           ;main.c: 514: {
  1922                           ;main.c: 515: if (stepNumber == 0) highPWM = 31; else highPWM = 0;
  1923  003D30  5040               	movf	main@stepNumber+1,w,c
  1924  003D32  103F               	iorwf	main@stepNumber,w,c
  1925  003D34  A4D8               	btfss	status,2,c
  1926  003D36  D004               	goto	l1810
  1927  003D38  0E00               	movlw	0
  1928  003D3A  6E30               	movwf	main@highPWM+1,c
  1929  003D3C  0E1F               	movlw	31
  1930  003D3E  D003               	goto	L15
  1931  003D40                     l1810:
  1932  003D40  0E00               	movlw	0
  1933  003D42  6E30               	movwf	main@highPWM+1,c
  1934  003D44  0E00               	movlw	0
  1935  003D46                     L15:
  1936  003D46  6E2F               	movwf	main@highPWM,c
  1937                           
  1938                           ;main.c: 516: if (stepNumber == 1) midPWM = 31; else if (stepNumber != 3) midPWM = 0;
  1939  003D48  043F               	decf	main@stepNumber,w,c
  1940  003D4A  1040               	iorwf	main@stepNumber+1,w,c
  1941  003D4C  A4D8               	btfss	status,2,c
  1942  003D4E  D004               	goto	l1816
  1943  003D50  0E00               	movlw	0
  1944  003D52  6E37               	movwf	main@midPWM+1,c
  1945  003D54  0E1F               	movlw	31
  1946  003D56  D008               	goto	L16
  1947  003D58                     l1816:
  1948  003D58  503F               	movf	main@stepNumber,w,c
  1949  003D5A  0A03               	xorlw	3
  1950  003D5C  1040               	iorwf	main@stepNumber+1,w,c
  1951  003D5E  B4D8               	btfsc	status,2,c
  1952  003D60  D004               	goto	l1820
  1953  003D62  0E00               	movlw	0
  1954  003D64  6E37               	movwf	main@midPWM+1,c
  1955  003D66  0E00               	movlw	0
  1956  003D68                     L16:
  1957  003D68  6E36               	movwf	main@midPWM,c
  1958  003D6A                     l1820:
  1959                           
  1960                           ;main.c: 517: if (stepNumber == 2) lowPWM = 31; else lowPWM = 0;
  1961  003D6A  503F               	movf	main@stepNumber,w,c
  1962  003D6C  0A02               	xorlw	2
  1963  003D6E  1040               	iorwf	main@stepNumber+1,w,c
  1964  003D70  A4D8               	btfss	status,2,c
  1965  003D72  D004               	goto	l1824
  1966  003D74  0E00               	movlw	0
  1967  003D76  6E2E               	movwf	main@lowPWM+1,c
  1968  003D78  0E1F               	movlw	31
  1969  003D7A  D003               	goto	L17
  1970  003D7C                     l1824:
  1971  003D7C  0E00               	movlw	0
  1972  003D7E  6E2E               	movwf	main@lowPWM+1,c
  1973  003D80  0E00               	movlw	0
  1974  003D82                     L17:
  1975  003D82  6E2D               	movwf	main@lowPWM,c
  1976                           
  1977                           ;main.c: 518: if (stepNumber == 3) midPWM = 31; else if (stepNumber != 1) midPWM = 0;
  1978  003D84  503F               	movf	main@stepNumber,w,c
  1979  003D86  0A03               	xorlw	3
  1980  003D88  1040               	iorwf	main@stepNumber+1,w,c
  1981  003D8A  A4D8               	btfss	status,2,c
  1982  003D8C  D004               	goto	l1830
  1983  003D8E  0E00               	movlw	0
  1984  003D90  6E37               	movwf	main@midPWM+1,c
  1985  003D92  0E1F               	movlw	31
  1986  003D94  D007               	goto	L18
  1987  003D96                     l1830:
  1988  003D96  043F               	decf	main@stepNumber,w,c
  1989  003D98  1040               	iorwf	main@stepNumber+1,w,c
  1990  003D9A  B4D8               	btfsc	status,2,c
  1991  003D9C  D004               	goto	l1834
  1992  003D9E  0E00               	movlw	0
  1993  003DA0  6E37               	movwf	main@midPWM+1,c
  1994  003DA2  0E00               	movlw	0
  1995  003DA4                     L18:
  1996  003DA4  6E36               	movwf	main@midPWM,c
  1997  003DA6                     l1834:
  1998                           
  1999                           ;main.c: 519: }
  2000                           ;main.c: 521: if (tickCounter > 8)
  2001  003DA6  5034               	movf	main@tickCounter+1,w,c
  2002  003DA8  0A80               	xorlw	128
  2003  003DAA  0F80               	addlw	-128
  2004  003DAC  0E09               	movlw	9
  2005  003DAE  B4D8               	btfsc	status,2,c
  2006  003DB0  5C33               	subwf	main@tickCounter,w,c
  2007  003DB2  A0D8               	btfss	status,0,c
  2008  003DB4  D02A               	goto	l1858
  2009                           
  2010                           ;main.c: 522: {
  2011                           ;main.c: 523: stepNumber++;
  2012  003DB6  4A3F               	infsnz	main@stepNumber,f,c
  2013  003DB8  2A40               	incf	main@stepNumber+1,f,c
  2014                           
  2015                           ;main.c: 524: tickCounter = 0;
  2016  003DBA  0E00               	movlw	0
  2017  003DBC  6E34               	movwf	main@tickCounter+1,c
  2018  003DBE  0E00               	movlw	0
  2019  003DC0  6E33               	movwf	main@tickCounter,c
  2020                           
  2021                           ;main.c: 526: if (stepNumber == 4)
  2022  003DC2  503F               	movf	main@stepNumber,w,c
  2023  003DC4  0A04               	xorlw	4
  2024  003DC6  1040               	iorwf	main@stepNumber+1,w,c
  2025  003DC8  A4D8               	btfss	status,2,c
  2026  003DCA  D01F               	goto	l1858
  2027                           
  2028                           ;main.c: 527: {
  2029                           ;main.c: 528: stepNumber = 0;
  2030  003DCC  0E00               	movlw	0
  2031  003DCE  6E40               	movwf	main@stepNumber+1,c
  2032  003DD0  0E00               	movlw	0
  2033  003DD2  6E3F               	movwf	main@stepNumber,c
  2034                           
  2035                           ;main.c: 529: sequenceNumber++;
  2036  003DD4  2A3E               	incf	main@sequenceNumber,f,c
  2037                           
  2038                           ;main.c: 530: brightness = 0;
  2039  003DD6  6E10               	movwf	??_main& (0+255),c
  2040  003DD8  0E00               	movlw	0
  2041  003DDA  6E39               	movwf	main@brightness,c
  2042  003DDC  5010               	movf	??_main& (0+255),w,c
  2043                           
  2044                           ;main.c: 532: if (sequenceNumber == 1)
  2045  003DDE  043E               	decf	main@sequenceNumber,w,c
  2046  003DE0  A4D8               	btfss	status,2,c
  2047  003DE2  D013               	goto	l1858
  2048                           
  2049                           ;main.c: 533: {
  2050                           ;main.c: 534: sequenceNumber = 0;
  2051  003DE4  6E10               	movwf	??_main& (0+255),c
  2052  003DE6  0E00               	movlw	0
  2053  003DE8  6E3E               	movwf	main@sequenceNumber,c
  2054  003DEA  5010               	movf	??_main& (0+255),w,c
  2055                           
  2056                           ;main.c: 535: sequenceRepeats++;
  2057  003DEC  4A31               	infsnz	main@sequenceRepeats,f,c
  2058  003DEE  2A32               	incf	main@sequenceRepeats+1,f,c
  2059                           
  2060                           ;main.c: 536: if (sequenceRepeats > 100)
  2061  003DF0  5032               	movf	main@sequenceRepeats+1,w,c
  2062  003DF2  0A80               	xorlw	128
  2063  003DF4  0F80               	addlw	-128
  2064  003DF6  0E65               	movlw	101
  2065  003DF8  B4D8               	btfsc	status,2,c
  2066  003DFA  5C31               	subwf	main@sequenceRepeats,w,c
  2067  003DFC  A0D8               	btfss	status,0,c
  2068  003DFE  D005               	goto	l1858
  2069                           
  2070                           ;main.c: 537: {
  2071                           ;main.c: 538: sequenceRepeats = 0;
  2072  003E00  0E00               	movlw	0
  2073  003E02  6E32               	movwf	main@sequenceRepeats+1,c
  2074  003E04  0E00               	movlw	0
  2075  003E06  6E31               	movwf	main@sequenceRepeats,c
  2076                           
  2077                           ;main.c: 539: patternNumber++;
  2078  003E08  2A38               	incf	main@patternNumber,f,c
  2079  003E0A                     l1858:
  2080                           
  2081                           ;main.c: 540: }
  2082                           ;main.c: 541: }
  2083                           ;main.c: 542: }
  2084                           ;main.c: 543: }
  2085                           ;main.c: 544: }
  2086                           ;main.c: 547: if (patternNumber > 4) patternNumber = 0;
  2087  003E0A  0E04               	movlw	4
  2088  003E0C  6438               	cpfsgt	main@patternNumber,c
  2089  003E0E  D004               	goto	l1862
  2090  003E10  6E10               	movwf	??_main& (0+255),c
  2091  003E12  0E00               	movlw	0
  2092  003E14  6E38               	movwf	main@patternNumber,c
  2093  003E16  5010               	movf	??_main& (0+255),w,c
  2094  003E18                     l1862:
  2095                           
  2096                           ;main.c: 550: if (highPWM > PWMcount) PORTBbits.RB2 = 1; else PORTBbits.RB2 = 0;
  2097  003E18  503D               	movf	main@PWMcount+1,w,c
  2098  003E1A  0A80               	xorlw	128
  2099  003E1C  6E10               	movwf	??_main& (0+255),c
  2100  003E1E  502F               	movf	main@highPWM,w,c
  2101  003E20  5C3C               	subwf	main@PWMcount,w,c
  2102  003E22  5030               	movf	main@highPWM+1,w,c
  2103  003E24  0A80               	xorlw	128
  2104  003E26  5810               	subwfb	??_main& (0+255),w,c
  2105  003E28  B0D8               	btfsc	status,0,c
  2106  003E2A  D002               	goto	l181
  2107  003E2C  8481               	bsf	3969,2,c	;volatile
  2108  003E2E  D001               	goto	l1866
  2109  003E30                     l181:
  2110  003E30  9481               	bcf	3969,2,c	;volatile
  2111  003E32                     l1866:
  2112                           
  2113                           ;main.c: 551: if (midPWM > PWMcount) PORTBbits.RB1 = 1; else PORTBbits.RB1 = 0;
  2114  003E32  503D               	movf	main@PWMcount+1,w,c
  2115  003E34  0A80               	xorlw	128
  2116  003E36  6E10               	movwf	??_main& (0+255),c
  2117  003E38  5036               	movf	main@midPWM,w,c
  2118  003E3A  5C3C               	subwf	main@PWMcount,w,c
  2119  003E3C  5037               	movf	main@midPWM+1,w,c
  2120  003E3E  0A80               	xorlw	128
  2121  003E40  5810               	subwfb	??_main& (0+255),w,c
  2122  003E42  B0D8               	btfsc	status,0,c
  2123  003E44  D002               	goto	l183
  2124  003E46  8281               	bsf	3969,1,c	;volatile
  2125  003E48  D001               	goto	l1870
  2126  003E4A                     l183:
  2127  003E4A  9281               	bcf	3969,1,c	;volatile
  2128  003E4C                     l1870:
  2129                           
  2130                           ;main.c: 552: if (lowPWM > PWMcount) PORTBbits.RB0 = 1; else PORTBbits.RB0 = 0;
  2131  003E4C  503D               	movf	main@PWMcount+1,w,c
  2132  003E4E  0A80               	xorlw	128
  2133  003E50  6E10               	movwf	??_main& (0+255),c
  2134  003E52  502D               	movf	main@lowPWM,w,c
  2135  003E54  5C3C               	subwf	main@PWMcount,w,c
  2136  003E56  502E               	movf	main@lowPWM+1,w,c
  2137  003E58  0A80               	xorlw	128
  2138  003E5A  5810               	subwfb	??_main& (0+255),w,c
  2139  003E5C  B0D8               	btfsc	status,0,c
  2140  003E5E  D002               	goto	l185
  2141  003E60  8081               	bsf	3969,0,c	;volatile
  2142  003E62  D001               	goto	l1874
  2143  003E64                     l185:
  2144  003E64  9081               	bcf	3969,0,c	;volatile
  2145  003E66                     l1874:
  2146                           
  2147                           ;main.c: 555: PWMcount++;
  2148  003E66  4A3C               	infsnz	main@PWMcount,f,c
  2149  003E68  2A3D               	incf	main@PWMcount+1,f,c
  2150                           
  2151                           ;main.c: 556: if (PWMcount > 31) PWMcount = 0;
  2152  003E6A  503D               	movf	main@PWMcount+1,w,c
  2153  003E6C  0A80               	xorlw	128
  2154  003E6E  0F80               	addlw	-128
  2155  003E70  0E20               	movlw	32
  2156  003E72  B4D8               	btfsc	status,2,c
  2157  003E74  5C3C               	subwf	main@PWMcount,w,c
  2158  003E76  A0D8               	btfss	status,0,c
  2159  003E78  D004               	goto	l1880
  2160  003E7A  0E00               	movlw	0
  2161  003E7C  6E3D               	movwf	main@PWMcount+1,c
  2162  003E7E  0E00               	movlw	0
  2163  003E80  6E3C               	movwf	main@PWMcount,c
  2164  003E82                     l1880:
  2165                           
  2166                           ;main.c: 557: }
  2167                           ;main.c: 560: if (mode == 2)
  2168  003E82  5035               	movf	main@mode,w,c
  2169  003E84  0A02               	xorlw	2
  2170  003E86  A4D8               	btfss	status,2,c
  2171  003E88  EF6C  F01A         	goto	l1320
  2172                           
  2173                           ;main.c: 561: {
  2174                           ;main.c: 563: if (fadeCounter == 0)
  2175  003E8C  5021               	movf	main@fadeCounter+1,w,c
  2176  003E8E  1020               	iorwf	main@fadeCounter,w,c
  2177  003E90  A4D8               	btfss	status,2,c
  2178  003E92  D021               	goto	l1896
  2179                           
  2180                           ;main.c: 564: {
  2181                           ;main.c: 565: if (highPWM > 0) highPWM--;
  2182  003E94  5030               	movf	main@highPWM+1,w,c
  2183  003E96  0A80               	xorlw	128
  2184  003E98  0F80               	addlw	-128
  2185  003E9A  0E01               	movlw	1
  2186  003E9C  B4D8               	btfsc	status,2,c
  2187  003E9E  5C2F               	subwf	main@highPWM,w,c
  2188  003EA0  A0D8               	btfss	status,0,c
  2189  003EA2  D003               	goto	l1888
  2190  003EA4  062F               	decf	main@highPWM,f,c
  2191  003EA6  A0D8               	btfss	status,0,c
  2192  003EA8  0630               	decf	main@highPWM+1,f,c
  2193  003EAA                     l1888:
  2194                           
  2195                           ;main.c: 566: if (midPWM > 0) midPWM--;
  2196  003EAA  5037               	movf	main@midPWM+1,w,c
  2197  003EAC  0A80               	xorlw	128
  2198  003EAE  0F80               	addlw	-128
  2199  003EB0  0E01               	movlw	1
  2200  003EB2  B4D8               	btfsc	status,2,c
  2201  003EB4  5C36               	subwf	main@midPWM,w,c
  2202  003EB6  A0D8               	btfss	status,0,c
  2203  003EB8  D003               	goto	l1892
  2204  003EBA  0636               	decf	main@midPWM,f,c
  2205  003EBC  A0D8               	btfss	status,0,c
  2206  003EBE  0637               	decf	main@midPWM+1,f,c
  2207  003EC0                     l1892:
  2208                           
  2209                           ;main.c: 567: if (lowPWM > 0) lowPWM--;
  2210  003EC0  502E               	movf	main@lowPWM+1,w,c
  2211  003EC2  0A80               	xorlw	128
  2212  003EC4  0F80               	addlw	-128
  2213  003EC6  0E01               	movlw	1
  2214  003EC8  B4D8               	btfsc	status,2,c
  2215  003ECA  5C2D               	subwf	main@lowPWM,w,c
  2216  003ECC  A0D8               	btfss	status,0,c
  2217  003ECE  D003               	goto	l1896
  2218  003ED0  062D               	decf	main@lowPWM,f,c
  2219  003ED2  A0D8               	btfss	status,0,c
  2220  003ED4  062E               	decf	main@lowPWM+1,f,c
  2221  003ED6                     l1896:
  2222                           
  2223                           ;main.c: 568: }
  2224                           ;main.c: 571: if (highLevel > 300) highPWM = 31;
  2225  003ED6  5025               	movf	main@highLevel+1,w,c
  2226  003ED8  0A80               	xorlw	128
  2227  003EDA  0F7F               	addlw	-129
  2228  003EDC  0E2D               	movlw	45
  2229  003EDE  B4D8               	btfsc	status,2,c
  2230  003EE0  5C24               	subwf	main@highLevel,w,c
  2231  003EE2  A0D8               	btfss	status,0,c
  2232  003EE4  D004               	goto	l1900
  2233  003EE6  0E00               	movlw	0
  2234  003EE8  6E30               	movwf	main@highPWM+1,c
  2235  003EEA  0E1F               	movlw	31
  2236  003EEC  6E2F               	movwf	main@highPWM,c
  2237  003EEE                     l1900:
  2238                           
  2239                           ;main.c: 572: if (midLevel > 1000) midPWM = 31;
  2240  003EEE  5019               	movf	main@midLevel+1,w,c
  2241  003EF0  0A80               	xorlw	128
  2242  003EF2  0F7D               	addlw	-131
  2243  003EF4  0EE9               	movlw	233
  2244  003EF6  B4D8               	btfsc	status,2,c
  2245  003EF8  5C18               	subwf	main@midLevel,w,c
  2246  003EFA  A0D8               	btfss	status,0,c
  2247  003EFC  D004               	goto	l1904
  2248  003EFE  0E00               	movlw	0
  2249  003F00  6E37               	movwf	main@midPWM+1,c
  2250  003F02  0E1F               	movlw	31
  2251  003F04  6E36               	movwf	main@midPWM,c
  2252  003F06                     l1904:
  2253                           
  2254                           ;main.c: 573: if (lowLevel > 470) lowPWM = 31;
  2255  003F06  501B               	movf	main@lowLevel+1,w,c
  2256  003F08  0A80               	xorlw	128
  2257  003F0A  0F7F               	addlw	-129
  2258  003F0C  0ED7               	movlw	215
  2259  003F0E  B4D8               	btfsc	status,2,c
  2260  003F10  5C1A               	subwf	main@lowLevel,w,c
  2261  003F12  A0D8               	btfss	status,0,c
  2262  003F14  D004               	goto	l1908
  2263  003F16  0E00               	movlw	0
  2264  003F18  6E2E               	movwf	main@lowPWM+1,c
  2265  003F1A  0E1F               	movlw	31
  2266  003F1C  6E2D               	movwf	main@lowPWM,c
  2267  003F1E                     l1908:
  2268                           
  2269                           ;main.c: 576: if (highPWM > PWMcount) PORTBbits.RB2 = 1; else PORTBbits.RB2 = 0;
  2270  003F1E  503D               	movf	main@PWMcount+1,w,c
  2271  003F20  0A80               	xorlw	128
  2272  003F22  6E10               	movwf	??_main& (0+255),c
  2273  003F24  502F               	movf	main@highPWM,w,c
  2274  003F26  5C3C               	subwf	main@PWMcount,w,c
  2275  003F28  5030               	movf	main@highPWM+1,w,c
  2276  003F2A  0A80               	xorlw	128
  2277  003F2C  5810               	subwfb	??_main& (0+255),w,c
  2278  003F2E  B0D8               	btfsc	status,0,c
  2279  003F30  D002               	goto	l196
  2280  003F32  8481               	bsf	3969,2,c	;volatile
  2281  003F34  D001               	goto	l1912
  2282  003F36                     l196:
  2283  003F36  9481               	bcf	3969,2,c	;volatile
  2284  003F38                     l1912:
  2285                           
  2286                           ;main.c: 577: if (midPWM > PWMcount) PORTBbits.RB1 = 1; else PORTBbits.RB1 = 0;
  2287  003F38  503D               	movf	main@PWMcount+1,w,c
  2288  003F3A  0A80               	xorlw	128
  2289  003F3C  6E10               	movwf	??_main& (0+255),c
  2290  003F3E  5036               	movf	main@midPWM,w,c
  2291  003F40  5C3C               	subwf	main@PWMcount,w,c
  2292  003F42  5037               	movf	main@midPWM+1,w,c
  2293  003F44  0A80               	xorlw	128
  2294  003F46  5810               	subwfb	??_main& (0+255),w,c
  2295  003F48  B0D8               	btfsc	status,0,c
  2296  003F4A  D002               	goto	l198
  2297  003F4C  8281               	bsf	3969,1,c	;volatile
  2298  003F4E  D001               	goto	l1916
  2299  003F50                     l198:
  2300  003F50  9281               	bcf	3969,1,c	;volatile
  2301  003F52                     l1916:
  2302                           
  2303                           ;main.c: 578: if (lowPWM > PWMcount) PORTBbits.RB0 = 1; else PORTBbits.RB0 = 0;
  2304  003F52  503D               	movf	main@PWMcount+1,w,c
  2305  003F54  0A80               	xorlw	128
  2306  003F56  6E10               	movwf	??_main& (0+255),c
  2307  003F58  502D               	movf	main@lowPWM,w,c
  2308  003F5A  5C3C               	subwf	main@PWMcount,w,c
  2309  003F5C  502E               	movf	main@lowPWM+1,w,c
  2310  003F5E  0A80               	xorlw	128
  2311  003F60  5810               	subwfb	??_main& (0+255),w,c
  2312  003F62  B0D8               	btfsc	status,0,c
  2313  003F64  D002               	goto	l200
  2314  003F66  8081               	bsf	3969,0,c	;volatile
  2315  003F68  D001               	goto	l1920
  2316  003F6A                     l200:
  2317  003F6A  9081               	bcf	3969,0,c	;volatile
  2318  003F6C                     l1920:
  2319                           
  2320                           ;main.c: 581: if (highPWM > PWMcount) PORTBbits.RB5 = 1; else PORTBbits.RB5 = 0;
  2321  003F6C  503D               	movf	main@PWMcount+1,w,c
  2322  003F6E  0A80               	xorlw	128
  2323  003F70  6E10               	movwf	??_main& (0+255),c
  2324  003F72  502F               	movf	main@highPWM,w,c
  2325  003F74  5C3C               	subwf	main@PWMcount,w,c
  2326  003F76  5030               	movf	main@highPWM+1,w,c
  2327  003F78  0A80               	xorlw	128
  2328  003F7A  5810               	subwfb	??_main& (0+255),w,c
  2329  003F7C  B0D8               	btfsc	status,0,c
  2330  003F7E  D002               	goto	l202
  2331  003F80  8A81               	bsf	3969,5,c	;volatile
  2332  003F82  D001               	goto	l1924
  2333  003F84                     l202:
  2334  003F84  9A81               	bcf	3969,5,c	;volatile
  2335  003F86                     l1924:
  2336                           
  2337                           ;main.c: 582: if (midPWM > PWMcount) PORTBbits.RB4 = 1; else PORTBbits.RB4 = 0;
  2338  003F86  503D               	movf	main@PWMcount+1,w,c
  2339  003F88  0A80               	xorlw	128
  2340  003F8A  6E10               	movwf	??_main& (0+255),c
  2341  003F8C  5036               	movf	main@midPWM,w,c
  2342  003F8E  5C3C               	subwf	main@PWMcount,w,c
  2343  003F90  5037               	movf	main@midPWM+1,w,c
  2344  003F92  0A80               	xorlw	128
  2345  003F94  5810               	subwfb	??_main& (0+255),w,c
  2346  003F96  B0D8               	btfsc	status,0,c
  2347  003F98  D002               	goto	l204
  2348  003F9A  8881               	bsf	3969,4,c	;volatile
  2349  003F9C  D001               	goto	l1928
  2350  003F9E                     l204:
  2351  003F9E  9881               	bcf	3969,4,c	;volatile
  2352  003FA0                     l1928:
  2353                           
  2354                           ;main.c: 583: if (lowPWM > PWMcount) PORTBbits.RB3 = 1; else PORTBbits.RB3 = 0;
  2355  003FA0  503D               	movf	main@PWMcount+1,w,c
  2356  003FA2  0A80               	xorlw	128
  2357  003FA4  6E10               	movwf	??_main& (0+255),c
  2358  003FA6  502D               	movf	main@lowPWM,w,c
  2359  003FA8  5C3C               	subwf	main@PWMcount,w,c
  2360  003FAA  502E               	movf	main@lowPWM+1,w,c
  2361  003FAC  0A80               	xorlw	128
  2362  003FAE  5810               	subwfb	??_main& (0+255),w,c
  2363  003FB0  B0D8               	btfsc	status,0,c
  2364  003FB2  D002               	goto	l206
  2365  003FB4  8681               	bsf	3969,3,c	;volatile
  2366  003FB6  D001               	goto	l1932
  2367  003FB8                     l206:
  2368  003FB8  9681               	bcf	3969,3,c	;volatile
  2369  003FBA                     l1932:
  2370                           
  2371                           ;main.c: 586: PWMcount++;
  2372  003FBA  4A3C               	infsnz	main@PWMcount,f,c
  2373  003FBC  2A3D               	incf	main@PWMcount+1,f,c
  2374                           
  2375                           ;main.c: 587: if (PWMcount > 31) PWMcount = 0;
  2376  003FBE  503D               	movf	main@PWMcount+1,w,c
  2377  003FC0  0A80               	xorlw	128
  2378  003FC2  0F80               	addlw	-128
  2379  003FC4  0E20               	movlw	32
  2380  003FC6  B4D8               	btfsc	status,2,c
  2381  003FC8  5C3C               	subwf	main@PWMcount,w,c
  2382  003FCA  A0D8               	btfss	status,0,c
  2383  003FCC  D004               	goto	l1938
  2384  003FCE  0E00               	movlw	0
  2385  003FD0  6E3D               	movwf	main@PWMcount+1,c
  2386  003FD2  0E00               	movlw	0
  2387  003FD4  6E3C               	movwf	main@PWMcount,c
  2388  003FD6                     l1938:
  2389                           
  2390                           ;main.c: 590: fadeCounter++;
  2391  003FD6  4A20               	infsnz	main@fadeCounter,f,c
  2392  003FD8  2A21               	incf	main@fadeCounter+1,f,c
  2393                           
  2394                           ;main.c: 591: if (fadeCounter > 30) fadeCounter = 0;
  2395  003FDA  5021               	movf	main@fadeCounter+1,w,c
  2396  003FDC  0A80               	xorlw	128
  2397  003FDE  0F80               	addlw	-128
  2398  003FE0  0E1F               	movlw	31
  2399  003FE2  B4D8               	btfsc	status,2,c
  2400  003FE4  5C20               	subwf	main@fadeCounter,w,c
  2401  003FE6  A0D8               	btfss	status,0,c
  2402  003FE8  EF6C  F01A         	goto	l1320
  2403  003FEC  0E00               	movlw	0
  2404  003FEE  6E21               	movwf	main@fadeCounter+1,c
  2405  003FF0  0E00               	movlw	0
  2406  003FF2  6E20               	movwf	main@fadeCounter,c
  2407  003FF4  EF6C  F01A         	goto	l1320
  2408  003FF8                     __end_of_main:
  2409                           	opt stack 0
  2410                           prodl	equ	0xFF3
  2411                           intcon	equ	0xFF2
  2412                           status	equ	0xFD8
  2413                           
  2414                           	psect	cinit
  2415  00323A                     __pcinit:
  2416                           	opt stack 0
  2417  00323A                     start_initialization:
  2418                           	opt stack 0
  2419  00323A                     __initialization:
  2420                           	opt stack 0
  2421                           
  2422                           ; Clear objects allocated to BANK0 (128 bytes)
  2423  00323A  EE00  F080         	lfsr	0,__pbssBANK0
  2424  00323E  0E80               	movlw	128
  2425  003240                     clear_0:
  2426  003240  6AEE               	clrf	postinc0,c
  2427  003242  06E8               	decf	wreg,f,c
  2428  003244  E1FD               	bnz	clear_0
  2429                           
  2430                           ; Clear objects allocated to COMRAM (5 bytes)
  2431  003246  6A45               	clrf	(__pbssCOMRAM+4)& (0+255),c
  2432  003248  6A44               	clrf	(__pbssCOMRAM+3)& (0+255),c
  2433  00324A  6A43               	clrf	(__pbssCOMRAM+2)& (0+255),c
  2434  00324C  6A42               	clrf	(__pbssCOMRAM+1)& (0+255),c
  2435  00324E  6A41               	clrf	__pbssCOMRAM& (0+255),c
  2436  003250                     end_of_initialization:
  2437                           	opt stack 0
  2438  003250                     __end_of__initialization:
  2439                           	opt stack 0
  2440  003250  0E00               	movlw	low (__Lmediumconst shr (0+16))
  2441  003252  6EF8               	movwf	tblptru,c
  2442  003254  0100               	movlb	0
  2443  003256  EFEA  F019         	goto	_main	;jump to C main() function
  2444                           tblptru	equ	0xFF8
  2445                           prodl	equ	0xFF3
  2446                           intcon	equ	0xFF2
  2447                           postinc0	equ	0xFEE
  2448                           wreg	equ	0xFE8
  2449                           status	equ	0xFD8
  2450                           
  2451                           	psect	bssCOMRAM
  2452  000041                     __pbssCOMRAM:
  2453                           	opt stack 0
  2454  000041                     _randx:
  2455                           	opt stack 0
  2456  000041                     	ds	4
  2457  000045                     _randf:
  2458                           	opt stack 0
  2459  000045                     	ds	1
  2460                           tblptru	equ	0xFF8
  2461                           prodl	equ	0xFF3
  2462                           intcon	equ	0xFF2
  2463                           postinc0	equ	0xFEE
  2464                           wreg	equ	0xFE8
  2465                           status	equ	0xFD8
  2466                           
  2467                           	psect	bssBANK0
  2468  000080                     __pbssBANK0:
  2469                           	opt stack 0
  2470  000080                     _led_strip_colors:
  2471                           	opt stack 0
  2472  000080                     	ds	128
  2473                           tblptru	equ	0xFF8
  2474                           prodl	equ	0xFF3
  2475                           intcon	equ	0xFF2
  2476                           postinc0	equ	0xFEE
  2477                           wreg	equ	0xFE8
  2478                           status	equ	0xFD8
  2479                           
  2480                           	psect	cstackCOMRAM
  2481  000001                     __pcstackCOMRAM:
  2482                           	opt stack 0
  2483  000001                     ?_readMyADC:
  2484                           	opt stack 0
  2485  000001                     ?___aldiv:
  2486                           	opt stack 0
  2487  000001                     setGainLevel@gainLevel:
  2488                           	opt stack 0
  2489  000001                     ___aldiv@dividend:
  2490                           	opt stack 0
  2491                           
  2492                           ; 4 bytes @ 0x0
  2493  000001                     	ds	2
  2494  000003                     readMyADC@result:
  2495                           	opt stack 0
  2496                           
  2497                           ; 2 bytes @ 0x2
  2498  000003                     	ds	2
  2499  000005                     readMyADC@ADCnumber:
  2500                           	opt stack 0
  2501  000005                     ___aldiv@divisor:
  2502                           	opt stack 0
  2503                           
  2504                           ; 4 bytes @ 0x4
  2505  000005                     	ds	4
  2506  000009                     ??___aldiv:
  2507                           
  2508                           ; 0 bytes @ 0x8
  2509  000009                     	ds	1
  2510  00000A                     ___aldiv@counter:
  2511                           	opt stack 0
  2512                           
  2513                           ; 1 bytes @ 0x9
  2514  00000A                     	ds	1
  2515  00000B                     ___aldiv@sign:
  2516                           	opt stack 0
  2517                           
  2518                           ; 1 bytes @ 0xA
  2519  00000B                     	ds	1
  2520  00000C                     ___aldiv@quotient:
  2521                           	opt stack 0
  2522                           
  2523                           ; 4 bytes @ 0xB
  2524  00000C                     	ds	4
  2525  000010                     ??_main:
  2526                           
  2527                           ; 0 bytes @ 0xF
  2528  000010                     	ds	4
  2529  000014                     main@total:
  2530                           	opt stack 0
  2531                           
  2532                           ; 4 bytes @ 0x13
  2533  000014                     	ds	4
  2534  000018                     main@midLevel:
  2535                           	opt stack 0
  2536                           
  2537                           ; 2 bytes @ 0x17
  2538  000018                     	ds	2
  2539  00001A                     main@lowLevel:
  2540                           	opt stack 0
  2541                           
  2542                           ; 2 bytes @ 0x19
  2543  00001A                     	ds	2
  2544  00001C                     main@mainLevel:
  2545                           	opt stack 0
  2546                           
  2547                           ; 2 bytes @ 0x1B
  2548  00001C                     	ds	2
  2549  00001E                     main@sampleCount:
  2550                           	opt stack 0
  2551                           
  2552                           ; 2 bytes @ 0x1D
  2553  00001E                     	ds	2
  2554  000020                     main@fadeCounter:
  2555                           	opt stack 0
  2556                           
  2557                           ; 2 bytes @ 0x1F
  2558  000020                     	ds	2
  2559  000022                     main@soundDetectedCount:
  2560                           	opt stack 0
  2561                           
  2562                           ; 2 bytes @ 0x21
  2563  000022                     	ds	2
  2564  000024                     main@highLevel:
  2565                           	opt stack 0
  2566                           
  2567                           ; 2 bytes @ 0x23
  2568  000024                     	ds	2
  2569  000026                     main@soundFlag:
  2570                           	opt stack 0
  2571                           
  2572                           ; 1 bytes @ 0x25
  2573  000026                     	ds	1
  2574  000027                     main@average:
  2575                           	opt stack 0
  2576                           
  2577                           ; 2 bytes @ 0x26
  2578  000027                     	ds	2
  2579  000029                     main@clapCounter:
  2580                           	opt stack 0
  2581                           
  2582                           ; 2 bytes @ 0x28
  2583  000029                     	ds	2
  2584  00002B                     main@currentGainLevel:
  2585                           	opt stack 0
  2586                           
  2587                           ; 2 bytes @ 0x2A
  2588  00002B                     	ds	2
  2589  00002D                     main@lowPWM:
  2590                           	opt stack 0
  2591                           
  2592                           ; 2 bytes @ 0x2C
  2593  00002D                     	ds	2
  2594  00002F                     main@highPWM:
  2595                           	opt stack 0
  2596                           
  2597                           ; 2 bytes @ 0x2E
  2598  00002F                     	ds	2
  2599  000031                     main@sequenceRepeats:
  2600                           	opt stack 0
  2601                           
  2602                           ; 2 bytes @ 0x30
  2603  000031                     	ds	2
  2604  000033                     main@tickCounter:
  2605                           	opt stack 0
  2606                           
  2607                           ; 2 bytes @ 0x32
  2608  000033                     	ds	2
  2609  000035                     main@mode:
  2610                           	opt stack 0
  2611                           
  2612                           ; 1 bytes @ 0x34
  2613  000035                     	ds	1
  2614  000036                     main@midPWM:
  2615                           	opt stack 0
  2616                           
  2617                           ; 2 bytes @ 0x35
  2618  000036                     	ds	2
  2619  000038                     main@patternNumber:
  2620                           	opt stack 0
  2621                           
  2622                           ; 1 bytes @ 0x37
  2623  000038                     	ds	1
  2624  000039                     main@brightness:
  2625                           	opt stack 0
  2626                           
  2627                           ; 1 bytes @ 0x38
  2628  000039                     	ds	1
  2629  00003A                     main@currentStep:
  2630                           	opt stack 0
  2631                           
  2632                           ; 2 bytes @ 0x39
  2633  00003A                     	ds	2
  2634  00003C                     main@PWMcount:
  2635                           	opt stack 0
  2636                           
  2637                           ; 2 bytes @ 0x3B
  2638  00003C                     	ds	2
  2639  00003E                     main@sequenceNumber:
  2640                           	opt stack 0
  2641                           
  2642                           ; 1 bytes @ 0x3D
  2643  00003E                     	ds	1
  2644  00003F                     main@stepNumber:
  2645                           	opt stack 0
  2646                           
  2647                           ; 2 bytes @ 0x3E
  2648  00003F                     	ds	2
  2649                           tblptru	equ	0xFF8
  2650                           prodl	equ	0xFF3
  2651                           intcon	equ	0xFF2
  2652                           postinc0	equ	0xFEE
  2653                           wreg	equ	0xFE8
  2654                           status	equ	0xFD8
  2655                           
  2656 ;; *************** function _setupSPI *****************
  2657 ;; Defined at:
  2658 ;;		line 3 in file "spi.c"
  2659 ;; Parameters:    Size  Location     Type
  2660 ;;		None
  2661 ;; Auto vars:     Size  Location     Type
  2662 ;;		None
  2663 ;; Return value:  Size  Location     Type
  2664 ;;		None               void
  2665 ;; Registers used:
  2666 ;;		wreg, status,2
  2667 ;; Tracked objects:
  2668 ;;		On entry : 0/0
  2669 ;;		On exit  : 0/0
  2670 ;;		Unchanged: 0/0
  2671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2672 ;;      Params:         0       0       0       0       0
  2673 ;;      Locals:         0       0       0       0       0
  2674 ;;      Temps:          0       0       0       0       0
  2675 ;;      Totals:         0       0       0       0       0
  2676 ;;Total ram usage:        0 bytes
  2677 ;; Hardware stack levels used:    1
  2678 ;; This function calls:
  2679 ;;		Nothing
  2680 ;; This function is called by:
  2681 ;;		_main
  2682 ;; This function uses a non-reentrant model
  2683 ;;
  2684                           
  2685                           	psect	text1
  2686  003226                     __ptext1:
  2687                           	opt stack 0
  2688  003226                     _setupSPI:
  2689                           	opt stack 30
  2690                           
  2691                           ;spi.c: 6: TRISCbits.TRISC5 = 0;
  2692                           
  2693                           ;incstack = 0
  2694  003226  9A94               	bcf	3988,5,c	;volatile
  2695                           
  2696                           ;spi.c: 7: TRISCbits.TRISC4 = 1;
  2697  003228  8894               	bsf	3988,4,c	;volatile
  2698                           
  2699                           ;spi.c: 8: TRISCbits.TRISC3 = 0;
  2700  00322A  9694               	bcf	3988,3,c	;volatile
  2701                           
  2702                           ;spi.c: 11: TRISCbits.TRISC0 = 0;
  2703  00322C  9094               	bcf	3988,0,c	;volatile
  2704                           
  2705                           ;spi.c: 12: PORTCbits.RC0 = 1;
  2706  00322E  8082               	bsf	3970,0,c	;volatile
  2707                           
  2708                           ;spi.c: 15: SSPSTAT = 0x40;
  2709  003230  0E40               	movlw	64
  2710  003232  6EC7               	movwf	4039,c	;volatile
  2711                           
  2712                           ;spi.c: 16: SSPCON1 = 0x20;
  2713  003234  0E20               	movlw	32
  2714  003236  6EC6               	movwf	4038,c	;volatile
  2715  003238  0012               	return	
  2716  00323A                     __end_of_setupSPI:
  2717                           	opt stack 0
  2718                           tblptru	equ	0xFF8
  2719                           prodl	equ	0xFF3
  2720                           intcon	equ	0xFF2
  2721                           postinc0	equ	0xFEE
  2722                           wreg	equ	0xFE8
  2723                           status	equ	0xFD8
  2724                           
  2725 ;; *************** function _setGainLevel *****************
  2726 ;; Defined at:
  2727 ;;		line 21 in file "spi.c"
  2728 ;; Parameters:    Size  Location     Type
  2729 ;;  gainLevel       1    wreg     unsigned char 
  2730 ;; Auto vars:     Size  Location     Type
  2731 ;;  gainLevel       1    0[COMRAM] unsigned char 
  2732 ;; Return value:  Size  Location     Type
  2733 ;;		None               void
  2734 ;; Registers used:
  2735 ;;		wreg, status,2
  2736 ;; Tracked objects:
  2737 ;;		On entry : 0/0
  2738 ;;		On exit  : 0/0
  2739 ;;		Unchanged: 0/0
  2740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2741 ;;      Params:         0       0       0       0       0
  2742 ;;      Locals:         1       0       0       0       0
  2743 ;;      Temps:          0       0       0       0       0
  2744 ;;      Totals:         1       0       0       0       0
  2745 ;;Total ram usage:        1 bytes
  2746 ;; Hardware stack levels used:    1
  2747 ;; This function calls:
  2748 ;;		Nothing
  2749 ;; This function is called by:
  2750 ;;		_main
  2751 ;; This function uses a non-reentrant model
  2752 ;;
  2753                           
  2754                           	psect	text2
  2755  00325A                     __ptext2:
  2756                           	opt stack 0
  2757  00325A                     _setGainLevel:
  2758                           	opt stack 30
  2759                           
  2760                           ;incstack = 0
  2761                           ;setGainLevel@gainLevel stored from wreg
  2762  00325A  CFE8 F001          	movff	wreg,setGainLevel@gainLevel
  2763                           
  2764                           ;spi.c: 24: SSPSTAT = 0xC0;
  2765  00325E  0EC0               	movlw	192
  2766  003260  6EC7               	movwf	4039,c	;volatile
  2767                           
  2768                           ;spi.c: 27: SSPCON1 = 0x20;
  2769  003262  0E20               	movlw	32
  2770  003264  6EC6               	movwf	4038,c	;volatile
  2771                           
  2772                           ;spi.c: 31: PORTCbits.RC0 = 0;
  2773  003266  9082               	bcf	3970,0,c	;volatile
  2774                           
  2775                           ;spi.c: 34: SSPIF = 0;
  2776  003268  969E               	bcf	3998,3,c	;volatile
  2777                           
  2778                           ;spi.c: 35: SSPBUF = 0x13;
  2779  00326A  0E13               	movlw	19
  2780  00326C  6EC9               	movwf	4041,c	;volatile
  2781  00326E                     l303:
  2782  00326E  A69E               	btfss	3998,3,c	;volatile
  2783  003270  D7FE               	goto	l303
  2784                           
  2785                           ;spi.c: 39: SSPIF = 0;
  2786  003272  969E               	bcf	3998,3,c	;volatile
  2787                           
  2788                           ;spi.c: 40: SSPBUF = gainLevel;
  2789  003274  C001  FFC9         	movff	setGainLevel@gainLevel,4041	;volatile
  2790  003278                     l306:
  2791  003278  A69E               	btfss	3998,3,c	;volatile
  2792  00327A  D7FE               	goto	l306
  2793                           
  2794                           ;spi.c: 44: PORTCbits.RC0 = 1;
  2795  00327C  8082               	bsf	3970,0,c	;volatile
  2796  00327E  0012               	return	
  2797  003280                     __end_of_setGainLevel:
  2798                           	opt stack 0
  2799                           tblptru	equ	0xFF8
  2800                           prodl	equ	0xFF3
  2801                           intcon	equ	0xFF2
  2802                           postinc0	equ	0xFEE
  2803                           wreg	equ	0xFE8
  2804                           status	equ	0xFD8
  2805                           
  2806 ;; *************** function _readMyADC *****************
  2807 ;; Defined at:
  2808 ;;		line 597 in file "main.c"
  2809 ;; Parameters:    Size  Location     Type
  2810 ;;  ADCnumber       1    wreg     unsigned char 
  2811 ;; Auto vars:     Size  Location     Type
  2812 ;;  ADCnumber       1    4[COMRAM] unsigned char 
  2813 ;;  result          2    2[COMRAM] int 
  2814 ;; Return value:  Size  Location     Type
  2815 ;;                  2    0[COMRAM] int 
  2816 ;; Registers used:
  2817 ;;		wreg, status,2, status,0
  2818 ;; Tracked objects:
  2819 ;;		On entry : 0/0
  2820 ;;		On exit  : 0/0
  2821 ;;		Unchanged: 0/0
  2822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2823 ;;      Params:         2       0       0       0       0
  2824 ;;      Locals:         3       0       0       0       0
  2825 ;;      Temps:          0       0       0       0       0
  2826 ;;      Totals:         5       0       0       0       0
  2827 ;;Total ram usage:        5 bytes
  2828 ;; Hardware stack levels used:    1
  2829 ;; This function calls:
  2830 ;;		Nothing
  2831 ;; This function is called by:
  2832 ;;		_main
  2833 ;; This function uses a non-reentrant model
  2834 ;;
  2835                           
  2836                           	psect	text3
  2837  003280                     __ptext3:
  2838                           	opt stack 0
  2839  003280                     _readMyADC:
  2840                           	opt stack 30
  2841                           
  2842                           ;incstack = 0
  2843                           ;readMyADC@ADCnumber stored from wreg
  2844  003280  CFE8 F005          	movff	wreg,readMyADC@ADCnumber
  2845                           
  2846                           ;main.c: 599: int result;
  2847                           ;main.c: 602: switch(ADCnumber)
  2848  003284  D009               	goto	l1014
  2849  003286                     l1004:
  2850  003286  0E01               	movlw	1
  2851  003288  D005               	goto	L21
  2852  00328A                     l1006:
  2853  00328A  0E05               	movlw	5
  2854  00328C  D003               	goto	L21
  2855  00328E                     l1008:
  2856  00328E  0E09               	movlw	9
  2857  003290  D001               	goto	L21
  2858  003292                     l1010:
  2859  003292  0E0D               	movlw	13
  2860  003294                     L21:
  2861  003294  6EC2               	movwf	4034,c	;volatile
  2862                           
  2863                           ;main.c: 611: break;
  2864  003296  D00D               	goto	l1016
  2865  003298                     l1014:
  2866  003298  5005               	movf	readMyADC@ADCnumber,w,c
  2867                           
  2868                           ; Switch size 1, requested type "space"
  2869                           ; Number of cases is 4, Range of values is 0 to 3
  2870                           ; switch strategies available:
  2871                           ; Name         Instructions Cycles
  2872                           ; simple_byte           13     7 (average)
  2873                           ;	Chosen strategy is simple_byte
  2874  00329A  0A00               	xorlw	0	; case 0
  2875  00329C  B4D8               	btfsc	status,2,c
  2876  00329E  D7F3               	goto	l1004
  2877  0032A0  0A01               	xorlw	1	; case 1
  2878  0032A2  B4D8               	btfsc	status,2,c
  2879  0032A4  D7F2               	goto	l1006
  2880  0032A6  0A03               	xorlw	3	; case 2
  2881  0032A8  B4D8               	btfsc	status,2,c
  2882  0032AA  D7F1               	goto	l1008
  2883  0032AC  0A01               	xorlw	1	; case 3
  2884  0032AE  B4D8               	btfsc	status,2,c
  2885  0032B0  D7F0               	goto	l1010
  2886  0032B2                     l1016:
  2887                           
  2888                           ;main.c: 615: ADCON0 |= 0x02;
  2889  0032B2  82C2               	bsf	4034,1,c	;volatile
  2890  0032B4                     l221:
  2891  0032B4  B2C2               	btfsc	4034,1,c	;volatile
  2892  0032B6  D7FE               	goto	l221
  2893                           
  2894                           ;main.c: 621: result = ADRESL;
  2895  0032B8  CFC3 F003          	movff	4035,readMyADC@result	;volatile
  2896  0032BC  6A04               	clrf	readMyADC@result+1,c
  2897                           
  2898                           ;main.c: 622: result += (ADRESH << 8);
  2899  0032BE  50C4               	movf	4036,w,c	;volatile
  2900  0032C0  2604               	addwf	readMyADC@result+1,f,c
  2901                           
  2902                           ;main.c: 624: return result;
  2903  0032C2  C003  F001         	movff	readMyADC@result,?_readMyADC
  2904  0032C6  C004  F002         	movff	readMyADC@result+1,?_readMyADC+1
  2905  0032CA  0012               	return	
  2906  0032CC                     __end_of_readMyADC:
  2907                           	opt stack 0
  2908                           tblptru	equ	0xFF8
  2909                           prodl	equ	0xFF3
  2910                           intcon	equ	0xFF2
  2911                           postinc0	equ	0xFEE
  2912                           wreg	equ	0xFE8
  2913                           status	equ	0xFD8
  2914                           
  2915 ;; *************** function ___aldiv *****************
  2916 ;; Defined at:
  2917 ;;		line 8 in file "/opt/microchip/xc8/v1.30/sources/common/aldiv.c"
  2918 ;; Parameters:    Size  Location     Type
  2919 ;;  dividend        4    0[COMRAM] long 
  2920 ;;  divisor         4    4[COMRAM] long 
  2921 ;; Auto vars:     Size  Location     Type
  2922 ;;  quotient        4   11[COMRAM] long 
  2923 ;;  sign            1   10[COMRAM] unsigned char 
  2924 ;;  counter         1    9[COMRAM] unsigned char 
  2925 ;; Return value:  Size  Location     Type
  2926 ;;                  4    0[COMRAM] long 
  2927 ;; Registers used:
  2928 ;;		wreg, status,2, status,0
  2929 ;; Tracked objects:
  2930 ;;		On entry : 0/0
  2931 ;;		On exit  : 0/0
  2932 ;;		Unchanged: 0/0
  2933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2934 ;;      Params:         8       0       0       0       0
  2935 ;;      Locals:         6       0       0       0       0
  2936 ;;      Temps:          1       0       0       0       0
  2937 ;;      Totals:        15       0       0       0       0
  2938 ;;Total ram usage:       15 bytes
  2939 ;; Hardware stack levels used:    1
  2940 ;; This function calls:
  2941 ;;		Nothing
  2942 ;; This function is called by:
  2943 ;;		_main
  2944 ;; This function uses a non-reentrant model
  2945 ;;
  2946                           
  2947                           	psect	text4
  2948  0032CC                     __ptext4:
  2949                           	opt stack 0
  2950  0032CC                     ___aldiv:
  2951                           	opt stack 30
  2952                           
  2953                           ;incstack = 0
  2954  0032CC  6E09               	movwf	??___aldiv& (0+255),c
  2955  0032CE  0E00               	movlw	0
  2956  0032D0  6E0B               	movwf	___aldiv@sign,c
  2957  0032D2  5009               	movf	??___aldiv& (0+255),w,c
  2958  0032D4  5008               	movf	___aldiv@divisor+3,w,c
  2959  0032D6  0A80               	xorlw	128
  2960  0032D8  0F80               	addlw	128
  2961  0032DA  E108               	bnz	u425
  2962  0032DC  0E00               	movlw	0
  2963  0032DE  5C07               	subwf	___aldiv@divisor+2,w,c
  2964  0032E0  E105               	bnz	u425
  2965  0032E2  0E00               	movlw	0
  2966  0032E4  5C06               	subwf	___aldiv@divisor+1,w,c
  2967  0032E6  E102               	bnz	u425
  2968  0032E8  0E00               	movlw	0
  2969  0032EA  5C05               	subwf	___aldiv@divisor,w,c
  2970  0032EC                     u425:
  2971  0032EC  B0D8               	btfsc	status,0,c
  2972  0032EE  D00C               	goto	l1246
  2973  0032F0  1E08               	comf	___aldiv@divisor+3,f,c
  2974  0032F2  1E07               	comf	___aldiv@divisor+2,f,c
  2975  0032F4  1E06               	comf	___aldiv@divisor+1,f,c
  2976  0032F6  6C05               	negf	___aldiv@divisor,c
  2977  0032F8  0E00               	movlw	0
  2978  0032FA  2206               	addwfc	___aldiv@divisor+1,f,c
  2979  0032FC  2207               	addwfc	___aldiv@divisor+2,f,c
  2980  0032FE  2208               	addwfc	___aldiv@divisor+3,f,c
  2981  003300  6E09               	movwf	??___aldiv& (0+255),c
  2982  003302  0E01               	movlw	1
  2983  003304  6E0B               	movwf	___aldiv@sign,c
  2984  003306  5009               	movf	??___aldiv& (0+255),w,c
  2985  003308                     l1246:
  2986  003308  5004               	movf	___aldiv@dividend+3,w,c
  2987  00330A  0A80               	xorlw	128
  2988  00330C  0F80               	addlw	128
  2989  00330E  E108               	bnz	u435
  2990  003310  0E00               	movlw	0
  2991  003312  5C03               	subwf	___aldiv@dividend+2,w,c
  2992  003314  E105               	bnz	u435
  2993  003316  0E00               	movlw	0
  2994  003318  5C02               	subwf	___aldiv@dividend+1,w,c
  2995  00331A  E102               	bnz	u435
  2996  00331C  0E00               	movlw	0
  2997  00331E  5C01               	subwf	___aldiv@dividend,w,c
  2998  003320                     u435:
  2999  003320  B0D8               	btfsc	status,0,c
  3000  003322  D00A               	goto	l1252
  3001  003324  1E04               	comf	___aldiv@dividend+3,f,c
  3002  003326  1E03               	comf	___aldiv@dividend+2,f,c
  3003  003328  1E02               	comf	___aldiv@dividend+1,f,c
  3004  00332A  6C01               	negf	___aldiv@dividend,c
  3005  00332C  0E00               	movlw	0
  3006  00332E  2202               	addwfc	___aldiv@dividend+1,f,c
  3007  003330  2203               	addwfc	___aldiv@dividend+2,f,c
  3008  003332  2204               	addwfc	___aldiv@dividend+3,f,c
  3009  003334  0E01               	movlw	1
  3010  003336  1A0B               	xorwf	___aldiv@sign,f,c
  3011  003338                     l1252:
  3012  003338  0E00               	movlw	0
  3013  00333A  6E0C               	movwf	___aldiv@quotient,c
  3014  00333C  0E00               	movlw	0
  3015  00333E  6E0D               	movwf	___aldiv@quotient+1,c
  3016  003340  0E00               	movlw	0
  3017  003342  6E0E               	movwf	___aldiv@quotient+2,c
  3018  003344  0E00               	movlw	0
  3019  003346  6E0F               	movwf	___aldiv@quotient+3,c
  3020  003348  5008               	movf	___aldiv@divisor+3,w,c
  3021  00334A  1005               	iorwf	___aldiv@divisor,w,c
  3022  00334C  1006               	iorwf	___aldiv@divisor+1,w,c
  3023  00334E  1007               	iorwf	___aldiv@divisor+2,w,c
  3024  003350  B4D8               	btfsc	status,2,c
  3025  003352  D02C               	goto	l1274
  3026  003354  6E09               	movwf	??___aldiv& (0+255),c
  3027  003356  0E01               	movlw	1
  3028  003358  6E0A               	movwf	___aldiv@counter,c
  3029  00335A  5009               	movf	??___aldiv& (0+255),w,c
  3030  00335C  D006               	goto	l1260
  3031  00335E                     l1258:
  3032  00335E  90D8               	bcf	status,0,c
  3033  003360  3605               	rlcf	___aldiv@divisor,f,c
  3034  003362  3606               	rlcf	___aldiv@divisor+1,f,c
  3035  003364  3607               	rlcf	___aldiv@divisor+2,f,c
  3036  003366  3608               	rlcf	___aldiv@divisor+3,f,c
  3037  003368  2A0A               	incf	___aldiv@counter,f,c
  3038  00336A                     l1260:
  3039  00336A  AE08               	btfss	___aldiv@divisor+3,7,c
  3040  00336C  D7F8               	goto	l1258
  3041  00336E                     l1262:
  3042  00336E  90D8               	bcf	status,0,c
  3043  003370  360C               	rlcf	___aldiv@quotient,f,c
  3044  003372  360D               	rlcf	___aldiv@quotient+1,f,c
  3045  003374  360E               	rlcf	___aldiv@quotient+2,f,c
  3046  003376  360F               	rlcf	___aldiv@quotient+3,f,c
  3047  003378  5005               	movf	___aldiv@divisor,w,c
  3048  00337A  5C01               	subwf	___aldiv@dividend,w,c
  3049  00337C  5006               	movf	___aldiv@divisor+1,w,c
  3050  00337E  5802               	subwfb	___aldiv@dividend+1,w,c
  3051  003380  5007               	movf	___aldiv@divisor+2,w,c
  3052  003382  5803               	subwfb	___aldiv@dividend+2,w,c
  3053  003384  5008               	movf	___aldiv@divisor+3,w,c
  3054  003386  5804               	subwfb	___aldiv@dividend+3,w,c
  3055  003388  A0D8               	btfss	status,0,c
  3056  00338A  D009               	goto	l1270
  3057  00338C  5005               	movf	___aldiv@divisor,w,c
  3058  00338E  5E01               	subwf	___aldiv@dividend,f,c
  3059  003390  5006               	movf	___aldiv@divisor+1,w,c
  3060  003392  5A02               	subwfb	___aldiv@dividend+1,f,c
  3061  003394  5007               	movf	___aldiv@divisor+2,w,c
  3062  003396  5A03               	subwfb	___aldiv@dividend+2,f,c
  3063  003398  5008               	movf	___aldiv@divisor+3,w,c
  3064  00339A  5A04               	subwfb	___aldiv@dividend+3,f,c
  3065  00339C  800C               	bsf	___aldiv@quotient,0,c
  3066  00339E                     l1270:
  3067  00339E  90D8               	bcf	status,0,c
  3068  0033A0  3208               	rrcf	___aldiv@divisor+3,f,c
  3069  0033A2  3207               	rrcf	___aldiv@divisor+2,f,c
  3070  0033A4  3206               	rrcf	___aldiv@divisor+1,f,c
  3071  0033A6  3205               	rrcf	___aldiv@divisor,f,c
  3072  0033A8  2E0A               	decfsz	___aldiv@counter,f,c
  3073  0033AA  D7E1               	goto	l1262
  3074  0033AC                     l1274:
  3075  0033AC  500B               	movf	___aldiv@sign,w,c
  3076  0033AE  B4D8               	btfsc	status,2,c
  3077  0033B0  D008               	goto	l1278
  3078  0033B2  1E0F               	comf	___aldiv@quotient+3,f,c
  3079  0033B4  1E0E               	comf	___aldiv@quotient+2,f,c
  3080  0033B6  1E0D               	comf	___aldiv@quotient+1,f,c
  3081  0033B8  6C0C               	negf	___aldiv@quotient,c
  3082  0033BA  0E00               	movlw	0
  3083  0033BC  220D               	addwfc	___aldiv@quotient+1,f,c
  3084  0033BE  220E               	addwfc	___aldiv@quotient+2,f,c
  3085  0033C0  220F               	addwfc	___aldiv@quotient+3,f,c
  3086  0033C2                     l1278:
  3087  0033C2  C00C  F001         	movff	___aldiv@quotient,?___aldiv
  3088  0033C6  C00D  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  3089  0033CA  C00E  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  3090  0033CE  C00F  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  3091  0033D2  0012               	return	
  3092  0033D4                     __end_of___aldiv:
  3093                           	opt stack 0
  3094  0000                     tblptru	equ	0xFF8
  3095                           prodl	equ	0xFF3
  3096                           intcon	equ	0xFF2
  3097                           postinc0	equ	0xFEE
  3098                           wreg	equ	0xFE8
  3099                           status	equ	0xFD8
  3100                           tblptru	equ	0xFF8
  3101                           prodl	equ	0xFF3
  3102                           intcon	equ	0xFF2
  3103                           postinc0	equ	0xFEE
  3104                           wreg	equ	0xFE8
  3105                           status	equ	0xFD8
  3106                           
  3107                           	psect	rparam
  3108  0000                     tblptru	equ	0xFF8
  3109                           prodl	equ	0xFF3
  3110                           intcon	equ	0xFF2
  3111                           postinc0	equ	0xFEE
  3112                           wreg	equ	0xFE8
  3113                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         133
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     64      69
    BANK0           128      0     128
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___aldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                49    49      0    2528
                                             15 COMRAM    49    49      0
                            ___aldiv
                          _readMyADC
                       _setGainLevel
                           _setupSPI
 ---------------------------------------------------------------------------------
 (1) _setupSPI                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setGainLevel                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _readMyADC                                            5     3      2      30
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             15     7      8     263
                                              0 COMRAM    15     7      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___aldiv
   _readMyADC
   _setGainLevel
   _setupSPI

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0      80       4      100.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     40      45       1       54.3%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C5      11        0.0%
DATA                 0      0      C5      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Sun Sep  7 01:58:46 2014

                     l70 376E                       l47 34F8                       l56 367A  
                     l81 383E                       l82 3840             __CFG_CP0$OFF 000000  
                    l200 3F6A                      l202 3F84                      l204 3F9E  
                    l221 32B4                      l206 3FB8                      l303 326E  
                    l306 3278                      l156 3CC0                      l181 3E30  
                    l183 3E4A                      l185 3E64                      l196 3F36  
                    l198 3F50                      u425 32EC                      u435 3320  
                    u915 38F0                      u845 3852                      u945 393C  
                    u875 389C                      wreg 000FE8             __CFG_IESO$ON 000000  
           __CFG_FOSC$EC 000000              main@highPWM 002F              main@average 0027  
                   l1010 3292                     l1004 3286                     l1006 328A  
                   l1014 3298                     l1008 328E                     l1016 32B2  
                   l1320 34D8                     l1330 3502                     l1260 336A  
                   l1252 3338                     l1404 35CC                     l1270 339E  
                   l1262 336E                     l1246 3308                     l1510 382A  
                   l1430 36C8                     l1422 3694                     l1258 335E  
                   l1274 33AC                     l1530 388C                     l1426 36B0  
                   l1540 38C2                     l1524 3878                     l1508 3822  
                   l1444 3706                     l1452 3724                     l1436 36E6  
                   l1364 358A                     l1278 33C2                     l1710 3B9A  
                   l1702 3B78                     l1542 38C6                     l1526 387C  
                   l1606 39E2                     l1446 370E                     l1704 3B80  
                   l1560 391A                     l1544 38CE                     l1528 3884  
                   l1472 377C                     l1456 373E                     l1464 3766  
                   l1384 35AA                     l1810 3D40                     l1802 3D24  
                   l1722 3BCE                     l1714 3BAE                     l1642 3A82  
                   l1634 3A66                     l1562 3922                     l1482 37A8  
                   l1458 3746                     l1474 3784                     l1900 3EEE  
                   l1820 3D6A                     l1708 3B92                     l1716 3BB6  
                   l1564 392A                     l1548 38DE                     l1468 3770  
                   l1830 3D96                     l1734 3C00                     l1662 3AD2  
                   l1654 3AB4                     l1582 397C                     l1574 3962  
                   l1558 3916                     l1486 37BC                     l1920 3F6C  
                   l1912 3F38                     l1904 3F06                     l1824 3D7C  
                   l1816 3D58                     l1728 3BE6                     l1736 3C08  
                   l1648 3A9A                     l1656 3ABC                     l1760 3C6E  
                   l1576 3966                     l1834 3DA6                     l1682 3B24  
                   l1674 3B04                     l1578 396E                     l1932 3FBA  
                   l1924 3F86                     l1916 3F52                     l1908 3F1E  
                   l1772 3CAA                     l1668 3AEA                     l1676 3B0C  
                   l1870 3E4C                     l1862 3E18                     l1774 3CAE  
                   l1694 3B56                     l1928 3FA0                     l1688 3B3C  
                   l1696 3B5E                     l1880 3E82                     l1938 3FD6  
                   l1874 3E66                     l1866 3E32                     l1858 3E0A  
                   l1892 3EC0                     l1888 3EAA                     l1896 3ED6  
                   u1335 3C84            __CFG_FCMEN$ON 000000                     _main 33D4  
                   prodl 000FF3                     start 0000            __CFG_FOSC2$ON 000000  
        __end_of___aldiv 33D4                    ?_main 0001             main@midLevel 0018  
                  _T0CON 000FD5                    _TMR0H 000FD7                    _TMR0L 000FD6  
                  _PORTA 000F80                    _PORTB 000F81                    _PORTC 000F82  
                  _TRISA 000F92                    _TRISB 000F93                    _TRISC 000F94  
                  _SSPIF 007CF3             main@lowLevel 001A                    _randf 0045  
                  _randx 0041                    status 000FD8          __initialization 323A  
           __end_of_main 3FF8       main@sequenceNumber 003E                   ??_main 0010  
          __activetblptr 000002            main@highLevel 0024            main@mainLevel 001C  
                 _ADCON0 000FC2                   _ADCON1 000FC1                   _ADCON2 000FC0  
                 _ADRESH 000FC4                   _ADRESL 000FC3                   _GODONE 007E11  
         __CFG_WDTEN$OFF 000000                   _TMR0IF 007F92                   _SSPBUF 000FC9  
         __CFG_XINST$OFF 000000                ??___aldiv 0009           __CFG_STVREN$ON 000000  
                 clear_0 3240     main@currentGainLevel 002B         __end_of_setupSPI 323A  
                 tblptru 000FF8            main@soundFlag 0026               __accesstop 0080  
__end_of__initialization 3250           __pcstackCOMRAM 0001            ?_setGainLevel 0001  
    main@sequenceRepeats 0031        main@patternNumber 0038               __pbssBANK0 0080  
     __size_of_readMyADC 004C           main@brightness 0039           ??_setGainLevel 0001  
     readMyADC@ADCnumber 0005                  _SSP1BUF 000FC9                  _SSPCON1 000FC6  
                _SSPSTAT 000FC7                  __Hparam 0000                  __Lparam 0000  
              ?_setupSPI 0001                  ___aldiv 32CC                  __pcinit 323A  
                __ramtop 0400                  __ptext0 33D4                  __ptext1 3226  
                __ptext2 325A                  __ptext3 3280                  __ptext4 32CC  
      __end_of_readMyADC 32CC         ___aldiv@dividend 0001     end_of_initialization 3250  
          __Lmediumconst 0000         _led_strip_colors 0080               ??_setupSPI 0001  
       ___aldiv@quotient 000C           main@stepNumber 003F                  postinc0 000FEE  
              _PORTBbits 000F81                _PORTCbits 000F82                _TRISCbits 000F94  
   __end_of_setGainLevel 3280               main@midPWM 0036          main@fadeCounter 0020  
             main@lowPWM 002D      start_initialization 323A          main@clapCounter 0029  
            __pbssCOMRAM 0041      __CFG_CCP2MX$DEFAULT 000000                 ?___aldiv 0001  
      __size_of_setupSPI 0014    __size_of_setGainLevel 0026                _readMyADC 3280  
        ___aldiv@divisor 0005          ___aldiv@counter 000A                 _PIR1bits 000F9E  
       __CFG_WDTPS$32768 000000                 _SSP1CON1 000FC6             _setGainLevel 325A  
        main@currentStep 003A                main@total 0014               ?_readMyADC 0001  
               __Hrparam 0000                 __Lrparam 0000         __size_of___aldiv 0108  
        main@sampleCount 001E          readMyADC@result 0003          main@tickCounter 0033  
           _SSP1CON1bits 000FC6            __size_of_main 0C24                 _setupSPI 3226  
               main@mode 0035              ??_readMyADC 0003   main@soundDetectedCount 0022  
  setGainLevel@gainLevel 0001             ___aldiv@sign 000B             main@PWMcount 003C  
