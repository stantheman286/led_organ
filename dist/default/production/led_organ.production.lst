

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Fri Sep  5 06:30:05 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F24J10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    16  0000                     _ADCON0	set	4034
    17  0000                     _ADCON1	set	4033
    18  0000                     _ADCON2	set	4032
    19  0000                     _ADRESH	set	4036
    20  0000                     _ADRESL	set	4035
    21  0000                     _PIR1bits	set	3998
    22  0000                     _PORTA	set	3968
    23  0000                     _PORTB	set	3969
    24  0000                     _PORTBbits	set	3969
    25  0000                     _PORTC	set	3970
    26  0000                     _SSP1BUF	set	4041
    27  0000                     _SSP1CON1	set	4038
    28  0000                     _SSP1CON1bits	set	4038
    29  0000                     _SSPBUF	set	4041
    30  0000                     _SSPCON1	set	4038
    31  0000                     _SSPSTAT	set	4039
    32  0000                     _T0CON	set	4053
    33  0000                     _TMR0H	set	4055
    34  0000                     _TMR0L	set	4054
    35  0000                     _TRISA	set	3986
    36  0000                     _TRISB	set	3987
    37  0000                     _TRISC	set	3988
    38  0000                     _TRISCbits	set	3988
    39  0000                     _GODONE	set	32273
    40  0000                     _SSPIF	set	31987
    41  0000                     _TMR0IF	set	32658
    42                           
    43 ;;
    44 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
    45 ;;
    46 ;; *************** function _main *****************
    47 ;; Defined at:
    48 ;;		line 45 in file "main.c"
    49 ;; Parameters:    Size  Location     Type
    50 ;;		None
    51 ;; Auto vars:     Size  Location     Type
    52 ;;  total           4   19[COMRAM] long 
    53 ;;  stepNumber      2   62[COMRAM] int 
    54 ;;  PWMcount        2   59[COMRAM] int 
    55 ;;  currentStep     2   57[COMRAM] int 
    56 ;;  midPWM          2   53[COMRAM] int 
    57 ;;  tickCounter     2   50[COMRAM] int 
    58 ;;  sequenceRepe    2   48[COMRAM] int 
    59 ;;  highPWM         2   46[COMRAM] int 
    60 ;;  lowPWM          2   44[COMRAM] int 
    61 ;;  currentGainL    2   42[COMRAM] int 
    62 ;;  clapCounter     2   40[COMRAM] int 
    63 ;;  average         2   38[COMRAM] int 
    64 ;;  highLevel       2   35[COMRAM] int 
    65 ;;  soundDetecte    2   33[COMRAM] int 
    66 ;;  fadeCounter     2   31[COMRAM] int 
    67 ;;  sampleCount     2   29[COMRAM] int 
    68 ;;  mainLevel       2   27[COMRAM] int 
    69 ;;  lowLevel        2   25[COMRAM] int 
    70 ;;  midLevel        2   23[COMRAM] int 
    71 ;;  sequenceNumb    1   61[COMRAM] unsigned char 
    72 ;;  brightness      1   56[COMRAM] unsigned char 
    73 ;;  patternNumbe    1   55[COMRAM] unsigned char 
    74 ;;  mode            1   52[COMRAM] unsigned char 
    75 ;;  soundFlag       1   37[COMRAM] unsigned char 
    76 ;; Return value:  Size  Location     Type
    77 ;;		None               void
    78 ;; Registers used:
    79 ;;		wreg, status,2, status,0, prodl, cstack
    80 ;; Tracked objects:
    81 ;;		On entry : 0/0
    82 ;;		On exit  : 0/0
    83 ;;		Unchanged: 0/0
    84 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
    85 ;;      Params:         0       0       0       0       0
    86 ;;      Locals:        45       0       0       0       0
    87 ;;      Temps:          4       0       0       0       0
    88 ;;      Totals:        49       0       0       0       0
    89 ;;Total ram usage:       49 bytes
    90 ;; Hardware stack levels required when called:    1
    91 ;; This function calls:
    92 ;;		___aldiv
    93 ;;		_readMyADC
    94 ;;		_setGainLevel
    95 ;;		_setupSPI
    96 ;; This function is called by:
    97 ;;		Startup code after reset
    98 ;; This function uses a non-reentrant model
    99 ;;
   100                           
   101                           	psect	text0
   102  00341C                     __ptext0:
   103                           	opt stack 0
   104  00341C                     _main:
   105                           	opt stack 30
   106                           
   107                           ;main.c: 50: ADCON1 = 0x0B;
   108                           
   109                           ;incstack = 0
   110  00341C  0E0B               	movlw	11
   111  00341E  6EC1               	movwf	4033,c	;volatile
   112                           
   113                           ;main.c: 54: ADCON0 = 0x01;
   114  003420  0E01               	movlw	1
   115  003422  6EC2               	movwf	4034,c	;volatile
   116                           
   117                           ;main.c: 57: ADCON2 = 0xB5;
   118  003424  0EB5               	movlw	181
   119  003426  6EC0               	movwf	4032,c	;volatile
   120                           
   121                           ;main.c: 60: TRISA = 0x0F;
   122  003428  0E0F               	movlw	15
   123  00342A  6E92               	movwf	3986,c	;volatile
   124                           
   125                           ;main.c: 61: TRISB = 0x00;
   126  00342C  0E00               	movlw	0
   127  00342E  6E93               	movwf	3987,c	;volatile
   128                           
   129                           ;main.c: 62: TRISC = 0x00;
   130  003430  0E00               	movlw	0
   131  003432  6E94               	movwf	3988,c	;volatile
   132                           
   133                           ;main.c: 69: PORTA = 0x00;
   134  003434  0E00               	movlw	0
   135  003436  6E80               	movwf	3968,c	;volatile
   136                           
   137                           ;main.c: 70: PORTB = 0x00;
   138  003438  0E00               	movlw	0
   139  00343A  6E81               	movwf	3969,c	;volatile
   140                           
   141                           ;main.c: 71: PORTC = 0x00;
   142  00343C  0E00               	movlw	0
   143  00343E  6E82               	movwf	3970,c	;volatile
   144                           
   145                           ;main.c: 78: setupSPI();
   146  003440  EC38  F019         	call	_setupSPI	;wreg free
   147                           
   148                           ;main.c: 81: int highLevel = 0;
   149  003444  0E00               	movlw	0
   150  003446  6E25               	movwf	main@highLevel+1,c
   151  003448  0E00               	movlw	0
   152  00344A  6E24               	movwf	main@highLevel,c
   153                           
   154                           ;main.c: 82: int midLevel = 0;
   155  00344C  0E00               	movlw	0
   156  00344E  6E19               	movwf	main@midLevel+1,c
   157  003450  0E00               	movlw	0
   158  003452  6E18               	movwf	main@midLevel,c
   159                           
   160                           ;main.c: 83: int lowLevel = 0;
   161  003454  0E00               	movlw	0
   162  003456  6E1B               	movwf	main@lowLevel+1,c
   163  003458  0E00               	movlw	0
   164  00345A  6E1A               	movwf	main@lowLevel,c
   165                           
   166                           ;main.c: 84: int mainLevel = 0;
   167  00345C  0E00               	movlw	0
   168  00345E  6E1D               	movwf	main@mainLevel+1,c
   169  003460  0E00               	movlw	0
   170  003462  6E1C               	movwf	main@mainLevel,c
   171                           
   172                           ;main.c: 97: TMR0IF = 0;
   173  003464  94F2               	bcf	intcon,2,c	;volatile
   174                           
   175                           ;main.c: 98: TMR0H = 0xF9;
   176  003466  0EF9               	movlw	249
   177  003468  6ED7               	movwf	4055,c	;volatile
   178                           
   179                           ;main.c: 99: TMR0L = 0xE4;
   180  00346A  0EE4               	movlw	228
   181  00346C  6ED6               	movwf	4054,c	;volatile
   182                           
   183                           ;main.c: 101: T0CON = 0x84;
   184  00346E  0E84               	movlw	132
   185  003470  6ED5               	movwf	4053,c	;volatile
   186                           
   187                           ;main.c: 104: int currentGainLevel = 80;
   188  003472  0E00               	movlw	0
   189  003474  6E2C               	movwf	main@currentGainLevel+1,c
   190  003476  0E50               	movlw	80
   191  003478  6E2B               	movwf	main@currentGainLevel,c
   192                           
   193                           ;main.c: 105: setGainLevel(currentGainLevel);
   194  00347A  502B               	movf	main@currentGainLevel,w,c
   195  00347C  EC51  F019         	call	_setGainLevel
   196                           
   197                           ;main.c: 108: int sampleCount = 0;
   198  003480  0E00               	movlw	0
   199  003482  6E1F               	movwf	main@sampleCount+1,c
   200  003484  0E00               	movlw	0
   201  003486  6E1E               	movwf	main@sampleCount,c
   202                           
   203                           ;main.c: 109: long total = 0;
   204  003488  0E00               	movlw	0
   205  00348A  6E14               	movwf	main@total,c
   206  00348C  0E00               	movlw	0
   207  00348E  6E15               	movwf	main@total+1,c
   208  003490  0E00               	movlw	0
   209  003492  6E16               	movwf	main@total+2,c
   210  003494  0E00               	movlw	0
   211  003496  6E17               	movwf	main@total+3,c
   212                           
   213                           ;main.c: 110: int average = 0;
   214  003498  0E00               	movlw	0
   215  00349A  6E28               	movwf	main@average+1,c
   216  00349C  0E00               	movlw	0
   217  00349E  6E27               	movwf	main@average,c
   218                           
   219                           ;main.c: 113: int PWMcount = 0;
   220  0034A0  0E00               	movlw	0
   221  0034A2  6E3D               	movwf	main@PWMcount+1,c
   222  0034A4  0E00               	movlw	0
   223  0034A6  6E3C               	movwf	main@PWMcount,c
   224                           
   225                           ;main.c: 114: int lowPWM = 0;
   226  0034A8  0E00               	movlw	0
   227  0034AA  6E2E               	movwf	main@lowPWM+1,c
   228  0034AC  0E00               	movlw	0
   229  0034AE  6E2D               	movwf	main@lowPWM,c
   230                           
   231                           ;main.c: 115: int midPWM = 0;
   232  0034B0  0E00               	movlw	0
   233  0034B2  6E37               	movwf	main@midPWM+1,c
   234  0034B4  0E00               	movlw	0
   235  0034B6  6E36               	movwf	main@midPWM,c
   236                           
   237                           ;main.c: 116: int highPWM = 0;
   238  0034B8  0E00               	movlw	0
   239  0034BA  6E30               	movwf	main@highPWM+1,c
   240  0034BC  0E00               	movlw	0
   241  0034BE  6E2F               	movwf	main@highPWM,c
   242                           
   243                           ;main.c: 117: int fadeCounter = 0;
   244  0034C0  0E00               	movlw	0
   245  0034C2  6E21               	movwf	main@fadeCounter+1,c
   246  0034C4  0E00               	movlw	0
   247  0034C6  6E20               	movwf	main@fadeCounter,c
   248                           
   249                           ;main.c: 120: unsigned char mode = 0;
   250  0034C8  6E10               	movwf	??_main& (0+255),c
   251  0034CA  0E00               	movlw	0
   252  0034CC  6E35               	movwf	main@mode,c
   253  0034CE  5010               	movf	??_main& (0+255),w,c
   254                           
   255                           ;main.c: 123: int tickCounter = 0;
   256  0034D0  0E00               	movlw	0
   257  0034D2  6E34               	movwf	main@tickCounter+1,c
   258  0034D4  0E00               	movlw	0
   259  0034D6  6E33               	movwf	main@tickCounter,c
   260                           
   261                           ;main.c: 126: unsigned char patternNumber = 0;
   262  0034D8  6E10               	movwf	??_main& (0+255),c
   263  0034DA  0E00               	movlw	0
   264  0034DC  6E38               	movwf	main@patternNumber,c
   265  0034DE  5010               	movf	??_main& (0+255),w,c
   266                           
   267                           ;main.c: 127: unsigned char sequenceNumber = 0;
   268  0034E0  6E10               	movwf	??_main& (0+255),c
   269  0034E2  0E00               	movlw	0
   270  0034E4  6E3E               	movwf	main@sequenceNumber,c
   271  0034E6  5010               	movf	??_main& (0+255),w,c
   272                           
   273                           ;main.c: 128: int stepNumber = 0;
   274  0034E8  0E00               	movlw	0
   275  0034EA  6E40               	movwf	main@stepNumber+1,c
   276  0034EC  0E00               	movlw	0
   277  0034EE  6E3F               	movwf	main@stepNumber,c
   278                           
   279                           ;main.c: 129: int currentStep = 0;
   280  0034F0  0E00               	movlw	0
   281  0034F2  6E3B               	movwf	main@currentStep+1,c
   282  0034F4  0E00               	movlw	0
   283  0034F6  6E3A               	movwf	main@currentStep,c
   284                           
   285                           ;main.c: 130: unsigned char brightness = 0;
   286  0034F8  6E10               	movwf	??_main& (0+255),c
   287  0034FA  0E00               	movlw	0
   288  0034FC  6E39               	movwf	main@brightness,c
   289  0034FE  5010               	movf	??_main& (0+255),w,c
   290                           
   291                           ;main.c: 131: int sequenceRepeats = 0;
   292  003500  0E00               	movlw	0
   293  003502  6E32               	movwf	main@sequenceRepeats+1,c
   294  003504  0E00               	movlw	0
   295  003506  6E31               	movwf	main@sequenceRepeats,c
   296                           
   297                           ;main.c: 134: int soundDetectedCount = 0;
   298  003508  0E00               	movlw	0
   299  00350A  6E23               	movwf	main@soundDetectedCount+1,c
   300  00350C  0E00               	movlw	0
   301  00350E  6E22               	movwf	main@soundDetectedCount,c
   302                           
   303                           ;main.c: 135: unsigned char soundFlag = 0;
   304  003510  6E10               	movwf	??_main& (0+255),c
   305  003512  0E00               	movlw	0
   306  003514  6E26               	movwf	main@soundFlag,c
   307  003516  5010               	movf	??_main& (0+255),w,c
   308                           
   309                           ;main.c: 136: int clapCounter = 0;
   310  003518  0E00               	movlw	0
   311  00351A  6E2A               	movwf	main@clapCounter+1,c
   312  00351C  0E00               	movlw	0
   313  00351E  6E29               	movwf	main@clapCounter,c
   314  003520                     l1316:
   315                           
   316                           ;main.c: 139: {
   317                           ;main.c: 146: if (TMR0IF == 1)
   318  003520  A4F2               	btfss	intcon,2,c	;volatile
   319  003522  D013               	goto	l1326
   320                           
   321                           ;main.c: 147: {
   322                           ;main.c: 148: tickCounter++;
   323  003524  4A33               	infsnz	main@tickCounter,f,c
   324  003526  2A34               	incf	main@tickCounter+1,f,c
   325                           
   326                           ;main.c: 149: if (tickCounter > 1000) tickCounter = 0;
   327  003528  5034               	movf	main@tickCounter+1,w,c
   328  00352A  0A80               	xorlw	128
   329  00352C  0F7D               	addlw	-131
   330  00352E  0EE9               	movlw	233
   331  003530  B4D8               	btfsc	status,2,c
   332  003532  5C33               	subwf	main@tickCounter,w,c
   333  003534  A0D8               	btfss	status,0,c
   334  003536  D004               	goto	l45
   335  003538  0E00               	movlw	0
   336  00353A  6E34               	movwf	main@tickCounter+1,c
   337  00353C  0E00               	movlw	0
   338  00353E  6E33               	movwf	main@tickCounter,c
   339  003540                     l45:
   340                           
   341                           ;main.c: 152: TMR0H = 0xF9;
   342  003540  0EF9               	movlw	249
   343  003542  6ED7               	movwf	4055,c	;volatile
   344                           
   345                           ;main.c: 153: TMR0L = 0xE4;
   346  003544  0EE4               	movlw	228
   347  003546  6ED6               	movwf	4054,c	;volatile
   348                           
   349                           ;main.c: 154: TMR0IF = 0;
   350  003548  94F2               	bcf	intcon,2,c	;volatile
   351  00354A                     l1326:
   352                           
   353                           ;main.c: 155: }
   354                           ;main.c: 158: highLevel = readMyADC(0);
   355  00354A  0E00               	movlw	0
   356  00354C  EC64  F019         	call	_readMyADC
   357  003550  C001  F024         	movff	?_readMyADC,main@highLevel
   358  003554  C002  F025         	movff	?_readMyADC+1,main@highLevel+1
   359                           
   360                           ;main.c: 159: midLevel = readMyADC(1);
   361  003558  0E01               	movlw	1
   362  00355A  EC64  F019         	call	_readMyADC
   363  00355E  C001  F018         	movff	?_readMyADC,main@midLevel
   364  003562  C002  F019         	movff	?_readMyADC+1,main@midLevel+1
   365                           
   366                           ;main.c: 160: lowLevel = readMyADC(2);
   367  003566  0E02               	movlw	2
   368  003568  EC64  F019         	call	_readMyADC
   369  00356C  C001  F01A         	movff	?_readMyADC,main@lowLevel
   370  003570  C002  F01B         	movff	?_readMyADC+1,main@lowLevel+1
   371                           
   372                           ;main.c: 164: if (1 == 1 && 0 == 0)
   373  003574  0E03               	movlw	3
   374  003576  EC64  F019         	call	_readMyADC
   375  00357A  C001  F01C         	movff	?_readMyADC,main@mainLevel
   376  00357E  C002  F01D         	movff	?_readMyADC+1,main@mainLevel+1
   377                           
   378                           ;main.c: 165: {
   379                           ;main.c: 166: if (mode != 0)
   380  003582  5035               	movf	main@mode,w,c
   381  003584  B4D8               	btfsc	status,2,c
   382  003586  D022               	goto	l1388
   383                           
   384                           ;main.c: 167: {
   385                           ;main.c: 168: mode = 0;
   386  003588  6E10               	movwf	??_main& (0+255),c
   387  00358A  0E00               	movlw	0
   388  00358C  6E35               	movwf	main@mode,c
   389  00358E  5010               	movf	??_main& (0+255),w,c
   390                           
   391                           ;main.c: 171: PORTBbits.RB3 = 0;
   392  003590  9681               	bcf	3969,3,c	;volatile
   393                           
   394                           ;main.c: 172: PORTBbits.RB4 = 0;
   395  003592  9881               	bcf	3969,4,c	;volatile
   396                           
   397                           ;main.c: 173: PORTBbits.RB5 = 0;
   398  003594  9A81               	bcf	3969,5,c	;volatile
   399                           
   400                           ;main.c: 174: PORTBbits.RB0 = 0;
   401  003596  9081               	bcf	3969,0,c	;volatile
   402                           
   403                           ;main.c: 175: PORTBbits.RB1 = 0;
   404  003598  9281               	bcf	3969,1,c	;volatile
   405                           
   406                           ;main.c: 176: PORTBbits.RB2 = 0;
   407  00359A  9481               	bcf	3969,2,c	;volatile
   408                           
   409                           ;main.c: 179: patternNumber = 0;
   410  00359C  6E10               	movwf	??_main& (0+255),c
   411  00359E  0E00               	movlw	0
   412  0035A0  6E38               	movwf	main@patternNumber,c
   413  0035A2  5010               	movf	??_main& (0+255),w,c
   414                           
   415                           ;main.c: 180: sequenceNumber = 0;
   416  0035A4  6E10               	movwf	??_main& (0+255),c
   417  0035A6  0E00               	movlw	0
   418  0035A8  6E3E               	movwf	main@sequenceNumber,c
   419  0035AA  5010               	movf	??_main& (0+255),w,c
   420                           
   421                           ;main.c: 181: stepNumber = 0;
   422  0035AC  0E00               	movlw	0
   423  0035AE  6E40               	movwf	main@stepNumber+1,c
   424  0035B0  0E00               	movlw	0
   425  0035B2  6E3F               	movwf	main@stepNumber,c
   426                           
   427                           ;main.c: 182: currentStep = 0;
   428  0035B4  0E00               	movlw	0
   429  0035B6  6E3B               	movwf	main@currentStep+1,c
   430  0035B8  0E00               	movlw	0
   431  0035BA  6E3A               	movwf	main@currentStep,c
   432                           
   433                           ;main.c: 183: brightness = 0;
   434  0035BC  6E10               	movwf	??_main& (0+255),c
   435  0035BE  0E00               	movlw	0
   436  0035C0  6E39               	movwf	main@brightness,c
   437  0035C2  5010               	movf	??_main& (0+255),w,c
   438                           
   439                           ;main.c: 184: sequenceRepeats = 0;
   440  0035C4  0E00               	movlw	0
   441  0035C6  6E32               	movwf	main@sequenceRepeats+1,c
   442  0035C8  0E00               	movlw	0
   443  0035CA  6E31               	movwf	main@sequenceRepeats,c
   444  0035CC                     l1388:
   445                           
   446                           ;main.c: 217: }
   447                           ;main.c: 218: }
   448                           ;main.c: 221: total += mainLevel;
   449  0035CC  C01C  F010         	movff	main@mainLevel,??_main
   450  0035D0  C01D  F011         	movff	main@mainLevel+1,??_main+1
   451  0035D4  0E00               	movlw	0
   452  0035D6  BE11               	btfsc	(??_main+1)& (0+255),7,c
   453  0035D8  0EFF               	movlw	255
   454  0035DA  6E12               	movwf	(??_main+2)& (0+255),c
   455  0035DC  6E13               	movwf	(??_main+3)& (0+255),c
   456  0035DE  5010               	movf	??_main,w,c
   457  0035E0  2614               	addwf	main@total,f,c
   458  0035E2  5011               	movf	??_main+1,w,c
   459  0035E4  2215               	addwfc	main@total+1,f,c
   460  0035E6  5012               	movf	??_main+2,w,c
   461  0035E8  2216               	addwfc	main@total+2,f,c
   462  0035EA  5013               	movf	??_main+3,w,c
   463  0035EC  2217               	addwfc	main@total+3,f,c
   464                           
   465                           ;main.c: 222: sampleCount++;
   466  0035EE  4A1E               	infsnz	main@sampleCount,f,c
   467  0035F0  2A1F               	incf	main@sampleCount+1,f,c
   468                           
   469                           ;main.c: 224: if (sampleCount == 200)
   470  0035F2  501E               	movf	main@sampleCount,w,c
   471  0035F4  0AC8               	xorlw	200
   472  0035F6  101F               	iorwf	main@sampleCount+1,w,c
   473  0035F8  A4D8               	btfss	status,2,c
   474  0035FA  D075               	goto	l1420
   475                           
   476                           ;main.c: 225: {
   477                           ;main.c: 226: average = total / sampleCount;
   478  0035FC  C014  F001         	movff	main@total,___aldiv@dividend
   479  003600  C015  F002         	movff	main@total+1,___aldiv@dividend+1
   480  003604  C016  F003         	movff	main@total+2,___aldiv@dividend+2
   481  003608  C017  F004         	movff	main@total+3,___aldiv@dividend+3
   482  00360C  C01E  F005         	movff	main@sampleCount,___aldiv@divisor
   483  003610  C01F  F006         	movff	main@sampleCount+1,___aldiv@divisor+1
   484  003614  0E00               	movlw	0
   485  003616  BE06               	btfsc	___aldiv@divisor+1,7,c
   486  003618  0EFF               	movlw	-1
   487  00361A  6E07               	movwf	___aldiv@divisor+2,c
   488  00361C  6E08               	movwf	___aldiv@divisor+3,c
   489  00361E  EC8A  F019         	call	___aldiv	;wreg free
   490  003622  C001  F010         	movff	?___aldiv,??_main
   491  003626  C002  F011         	movff	?___aldiv+1,??_main+1
   492  00362A  C003  F012         	movff	?___aldiv+2,??_main+2
   493  00362E  C004  F013         	movff	?___aldiv+3,??_main+3
   494  003632  C010  F027         	movff	??_main,main@average
   495  003636  C011  F028         	movff	??_main+1,main@average+1
   496                           
   497                           ;main.c: 229: if (currentGainLevel <= 250 && currentGainLevel >= 10)
   498  00363A  502C               	movf	main@currentGainLevel+1,w,c
   499  00363C  0A80               	xorlw	128
   500  00363E  6EF3               	movwf	prodl,c
   501  003640  0E80               	movlw	128
   502  003642  5CF3               	subwf	prodl,w,c
   503  003644  0EFB               	movlw	251
   504  003646  B4D8               	btfsc	status,2,c
   505  003648  5C2B               	subwf	main@currentGainLevel,w,c
   506  00364A  B0D8               	btfsc	status,0,c
   507  00364C  D023               	goto	l1406
   508  00364E  502C               	movf	main@currentGainLevel+1,w,c
   509  003650  0A80               	xorlw	128
   510  003652  0F80               	addlw	-128
   511  003654  0E0A               	movlw	10
   512  003656  B4D8               	btfsc	status,2,c
   513  003658  5C2B               	subwf	main@currentGainLevel,w,c
   514  00365A  A0D8               	btfss	status,0,c
   515  00365C  D01B               	goto	l1406
   516                           
   517                           ;main.c: 230: {
   518                           ;main.c: 231: if (average < 100) currentGainLevel += 4;
   519  00365E  5028               	movf	main@average+1,w,c
   520  003660  0A80               	xorlw	128
   521  003662  6EF3               	movwf	prodl,c
   522  003664  0E80               	movlw	128
   523  003666  5CF3               	subwf	prodl,w,c
   524  003668  0E64               	movlw	100
   525  00366A  B4D8               	btfsc	status,2,c
   526  00366C  5C27               	subwf	main@average,w,c
   527  00366E  B0D8               	btfsc	status,0,c
   528  003670  D004               	goto	l54
   529  003672  0E04               	movlw	4
   530  003674  262B               	addwf	main@currentGainLevel,f,c
   531  003676  0E00               	movlw	0
   532  003678  222C               	addwfc	main@currentGainLevel+1,f,c
   533  00367A                     l54:
   534                           
   535                           ;main.c: 232: if (average > 100) currentGainLevel -= 4;
   536  00367A  5028               	movf	main@average+1,w,c
   537  00367C  0A80               	xorlw	128
   538  00367E  0F80               	addlw	-128
   539  003680  0E65               	movlw	101
   540  003682  B4D8               	btfsc	status,2,c
   541  003684  5C27               	subwf	main@average,w,c
   542  003686  A0D8               	btfss	status,0,c
   543  003688  D01F               	goto	l1414
   544  00368A  0EFC               	movlw	252
   545  00368C  262B               	addwf	main@currentGainLevel,f,c
   546  00368E  0EFF               	movlw	255
   547  003690  222C               	addwfc	main@currentGainLevel+1,f,c
   548  003692  D01A               	goto	l1414
   549  003694                     l1406:
   550                           
   551                           ;main.c: 234: else
   552                           ;main.c: 235: {
   553                           ;main.c: 236: if (currentGainLevel < 10) currentGainLevel = 10 + 1;
   554  003694  502C               	movf	main@currentGainLevel+1,w,c
   555  003696  0A80               	xorlw	128
   556  003698  6EF3               	movwf	prodl,c
   557  00369A  0E80               	movlw	128
   558  00369C  5CF3               	subwf	prodl,w,c
   559  00369E  0E0A               	movlw	10
   560  0036A0  B4D8               	btfsc	status,2,c
   561  0036A2  5C2B               	subwf	main@currentGainLevel,w,c
   562  0036A4  B0D8               	btfsc	status,0,c
   563  0036A6  D004               	goto	l1410
   564  0036A8  0E00               	movlw	0
   565  0036AA  6E2C               	movwf	main@currentGainLevel+1,c
   566  0036AC  0E0B               	movlw	11
   567  0036AE  6E2B               	movwf	main@currentGainLevel,c
   568  0036B0                     l1410:
   569                           
   570                           ;main.c: 237: if (currentGainLevel > 250) currentGainLevel = 250 - 1;
   571  0036B0  502C               	movf	main@currentGainLevel+1,w,c
   572  0036B2  0A80               	xorlw	128
   573  0036B4  0F80               	addlw	-128
   574  0036B6  0EFB               	movlw	251
   575  0036B8  B4D8               	btfsc	status,2,c
   576  0036BA  5C2B               	subwf	main@currentGainLevel,w,c
   577  0036BC  A0D8               	btfss	status,0,c
   578  0036BE  D004               	goto	l1414
   579  0036C0  0E00               	movlw	0
   580  0036C2  6E2C               	movwf	main@currentGainLevel+1,c
   581  0036C4  0EF9               	movlw	249
   582  0036C6  6E2B               	movwf	main@currentGainLevel,c
   583  0036C8                     l1414:
   584                           
   585                           ;main.c: 238: }
   586                           ;main.c: 240: setGainLevel(currentGainLevel);
   587  0036C8  502B               	movf	main@currentGainLevel,w,c
   588  0036CA  EC51  F019         	call	_setGainLevel
   589                           
   590                           ;main.c: 242: sampleCount = 0;
   591  0036CE  0E00               	movlw	0
   592  0036D0  6E1F               	movwf	main@sampleCount+1,c
   593  0036D2  0E00               	movlw	0
   594  0036D4  6E1E               	movwf	main@sampleCount,c
   595                           
   596                           ;main.c: 243: total = 0;
   597  0036D6  0E00               	movlw	0
   598  0036D8  6E14               	movwf	main@total,c
   599  0036DA  0E00               	movlw	0
   600  0036DC  6E15               	movwf	main@total+1,c
   601  0036DE  0E00               	movlw	0
   602  0036E0  6E16               	movwf	main@total+2,c
   603  0036E2  0E00               	movlw	0
   604  0036E4  6E17               	movwf	main@total+3,c
   605  0036E6                     l1420:
   606                           
   607                           ;main.c: 244: }
   608                           ;main.c: 248: if (mode == 1)
   609  0036E6  0435               	decf	main@mode,w,c
   610  0036E8  A4D8               	btfss	status,2,c
   611  0036EA  D04C               	goto	l1458
   612                           
   613                           ;main.c: 249: {
   614                           ;main.c: 250: if (soundFlag == 0)
   615  0036EC  6626               	tstfsz	main@soundFlag,c
   616  0036EE  D01A               	goto	l1436
   617                           
   618                           ;main.c: 251: {
   619                           ;main.c: 252: if (average >= 80) soundDetectedCount++; else soundDetectedCount = 0;
   620  0036F0  5028               	movf	main@average+1,w,c
   621  0036F2  0A80               	xorlw	128
   622  0036F4  0F80               	addlw	-128
   623  0036F6  0E50               	movlw	80
   624  0036F8  B4D8               	btfsc	status,2,c
   625  0036FA  5C27               	subwf	main@average,w,c
   626  0036FC  A0D8               	btfss	status,0,c
   627  0036FE  D003               	goto	l1428
   628  003700  4A22               	infsnz	main@soundDetectedCount,f,c
   629  003702  2A23               	incf	main@soundDetectedCount+1,f,c
   630  003704  D004               	goto	l1430
   631  003706                     l1428:
   632  003706  0E00               	movlw	0
   633  003708  6E23               	movwf	main@soundDetectedCount+1,c
   634  00370A  0E00               	movlw	0
   635  00370C  6E22               	movwf	main@soundDetectedCount,c
   636  00370E                     l1430:
   637                           
   638                           ;main.c: 253: if (soundDetectedCount > 1500)
   639  00370E  5023               	movf	main@soundDetectedCount+1,w,c
   640  003710  0A80               	xorlw	128
   641  003712  0F7B               	addlw	-133
   642  003714  0EDD               	movlw	221
   643  003716  B4D8               	btfsc	status,2,c
   644  003718  5C22               	subwf	main@soundDetectedCount,w,c
   645  00371A  A0D8               	btfss	status,0,c
   646  00371C  D024               	goto	l1448
   647                           
   648                           ;main.c: 254: {
   649                           ;main.c: 255: soundFlag = 1;
   650  00371E  6E10               	movwf	??_main& (0+255),c
   651  003720  0E01               	movlw	1
   652  003722  D01B               	goto	L1
   653  003724                     l1436:
   654                           
   655                           ;main.c: 259: else
   656                           ;main.c: 260: {
   657                           ;main.c: 261: if (average < 50) soundDetectedCount++; else soundDetectedCount = 0;
   658  003724  5028               	movf	main@average+1,w,c
   659  003726  0A80               	xorlw	128
   660  003728  6EF3               	movwf	prodl,c
   661  00372A  0E80               	movlw	128
   662  00372C  5CF3               	subwf	prodl,w,c
   663  00372E  0E32               	movlw	50
   664  003730  B4D8               	btfsc	status,2,c
   665  003732  5C27               	subwf	main@average,w,c
   666  003734  B0D8               	btfsc	status,0,c
   667  003736  D003               	goto	l1440
   668  003738  4A22               	infsnz	main@soundDetectedCount,f,c
   669  00373A  2A23               	incf	main@soundDetectedCount+1,f,c
   670  00373C  D004               	goto	l1442
   671  00373E                     l1440:
   672  00373E  0E00               	movlw	0
   673  003740  6E23               	movwf	main@soundDetectedCount+1,c
   674  003742  0E00               	movlw	0
   675  003744  6E22               	movwf	main@soundDetectedCount,c
   676  003746                     l1442:
   677                           
   678                           ;main.c: 262: if (soundDetectedCount > 10000)
   679  003746  5023               	movf	main@soundDetectedCount+1,w,c
   680  003748  0A80               	xorlw	128
   681  00374A  0F59               	addlw	-167
   682  00374C  0E11               	movlw	17
   683  00374E  B4D8               	btfsc	status,2,c
   684  003750  5C22               	subwf	main@soundDetectedCount,w,c
   685  003752  A0D8               	btfss	status,0,c
   686  003754  D008               	goto	l1448
   687                           
   688                           ;main.c: 263: {
   689                           ;main.c: 264: soundFlag = 0;
   690  003756  6E10               	movwf	??_main& (0+255),c
   691  003758  0E00               	movlw	0
   692  00375A                     L1:
   693  00375A  6E26               	movwf	main@soundFlag,c
   694  00375C  5010               	movf	??_main& (0+255),w,c
   695                           
   696                           ;main.c: 265: soundDetectedCount = 0;
   697  00375E  0E00               	movlw	0
   698  003760  6E23               	movwf	main@soundDetectedCount+1,c
   699  003762  0E00               	movlw	0
   700  003764  6E22               	movwf	main@soundDetectedCount,c
   701  003766                     l1448:
   702                           
   703                           ;main.c: 266: }
   704                           ;main.c: 267: }
   705                           ;main.c: 269: if (soundFlag == 0) PORTBbits.RB3 = 1; else PORTBbits.RB3 = 0;
   706  003766  6626               	tstfsz	main@soundFlag,c
   707  003768  D002               	goto	l68
   708  00376A  8681               	bsf	3969,3,c	;volatile
   709  00376C  D001               	goto	l1452
   710  00376E                     l68:
   711  00376E  9681               	bcf	3969,3,c	;volatile
   712  003770                     l1452:
   713                           
   714                           ;main.c: 272: if (soundFlag == 1) mode = 2; else mode = 0;
   715  003770  0426               	decf	main@soundFlag,w,c
   716  003772  A4D8               	btfss	status,2,c
   717  003774  D003               	goto	l1456
   718  003776  6E10               	movwf	??_main& (0+255),c
   719  003778  0E02               	movlw	2
   720  00377A  D002               	goto	L2
   721  00377C                     l1456:
   722  00377C  6E10               	movwf	??_main& (0+255),c
   723  00377E  0E00               	movlw	0
   724  003780                     L2:
   725  003780  6E35               	movwf	main@mode,c
   726  003782  5010               	movf	??_main& (0+255),w,c
   727  003784                     l1458:
   728                           
   729                           ;main.c: 273: }
   730                           ;main.c: 276: if (mode == 0)
   731  003784  6635               	tstfsz	main@mode,c
   732  003786  D37D               	goto	l1864
   733                           
   734                           ;main.c: 277: {
   735                           ;main.c: 279: if ((highLevel > 600) && (clapCounter == 0))
   736  003788  5025               	movf	main@highLevel+1,w,c
   737  00378A  0A80               	xorlw	128
   738  00378C  0F7E               	addlw	-130
   739  00378E  0E59               	movlw	89
   740  003790  B4D8               	btfsc	status,2,c
   741  003792  5C24               	subwf	main@highLevel,w,c
   742  003794  A0D8               	btfss	status,0,c
   743  003796  D008               	goto	l1466
   744  003798  502A               	movf	main@clapCounter+1,w,c
   745  00379A  1029               	iorwf	main@clapCounter,w,c
   746  00379C  A4D8               	btfss	status,2,c
   747  00379E  D004               	goto	l1466
   748                           
   749                           ;main.c: 280: {
   750                           ;main.c: 281: clapCounter = 1;
   751  0037A0  0E00               	movlw	0
   752  0037A2  6E2A               	movwf	main@clapCounter+1,c
   753  0037A4  0E01               	movlw	1
   754  0037A6  6E29               	movwf	main@clapCounter,c
   755  0037A8                     l1466:
   756                           
   757                           ;main.c: 282: }
   758                           ;main.c: 284: if (clapCounter > 0) clapCounter++;
   759  0037A8  502A               	movf	main@clapCounter+1,w,c
   760  0037AA  0A80               	xorlw	128
   761  0037AC  0F80               	addlw	-128
   762  0037AE  0E01               	movlw	1
   763  0037B0  B4D8               	btfsc	status,2,c
   764  0037B2  5C29               	subwf	main@clapCounter,w,c
   765  0037B4  A0D8               	btfss	status,0,c
   766  0037B6  D002               	goto	l1470
   767  0037B8  4A29               	infsnz	main@clapCounter,f,c
   768  0037BA  2A2A               	incf	main@clapCounter+1,f,c
   769  0037BC                     l1470:
   770                           
   771                           ;main.c: 285: if (clapCounter > 1000)
   772  0037BC  502A               	movf	main@clapCounter+1,w,c
   773  0037BE  0A80               	xorlw	128
   774  0037C0  0F7D               	addlw	-131
   775  0037C2  0EE9               	movlw	233
   776  0037C4  B4D8               	btfsc	status,2,c
   777  0037C6  5C29               	subwf	main@clapCounter,w,c
   778  0037C8  A0D8               	btfss	status,0,c
   779  0037CA  D02F               	goto	l1494
   780                           
   781                           ;main.c: 286: {
   782                           ;main.c: 287: if (highLevel < 600)
   783  0037CC  5025               	movf	main@highLevel+1,w,c
   784  0037CE  0A80               	xorlw	128
   785  0037D0  6EF3               	movwf	prodl,c
   786  0037D2  0E82               	movlw	130
   787  0037D4  5CF3               	subwf	prodl,w,c
   788  0037D6  0E58               	movlw	88
   789  0037D8  B4D8               	btfsc	status,2,c
   790  0037DA  5C24               	subwf	main@highLevel,w,c
   791  0037DC  B0D8               	btfsc	status,0,c
   792  0037DE  D021               	goto	l1492
   793                           
   794                           ;main.c: 288: {
   795                           ;main.c: 290: clapCounter = 0;
   796  0037E0  0E00               	movlw	0
   797  0037E2  6E2A               	movwf	main@clapCounter+1,c
   798  0037E4  0E00               	movlw	0
   799  0037E6  6E29               	movwf	main@clapCounter,c
   800                           
   801                           ;main.c: 291: patternNumber++;
   802  0037E8  2A38               	incf	main@patternNumber,f,c
   803                           
   804                           ;main.c: 292: sequenceNumber = 0;
   805  0037EA  6E10               	movwf	??_main& (0+255),c
   806  0037EC  0E00               	movlw	0
   807  0037EE  6E3E               	movwf	main@sequenceNumber,c
   808  0037F0  5010               	movf	??_main& (0+255),w,c
   809                           
   810                           ;main.c: 293: stepNumber = 0;
   811  0037F2  0E00               	movlw	0
   812  0037F4  6E40               	movwf	main@stepNumber+1,c
   813  0037F6  0E00               	movlw	0
   814  0037F8  6E3F               	movwf	main@stepNumber,c
   815                           
   816                           ;main.c: 294: currentStep = 0;
   817  0037FA  0E00               	movlw	0
   818  0037FC  6E3B               	movwf	main@currentStep+1,c
   819  0037FE  0E00               	movlw	0
   820  003800  6E3A               	movwf	main@currentStep,c
   821                           
   822                           ;main.c: 295: brightness = 0;
   823  003802  6E10               	movwf	??_main& (0+255),c
   824  003804  0E00               	movlw	0
   825  003806  6E39               	movwf	main@brightness,c
   826  003808  5010               	movf	??_main& (0+255),w,c
   827                           
   828                           ;main.c: 296: sequenceRepeats = 0;
   829  00380A  0E00               	movlw	0
   830  00380C  6E32               	movwf	main@sequenceRepeats+1,c
   831  00380E  0E00               	movlw	0
   832  003810  6E31               	movwf	main@sequenceRepeats,c
   833                           
   834                           ;main.c: 297: if (patternNumber > 4) patternNumber = 0;
   835  003812  0E04               	movlw	4
   836  003814  6438               	cpfsgt	main@patternNumber,c
   837  003816  D009               	goto	l1494
   838  003818  6E10               	movwf	??_main& (0+255),c
   839  00381A  0E00               	movlw	0
   840  00381C  6E38               	movwf	main@patternNumber,c
   841  00381E  5010               	movf	??_main& (0+255),w,c
   842  003820  D004               	goto	l1494
   843  003822                     l1492:
   844                           
   845                           ;main.c: 299: else clapCounter = 1;
   846  003822  0E00               	movlw	0
   847  003824  6E2A               	movwf	main@clapCounter+1,c
   848  003826  0E01               	movlw	1
   849  003828  6E29               	movwf	main@clapCounter,c
   850  00382A                     l1494:
   851                           
   852                           ;main.c: 300: }
   853                           ;main.c: 302: if (clapCounter > 0) PORTBbits.RB5 = 1; else PORTBbits.RB5 = 0;
   854  00382A  502A               	movf	main@clapCounter+1,w,c
   855  00382C  0A80               	xorlw	128
   856  00382E  0F80               	addlw	-128
   857  003830  0E01               	movlw	1
   858  003832  B4D8               	btfsc	status,2,c
   859  003834  5C29               	subwf	main@clapCounter,w,c
   860  003836  A0D8               	btfss	status,0,c
   861  003838  D002               	goto	l79
   862  00383A  8A81               	bsf	3969,5,c	;volatile
   863  00383C  D001               	goto	l80
   864  00383E                     l79:
   865  00383E  9A81               	bcf	3969,5,c	;volatile
   866  003840                     l80:
   867                           
   868                           ;main.c: 305: if (patternNumber == 0)
   869  003840  6638               	tstfsz	main@patternNumber,c
   870  003842  D0CF               	goto	l1590
   871                           
   872                           ;main.c: 306: {
   873                           ;main.c: 307: if (sequenceNumber == 0)
   874  003844  663E               	tstfsz	main@sequenceNumber,c
   875  003846  D01E               	goto	l1512
   876                           
   877                           ;main.c: 308: {
   878                           ;main.c: 309: if (currentStep != stepNumber)
   879  003848  5040               	movf	main@stepNumber+1,w,c
   880  00384A  183B               	xorwf	main@currentStep+1,w,c
   881  00384C  E102               	bnz	u785
   882  00384E  503F               	movf	main@stepNumber,w,c
   883  003850  183A               	xorwf	main@currentStep,w,c
   884  003852                     u785:
   885  003852  B4D8               	btfsc	status,2,c
   886  003854  D013               	goto	l1510
   887                           
   888                           ;main.c: 310: {
   889                           ;main.c: 311: currentStep = stepNumber;
   890  003856  C03F  F03A         	movff	main@stepNumber,main@currentStep
   891  00385A  C040  F03B         	movff	main@stepNumber+1,main@currentStep+1
   892                           
   893                           ;main.c: 312: if (currentStep < 16) brightness += 2; else brightness -= 2;
   894  00385E  503B               	movf	main@currentStep+1,w,c
   895  003860  0A80               	xorlw	128
   896  003862  6EF3               	movwf	prodl,c
   897  003864  0E80               	movlw	128
   898  003866  5CF3               	subwf	prodl,w,c
   899  003868  0E10               	movlw	16
   900  00386A  B4D8               	btfsc	status,2,c
   901  00386C  5C3A               	subwf	main@currentStep,w,c
   902  00386E  B0D8               	btfsc	status,0,c
   903  003870  D003               	goto	l1508
   904  003872  0E02               	movlw	2
   905  003874  2639               	addwf	main@brightness,f,c
   906  003876  D002               	goto	l1510
   907  003878                     l1508:
   908  003878  0E02               	movlw	2
   909  00387A  5E39               	subwf	main@brightness,f,c
   910  00387C                     l1510:
   911                           
   912                           ;main.c: 313: }
   913                           ;main.c: 314: highPWM = brightness;
   914  00387C  C039  F02F         	movff	main@brightness,main@highPWM
   915  003880  6A30               	clrf	main@highPWM+1,c
   916                           
   917                           ;main.c: 315: } else highPWM = 0;
   918  003882  D004               	goto	l1514
   919  003884                     l1512:
   920  003884  0E00               	movlw	0
   921  003886  6E30               	movwf	main@highPWM+1,c
   922  003888  0E00               	movlw	0
   923  00388A  6E2F               	movwf	main@highPWM,c
   924  00388C                     l1514:
   925                           
   926                           ;main.c: 317: if (sequenceNumber == 1)
   927  00388C  043E               	decf	main@sequenceNumber,w,c
   928  00388E  A4D8               	btfss	status,2,c
   929  003890  D01E               	goto	l1528
   930                           
   931                           ;main.c: 318: {
   932                           ;main.c: 319: if (currentStep != stepNumber)
   933  003892  5040               	movf	main@stepNumber+1,w,c
   934  003894  183B               	xorwf	main@currentStep+1,w,c
   935  003896  E102               	bnz	u815
   936  003898  503F               	movf	main@stepNumber,w,c
   937  00389A  183A               	xorwf	main@currentStep,w,c
   938  00389C                     u815:
   939  00389C  B4D8               	btfsc	status,2,c
   940  00389E  D013               	goto	l1526
   941                           
   942                           ;main.c: 320: {
   943                           ;main.c: 321: currentStep = stepNumber;
   944  0038A0  C03F  F03A         	movff	main@stepNumber,main@currentStep
   945  0038A4  C040  F03B         	movff	main@stepNumber+1,main@currentStep+1
   946                           
   947                           ;main.c: 323: if (currentStep < 16) brightness += 2; else brightness -= 2;
   948  0038A8  503B               	movf	main@currentStep+1,w,c
   949  0038AA  0A80               	xorlw	128
   950  0038AC  6EF3               	movwf	prodl,c
   951  0038AE  0E80               	movlw	128
   952  0038B0  5CF3               	subwf	prodl,w,c
   953  0038B2  0E10               	movlw	16
   954  0038B4  B4D8               	btfsc	status,2,c
   955  0038B6  5C3A               	subwf	main@currentStep,w,c
   956  0038B8  B0D8               	btfsc	status,0,c
   957  0038BA  D003               	goto	l1524
   958  0038BC  0E02               	movlw	2
   959  0038BE  2639               	addwf	main@brightness,f,c
   960  0038C0  D002               	goto	l1526
   961  0038C2                     l1524:
   962  0038C2  0E02               	movlw	2
   963  0038C4  5E39               	subwf	main@brightness,f,c
   964  0038C6                     l1526:
   965                           
   966                           ;main.c: 324: }
   967                           ;main.c: 325: midPWM = brightness;
   968  0038C6  C039  F036         	movff	main@brightness,main@midPWM
   969  0038CA  6A37               	clrf	main@midPWM+1,c
   970                           
   971                           ;main.c: 326: } else if (sequenceNumber != 3) midPWM = 0;
   972  0038CC  D008               	goto	l1532
   973  0038CE                     l1528:
   974  0038CE  503E               	movf	main@sequenceNumber,w,c
   975  0038D0  0A03               	xorlw	3
   976  0038D2  B4D8               	btfsc	status,2,c
   977  0038D4  D004               	goto	l1532
   978  0038D6  0E00               	movlw	0
   979  0038D8  6E37               	movwf	main@midPWM+1,c
   980  0038DA  0E00               	movlw	0
   981  0038DC  6E36               	movwf	main@midPWM,c
   982  0038DE                     l1532:
   983                           
   984                           ;main.c: 328: if (sequenceNumber == 2)
   985  0038DE  503E               	movf	main@sequenceNumber,w,c
   986  0038E0  0A02               	xorlw	2
   987  0038E2  A4D8               	btfss	status,2,c
   988  0038E4  D01E               	goto	l1546
   989                           
   990                           ;main.c: 329: {
   991                           ;main.c: 330: if (currentStep != stepNumber)
   992  0038E6  5040               	movf	main@stepNumber+1,w,c
   993  0038E8  183B               	xorwf	main@currentStep+1,w,c
   994  0038EA  E102               	bnz	u855
   995  0038EC  503F               	movf	main@stepNumber,w,c
   996  0038EE  183A               	xorwf	main@currentStep,w,c
   997  0038F0                     u855:
   998  0038F0  B4D8               	btfsc	status,2,c
   999  0038F2  D013               	goto	l1544
  1000                           
  1001                           ;main.c: 331: {
  1002                           ;main.c: 332: currentStep = stepNumber;
  1003  0038F4  C03F  F03A         	movff	main@stepNumber,main@currentStep
  1004  0038F8  C040  F03B         	movff	main@stepNumber+1,main@currentStep+1
  1005                           
  1006                           ;main.c: 333: if (currentStep < 16) brightness += 2; else brightness -= 2;
  1007  0038FC  503B               	movf	main@currentStep+1,w,c
  1008  0038FE  0A80               	xorlw	128
  1009  003900  6EF3               	movwf	prodl,c
  1010  003902  0E80               	movlw	128
  1011  003904  5CF3               	subwf	prodl,w,c
  1012  003906  0E10               	movlw	16
  1013  003908  B4D8               	btfsc	status,2,c
  1014  00390A  5C3A               	subwf	main@currentStep,w,c
  1015  00390C  B0D8               	btfsc	status,0,c
  1016  00390E  D003               	goto	l1542
  1017  003910  0E02               	movlw	2
  1018  003912  2639               	addwf	main@brightness,f,c
  1019  003914  D002               	goto	l1544
  1020  003916                     l1542:
  1021  003916  0E02               	movlw	2
  1022  003918  5E39               	subwf	main@brightness,f,c
  1023  00391A                     l1544:
  1024                           
  1025                           ;main.c: 334: }
  1026                           ;main.c: 335: lowPWM = brightness;
  1027  00391A  C039  F02D         	movff	main@brightness,main@lowPWM
  1028  00391E  6A2E               	clrf	main@lowPWM+1,c
  1029                           
  1030                           ;main.c: 336: } else lowPWM = 0;
  1031  003920  D004               	goto	l1548
  1032  003922                     l1546:
  1033  003922  0E00               	movlw	0
  1034  003924  6E2E               	movwf	main@lowPWM+1,c
  1035  003926  0E00               	movlw	0
  1036  003928  6E2D               	movwf	main@lowPWM,c
  1037  00392A                     l1548:
  1038                           
  1039                           ;main.c: 338: if (sequenceNumber == 3)
  1040  00392A  503E               	movf	main@sequenceNumber,w,c
  1041  00392C  0A03               	xorlw	3
  1042  00392E  A4D8               	btfss	status,2,c
  1043  003930  D01E               	goto	l1562
  1044                           
  1045                           ;main.c: 339: {
  1046                           ;main.c: 340: if (currentStep != stepNumber)
  1047  003932  5040               	movf	main@stepNumber+1,w,c
  1048  003934  183B               	xorwf	main@currentStep+1,w,c
  1049  003936  E102               	bnz	u885
  1050  003938  503F               	movf	main@stepNumber,w,c
  1051  00393A  183A               	xorwf	main@currentStep,w,c
  1052  00393C                     u885:
  1053  00393C  B4D8               	btfsc	status,2,c
  1054  00393E  D013               	goto	l1560
  1055                           
  1056                           ;main.c: 341: {
  1057                           ;main.c: 342: currentStep = stepNumber;
  1058  003940  C03F  F03A         	movff	main@stepNumber,main@currentStep
  1059  003944  C040  F03B         	movff	main@stepNumber+1,main@currentStep+1
  1060                           
  1061                           ;main.c: 344: if (currentStep < 16) brightness += 2; else brightness -= 2;
  1062  003948  503B               	movf	main@currentStep+1,w,c
  1063  00394A  0A80               	xorlw	128
  1064  00394C  6EF3               	movwf	prodl,c
  1065  00394E  0E80               	movlw	128
  1066  003950  5CF3               	subwf	prodl,w,c
  1067  003952  0E10               	movlw	16
  1068  003954  B4D8               	btfsc	status,2,c
  1069  003956  5C3A               	subwf	main@currentStep,w,c
  1070  003958  B0D8               	btfsc	status,0,c
  1071  00395A  D003               	goto	l1558
  1072  00395C  0E02               	movlw	2
  1073  00395E  2639               	addwf	main@brightness,f,c
  1074  003960  D002               	goto	l1560
  1075  003962                     l1558:
  1076  003962  0E02               	movlw	2
  1077  003964  5E39               	subwf	main@brightness,f,c
  1078  003966                     l1560:
  1079                           
  1080                           ;main.c: 345: }
  1081                           ;main.c: 346: midPWM = brightness;
  1082  003966  C039  F036         	movff	main@brightness,main@midPWM
  1083  00396A  6A37               	clrf	main@midPWM+1,c
  1084                           
  1085                           ;main.c: 347: } else if (sequenceNumber != 1) midPWM = 0;
  1086  00396C  D007               	goto	l1566
  1087  00396E                     l1562:
  1088  00396E  043E               	decf	main@sequenceNumber,w,c
  1089  003970  B4D8               	btfsc	status,2,c
  1090  003972  D004               	goto	l1566
  1091  003974  0E00               	movlw	0
  1092  003976  6E37               	movwf	main@midPWM+1,c
  1093  003978  0E00               	movlw	0
  1094  00397A  6E36               	movwf	main@midPWM,c
  1095  00397C                     l1566:
  1096                           
  1097                           ;main.c: 349: if (tickCounter > 6)
  1098  00397C  5034               	movf	main@tickCounter+1,w,c
  1099  00397E  0A80               	xorlw	128
  1100  003980  0F80               	addlw	-128
  1101  003982  0E07               	movlw	7
  1102  003984  B4D8               	btfsc	status,2,c
  1103  003986  5C33               	subwf	main@tickCounter,w,c
  1104  003988  A0D8               	btfss	status,0,c
  1105  00398A  D02B               	goto	l1590
  1106                           
  1107                           ;main.c: 350: {
  1108                           ;main.c: 351: stepNumber++;
  1109  00398C  4A3F               	infsnz	main@stepNumber,f,c
  1110  00398E  2A40               	incf	main@stepNumber+1,f,c
  1111                           
  1112                           ;main.c: 352: tickCounter = 0;
  1113  003990  0E00               	movlw	0
  1114  003992  6E34               	movwf	main@tickCounter+1,c
  1115  003994  0E00               	movlw	0
  1116  003996  6E33               	movwf	main@tickCounter,c
  1117                           
  1118                           ;main.c: 354: if (stepNumber == 31)
  1119  003998  503F               	movf	main@stepNumber,w,c
  1120  00399A  0A1F               	xorlw	31
  1121  00399C  1040               	iorwf	main@stepNumber+1,w,c
  1122  00399E  A4D8               	btfss	status,2,c
  1123  0039A0  D020               	goto	l1590
  1124                           
  1125                           ;main.c: 355: {
  1126                           ;main.c: 356: stepNumber = 0;
  1127  0039A2  0E00               	movlw	0
  1128  0039A4  6E40               	movwf	main@stepNumber+1,c
  1129  0039A6  0E00               	movlw	0
  1130  0039A8  6E3F               	movwf	main@stepNumber,c
  1131                           
  1132                           ;main.c: 357: sequenceNumber++;
  1133  0039AA  2A3E               	incf	main@sequenceNumber,f,c
  1134                           
  1135                           ;main.c: 358: brightness = 0;
  1136  0039AC  6E10               	movwf	??_main& (0+255),c
  1137  0039AE  0E00               	movlw	0
  1138  0039B0  6E39               	movwf	main@brightness,c
  1139  0039B2  5010               	movf	??_main& (0+255),w,c
  1140                           
  1141                           ;main.c: 360: if (sequenceNumber == 4)
  1142  0039B4  503E               	movf	main@sequenceNumber,w,c
  1143  0039B6  0A04               	xorlw	4
  1144  0039B8  A4D8               	btfss	status,2,c
  1145  0039BA  D013               	goto	l1590
  1146                           
  1147                           ;main.c: 361: {
  1148                           ;main.c: 362: sequenceNumber = 0;
  1149  0039BC  6E10               	movwf	??_main& (0+255),c
  1150  0039BE  0E00               	movlw	0
  1151  0039C0  6E3E               	movwf	main@sequenceNumber,c
  1152  0039C2  5010               	movf	??_main& (0+255),w,c
  1153                           
  1154                           ;main.c: 363: sequenceRepeats++;
  1155  0039C4  4A31               	infsnz	main@sequenceRepeats,f,c
  1156  0039C6  2A32               	incf	main@sequenceRepeats+1,f,c
  1157                           
  1158                           ;main.c: 364: if (sequenceRepeats > 10)
  1159  0039C8  5032               	movf	main@sequenceRepeats+1,w,c
  1160  0039CA  0A80               	xorlw	128
  1161  0039CC  0F80               	addlw	-128
  1162  0039CE  0E0B               	movlw	11
  1163  0039D0  B4D8               	btfsc	status,2,c
  1164  0039D2  5C31               	subwf	main@sequenceRepeats,w,c
  1165  0039D4  A0D8               	btfss	status,0,c
  1166  0039D6  D005               	goto	l1590
  1167                           
  1168                           ;main.c: 365: {
  1169                           ;main.c: 366: sequenceRepeats = 0;
  1170  0039D8  0E00               	movlw	0
  1171  0039DA  6E32               	movwf	main@sequenceRepeats+1,c
  1172  0039DC  0E00               	movlw	0
  1173  0039DE  6E31               	movwf	main@sequenceRepeats,c
  1174                           
  1175                           ;main.c: 367: patternNumber++;
  1176  0039E0  2A38               	incf	main@patternNumber,f,c
  1177  0039E2                     l1590:
  1178                           
  1179                           ;main.c: 368: }
  1180                           ;main.c: 369: }
  1181                           ;main.c: 370: }
  1182                           ;main.c: 371: }
  1183                           ;main.c: 372: }
  1184                           ;main.c: 375: if (patternNumber == 1)
  1185  0039E2  0438               	decf	main@patternNumber,w,c
  1186  0039E4  A4D8               	btfss	status,2,c
  1187  0039E6  D03F               	goto	l1618
  1188                           
  1189                           ;main.c: 376: {
  1190                           ;main.c: 377: highPWM = 31;
  1191  0039E8  0E00               	movlw	0
  1192  0039EA  6E30               	movwf	main@highPWM+1,c
  1193  0039EC  0E1F               	movlw	31
  1194  0039EE  6E2F               	movwf	main@highPWM,c
  1195                           
  1196                           ;main.c: 378: midPWM = 31;
  1197  0039F0  0E00               	movlw	0
  1198  0039F2  6E37               	movwf	main@midPWM+1,c
  1199  0039F4  0E1F               	movlw	31
  1200  0039F6  6E36               	movwf	main@midPWM,c
  1201                           
  1202                           ;main.c: 379: lowPWM = 31;
  1203  0039F8  0E00               	movlw	0
  1204  0039FA  6E2E               	movwf	main@lowPWM+1,c
  1205  0039FC  0E1F               	movlw	31
  1206  0039FE  6E2D               	movwf	main@lowPWM,c
  1207                           
  1208                           ;main.c: 381: if (tickCounter > 8)
  1209  003A00  5034               	movf	main@tickCounter+1,w,c
  1210  003A02  0A80               	xorlw	128
  1211  003A04  0F80               	addlw	-128
  1212  003A06  0E09               	movlw	9
  1213  003A08  B4D8               	btfsc	status,2,c
  1214  003A0A  5C33               	subwf	main@tickCounter,w,c
  1215  003A0C  A0D8               	btfss	status,0,c
  1216  003A0E  D02B               	goto	l1618
  1217                           
  1218                           ;main.c: 382: {
  1219                           ;main.c: 383: stepNumber++;
  1220  003A10  4A3F               	infsnz	main@stepNumber,f,c
  1221  003A12  2A40               	incf	main@stepNumber+1,f,c
  1222                           
  1223                           ;main.c: 384: tickCounter = 0;
  1224  003A14  0E00               	movlw	0
  1225  003A16  6E34               	movwf	main@tickCounter+1,c
  1226  003A18  0E00               	movlw	0
  1227  003A1A  6E33               	movwf	main@tickCounter,c
  1228                           
  1229                           ;main.c: 386: if (stepNumber == 3)
  1230  003A1C  503F               	movf	main@stepNumber,w,c
  1231  003A1E  0A03               	xorlw	3
  1232  003A20  1040               	iorwf	main@stepNumber+1,w,c
  1233  003A22  A4D8               	btfss	status,2,c
  1234  003A24  D020               	goto	l1618
  1235                           
  1236                           ;main.c: 387: {
  1237                           ;main.c: 388: stepNumber = 0;
  1238  003A26  0E00               	movlw	0
  1239  003A28  6E40               	movwf	main@stepNumber+1,c
  1240  003A2A  0E00               	movlw	0
  1241  003A2C  6E3F               	movwf	main@stepNumber,c
  1242                           
  1243                           ;main.c: 389: sequenceNumber++;
  1244  003A2E  2A3E               	incf	main@sequenceNumber,f,c
  1245                           
  1246                           ;main.c: 390: brightness = 0;
  1247  003A30  6E10               	movwf	??_main& (0+255),c
  1248  003A32  0E00               	movlw	0
  1249  003A34  6E39               	movwf	main@brightness,c
  1250  003A36  5010               	movf	??_main& (0+255),w,c
  1251                           
  1252                           ;main.c: 392: if (sequenceNumber == 5)
  1253  003A38  503E               	movf	main@sequenceNumber,w,c
  1254  003A3A  0A05               	xorlw	5
  1255  003A3C  A4D8               	btfss	status,2,c
  1256  003A3E  D013               	goto	l1618
  1257                           
  1258                           ;main.c: 393: {
  1259                           ;main.c: 394: sequenceNumber = 0;
  1260  003A40  6E10               	movwf	??_main& (0+255),c
  1261  003A42  0E00               	movlw	0
  1262  003A44  6E3E               	movwf	main@sequenceNumber,c
  1263  003A46  5010               	movf	??_main& (0+255),w,c
  1264                           
  1265                           ;main.c: 395: sequenceRepeats++;
  1266  003A48  4A31               	infsnz	main@sequenceRepeats,f,c
  1267  003A4A  2A32               	incf	main@sequenceRepeats+1,f,c
  1268                           
  1269                           ;main.c: 396: if (sequenceRepeats > 40)
  1270  003A4C  5032               	movf	main@sequenceRepeats+1,w,c
  1271  003A4E  0A80               	xorlw	128
  1272  003A50  0F80               	addlw	-128
  1273  003A52  0E29               	movlw	41
  1274  003A54  B4D8               	btfsc	status,2,c
  1275  003A56  5C31               	subwf	main@sequenceRepeats,w,c
  1276  003A58  A0D8               	btfss	status,0,c
  1277  003A5A  D005               	goto	l1618
  1278                           
  1279                           ;main.c: 397: {
  1280                           ;main.c: 398: sequenceRepeats = 0;
  1281  003A5C  0E00               	movlw	0
  1282  003A5E  6E32               	movwf	main@sequenceRepeats+1,c
  1283  003A60  0E00               	movlw	0
  1284  003A62  6E31               	movwf	main@sequenceRepeats,c
  1285                           
  1286                           ;main.c: 399: patternNumber++;
  1287  003A64  2A38               	incf	main@patternNumber,f,c
  1288  003A66                     l1618:
  1289                           
  1290                           ;main.c: 400: }
  1291                           ;main.c: 401: }
  1292                           ;main.c: 402: }
  1293                           ;main.c: 403: }
  1294                           ;main.c: 404: }
  1295                           ;main.c: 407: if (patternNumber == 2)
  1296  003A66  5038               	movf	main@patternNumber,w,c
  1297  003A68  0A02               	xorlw	2
  1298  003A6A  A4D8               	btfss	status,2,c
  1299  003A6C  D100               	goto	l1744
  1300                           
  1301                           ;main.c: 408: {
  1302                           ;main.c: 409: if (sequenceNumber == 0)
  1303  003A6E  663E               	tstfsz	main@sequenceNumber,c
  1304  003A70  D025               	goto	l1640
  1305                           
  1306                           ;main.c: 410: {
  1307                           ;main.c: 411: if (stepNumber == 0) highPWM = 31; else highPWM = 0;
  1308  003A72  5040               	movf	main@stepNumber+1,w,c
  1309  003A74  103F               	iorwf	main@stepNumber,w,c
  1310  003A76  A4D8               	btfss	status,2,c
  1311  003A78  D004               	goto	l1626
  1312  003A7A  0E00               	movlw	0
  1313  003A7C  6E30               	movwf	main@highPWM+1,c
  1314  003A7E  0E1F               	movlw	31
  1315  003A80  D003               	goto	L3
  1316  003A82                     l1626:
  1317  003A82  0E00               	movlw	0
  1318  003A84  6E30               	movwf	main@highPWM+1,c
  1319  003A86  0E00               	movlw	0
  1320  003A88                     L3:
  1321  003A88  6E2F               	movwf	main@highPWM,c
  1322                           
  1323                           ;main.c: 412: if (stepNumber == 1) midPWM = 31; else midPWM = 0;
  1324  003A8A  043F               	decf	main@stepNumber,w,c
  1325  003A8C  1040               	iorwf	main@stepNumber+1,w,c
  1326  003A8E  A4D8               	btfss	status,2,c
  1327  003A90  D004               	goto	l1632
  1328  003A92  0E00               	movlw	0
  1329  003A94  6E37               	movwf	main@midPWM+1,c
  1330  003A96  0E1F               	movlw	31
  1331  003A98  D003               	goto	L4
  1332  003A9A                     l1632:
  1333  003A9A  0E00               	movlw	0
  1334  003A9C  6E37               	movwf	main@midPWM+1,c
  1335  003A9E  0E00               	movlw	0
  1336  003AA0                     L4:
  1337  003AA0  6E36               	movwf	main@midPWM,c
  1338                           
  1339                           ;main.c: 413: if (stepNumber == 2) lowPWM = 31; else lowPWM = 0;
  1340  003AA2  503F               	movf	main@stepNumber,w,c
  1341  003AA4  0A02               	xorlw	2
  1342  003AA6  1040               	iorwf	main@stepNumber+1,w,c
  1343  003AA8  A4D8               	btfss	status,2,c
  1344  003AAA  D004               	goto	l1638
  1345  003AAC  0E00               	movlw	0
  1346  003AAE  6E2E               	movwf	main@lowPWM+1,c
  1347  003AB0  0E1F               	movlw	31
  1348  003AB2  D003               	goto	L5
  1349  003AB4                     l1638:
  1350  003AB4  0E00               	movlw	0
  1351  003AB6  6E2E               	movwf	main@lowPWM+1,c
  1352  003AB8  0E00               	movlw	0
  1353  003ABA                     L5:
  1354  003ABA  6E2D               	movwf	main@lowPWM,c
  1355  003ABC                     l1640:
  1356                           
  1357                           ;main.c: 414: }
  1358                           ;main.c: 416: if (sequenceNumber == 1)
  1359  003ABC  043E               	decf	main@sequenceNumber,w,c
  1360  003ABE  A4D8               	btfss	status,2,c
  1361  003AC0  D025               	goto	l1660
  1362                           
  1363                           ;main.c: 417: {
  1364                           ;main.c: 418: if (stepNumber == 0) highPWM = 31; else highPWM = 0;
  1365  003AC2  5040               	movf	main@stepNumber+1,w,c
  1366  003AC4  103F               	iorwf	main@stepNumber,w,c
  1367  003AC6  A4D8               	btfss	status,2,c
  1368  003AC8  D004               	goto	l1646
  1369  003ACA  0E00               	movlw	0
  1370  003ACC  6E30               	movwf	main@highPWM+1,c
  1371  003ACE  0E1F               	movlw	31
  1372  003AD0  D003               	goto	L6
  1373  003AD2                     l1646:
  1374  003AD2  0E00               	movlw	0
  1375  003AD4  6E30               	movwf	main@highPWM+1,c
  1376  003AD6  0E00               	movlw	0
  1377  003AD8                     L6:
  1378  003AD8  6E2F               	movwf	main@highPWM,c
  1379                           
  1380                           ;main.c: 419: if (stepNumber == 1) lowPWM = 31; else lowPWM = 0;
  1381  003ADA  043F               	decf	main@stepNumber,w,c
  1382  003ADC  1040               	iorwf	main@stepNumber+1,w,c
  1383  003ADE  A4D8               	btfss	status,2,c
  1384  003AE0  D004               	goto	l1652
  1385  003AE2  0E00               	movlw	0
  1386  003AE4  6E2E               	movwf	main@lowPWM+1,c
  1387  003AE6  0E1F               	movlw	31
  1388  003AE8  D003               	goto	L7
  1389  003AEA                     l1652:
  1390  003AEA  0E00               	movlw	0
  1391  003AEC  6E2E               	movwf	main@lowPWM+1,c
  1392  003AEE  0E00               	movlw	0
  1393  003AF0                     L7:
  1394  003AF0  6E2D               	movwf	main@lowPWM,c
  1395                           
  1396                           ;main.c: 420: if (stepNumber == 2) midPWM = 31; else midPWM = 0;
  1397  003AF2  503F               	movf	main@stepNumber,w,c
  1398  003AF4  0A02               	xorlw	2
  1399  003AF6  1040               	iorwf	main@stepNumber+1,w,c
  1400  003AF8  A4D8               	btfss	status,2,c
  1401  003AFA  D004               	goto	l1658
  1402  003AFC  0E00               	movlw	0
  1403  003AFE  6E37               	movwf	main@midPWM+1,c
  1404  003B00  0E1F               	movlw	31
  1405  003B02  D003               	goto	L8
  1406  003B04                     l1658:
  1407  003B04  0E00               	movlw	0
  1408  003B06  6E37               	movwf	main@midPWM+1,c
  1409  003B08  0E00               	movlw	0
  1410  003B0A                     L8:
  1411  003B0A  6E36               	movwf	main@midPWM,c
  1412  003B0C                     l1660:
  1413                           
  1414                           ;main.c: 421: }
  1415                           ;main.c: 423: if (sequenceNumber == 2)
  1416  003B0C  503E               	movf	main@sequenceNumber,w,c
  1417  003B0E  0A02               	xorlw	2
  1418  003B10  A4D8               	btfss	status,2,c
  1419  003B12  D025               	goto	l1680
  1420                           
  1421                           ;main.c: 424: {
  1422                           ;main.c: 425: if (stepNumber == 0) lowPWM = 31; else lowPWM = 0;
  1423  003B14  5040               	movf	main@stepNumber+1,w,c
  1424  003B16  103F               	iorwf	main@stepNumber,w,c
  1425  003B18  A4D8               	btfss	status,2,c
  1426  003B1A  D004               	goto	l1666
  1427  003B1C  0E00               	movlw	0
  1428  003B1E  6E2E               	movwf	main@lowPWM+1,c
  1429  003B20  0E1F               	movlw	31
  1430  003B22  D003               	goto	L9
  1431  003B24                     l1666:
  1432  003B24  0E00               	movlw	0
  1433  003B26  6E2E               	movwf	main@lowPWM+1,c
  1434  003B28  0E00               	movlw	0
  1435  003B2A                     L9:
  1436  003B2A  6E2D               	movwf	main@lowPWM,c
  1437                           
  1438                           ;main.c: 426: if (stepNumber == 1) highPWM = 31; else highPWM = 0;
  1439  003B2C  043F               	decf	main@stepNumber,w,c
  1440  003B2E  1040               	iorwf	main@stepNumber+1,w,c
  1441  003B30  A4D8               	btfss	status,2,c
  1442  003B32  D004               	goto	l1672
  1443  003B34  0E00               	movlw	0
  1444  003B36  6E30               	movwf	main@highPWM+1,c
  1445  003B38  0E1F               	movlw	31
  1446  003B3A  D003               	goto	L10
  1447  003B3C                     l1672:
  1448  003B3C  0E00               	movlw	0
  1449  003B3E  6E30               	movwf	main@highPWM+1,c
  1450  003B40  0E00               	movlw	0
  1451  003B42                     L10:
  1452  003B42  6E2F               	movwf	main@highPWM,c
  1453                           
  1454                           ;main.c: 427: if (stepNumber == 2) midPWM = 31; else midPWM = 0;
  1455  003B44  503F               	movf	main@stepNumber,w,c
  1456  003B46  0A02               	xorlw	2
  1457  003B48  1040               	iorwf	main@stepNumber+1,w,c
  1458  003B4A  A4D8               	btfss	status,2,c
  1459  003B4C  D004               	goto	l1678
  1460  003B4E  0E00               	movlw	0
  1461  003B50  6E37               	movwf	main@midPWM+1,c
  1462  003B52  0E1F               	movlw	31
  1463  003B54  D003               	goto	L11
  1464  003B56                     l1678:
  1465  003B56  0E00               	movlw	0
  1466  003B58  6E37               	movwf	main@midPWM+1,c
  1467  003B5A  0E00               	movlw	0
  1468  003B5C                     L11:
  1469  003B5C  6E36               	movwf	main@midPWM,c
  1470  003B5E                     l1680:
  1471                           
  1472                           ;main.c: 428: }
  1473                           ;main.c: 430: if (sequenceNumber == 3)
  1474  003B5E  503E               	movf	main@sequenceNumber,w,c
  1475  003B60  0A03               	xorlw	3
  1476  003B62  A4D8               	btfss	status,2,c
  1477  003B64  D028               	goto	l1700
  1478                           
  1479                           ;main.c: 431: {
  1480                           ;main.c: 432: if (stepNumber == 0) lowPWM = 31; else highPWM = 0;
  1481  003B66  5040               	movf	main@stepNumber+1,w,c
  1482  003B68  103F               	iorwf	main@stepNumber,w,c
  1483  003B6A  A4D8               	btfss	status,2,c
  1484  003B6C  D005               	goto	l1686
  1485  003B6E  0E00               	movlw	0
  1486  003B70  6E2E               	movwf	main@lowPWM+1,c
  1487  003B72  0E1F               	movlw	31
  1488  003B74  6E2D               	movwf	main@lowPWM,c
  1489  003B76  D004               	goto	l1688
  1490  003B78                     l1686:
  1491  003B78  0E00               	movlw	0
  1492  003B7A  6E30               	movwf	main@highPWM+1,c
  1493  003B7C  0E00               	movlw	0
  1494  003B7E  6E2F               	movwf	main@highPWM,c
  1495  003B80                     l1688:
  1496                           
  1497                           ;main.c: 433: if (stepNumber == 1) midPWM = 31; else lowPWM = 0;
  1498  003B80  043F               	decf	main@stepNumber,w,c
  1499  003B82  1040               	iorwf	main@stepNumber+1,w,c
  1500  003B84  A4D8               	btfss	status,2,c
  1501  003B86  D005               	goto	l1692
  1502  003B88  0E00               	movlw	0
  1503  003B8A  6E37               	movwf	main@midPWM+1,c
  1504  003B8C  0E1F               	movlw	31
  1505  003B8E  6E36               	movwf	main@midPWM,c
  1506  003B90  D004               	goto	l1694
  1507  003B92                     l1692:
  1508  003B92  0E00               	movlw	0
  1509  003B94  6E2E               	movwf	main@lowPWM+1,c
  1510  003B96  0E00               	movlw	0
  1511  003B98  6E2D               	movwf	main@lowPWM,c
  1512  003B9A                     l1694:
  1513                           
  1514                           ;main.c: 434: if (stepNumber == 2) highPWM = 31; else midPWM = 0;
  1515  003B9A  503F               	movf	main@stepNumber,w,c
  1516  003B9C  0A02               	xorlw	2
  1517  003B9E  1040               	iorwf	main@stepNumber+1,w,c
  1518  003BA0  A4D8               	btfss	status,2,c
  1519  003BA2  D005               	goto	l1698
  1520  003BA4  0E00               	movlw	0
  1521  003BA6  6E30               	movwf	main@highPWM+1,c
  1522  003BA8  0E1F               	movlw	31
  1523  003BAA  6E2F               	movwf	main@highPWM,c
  1524  003BAC  D004               	goto	l1700
  1525  003BAE                     l1698:
  1526  003BAE  0E00               	movlw	0
  1527  003BB0  6E37               	movwf	main@midPWM+1,c
  1528  003BB2  0E00               	movlw	0
  1529  003BB4  6E36               	movwf	main@midPWM,c
  1530  003BB6                     l1700:
  1531                           
  1532                           ;main.c: 435: }
  1533                           ;main.c: 437: if (sequenceNumber == 4)
  1534  003BB6  503E               	movf	main@sequenceNumber,w,c
  1535  003BB8  0A04               	xorlw	4
  1536  003BBA  A4D8               	btfss	status,2,c
  1537  003BBC  D025               	goto	l1720
  1538                           
  1539                           ;main.c: 438: {
  1540                           ;main.c: 439: if (stepNumber == 0) midPWM = 31; else midPWM = 0;
  1541  003BBE  5040               	movf	main@stepNumber+1,w,c
  1542  003BC0  103F               	iorwf	main@stepNumber,w,c
  1543  003BC2  A4D8               	btfss	status,2,c
  1544  003BC4  D004               	goto	l1706
  1545  003BC6  0E00               	movlw	0
  1546  003BC8  6E37               	movwf	main@midPWM+1,c
  1547  003BCA  0E1F               	movlw	31
  1548  003BCC  D003               	goto	L12
  1549  003BCE                     l1706:
  1550  003BCE  0E00               	movlw	0
  1551  003BD0  6E37               	movwf	main@midPWM+1,c
  1552  003BD2  0E00               	movlw	0
  1553  003BD4                     L12:
  1554  003BD4  6E36               	movwf	main@midPWM,c
  1555                           
  1556                           ;main.c: 440: if (stepNumber == 1) highPWM = 31; else highPWM = 0;
  1557  003BD6  043F               	decf	main@stepNumber,w,c
  1558  003BD8  1040               	iorwf	main@stepNumber+1,w,c
  1559  003BDA  A4D8               	btfss	status,2,c
  1560  003BDC  D004               	goto	l1712
  1561  003BDE  0E00               	movlw	0
  1562  003BE0  6E30               	movwf	main@highPWM+1,c
  1563  003BE2  0E1F               	movlw	31
  1564  003BE4  D003               	goto	L13
  1565  003BE6                     l1712:
  1566  003BE6  0E00               	movlw	0
  1567  003BE8  6E30               	movwf	main@highPWM+1,c
  1568  003BEA  0E00               	movlw	0
  1569  003BEC                     L13:
  1570  003BEC  6E2F               	movwf	main@highPWM,c
  1571                           
  1572                           ;main.c: 441: if (stepNumber == 2) lowPWM = 31; else lowPWM = 0;
  1573  003BEE  503F               	movf	main@stepNumber,w,c
  1574  003BF0  0A02               	xorlw	2
  1575  003BF2  1040               	iorwf	main@stepNumber+1,w,c
  1576  003BF4  A4D8               	btfss	status,2,c
  1577  003BF6  D004               	goto	l1718
  1578  003BF8  0E00               	movlw	0
  1579  003BFA  6E2E               	movwf	main@lowPWM+1,c
  1580  003BFC  0E1F               	movlw	31
  1581  003BFE  D003               	goto	L14
  1582  003C00                     l1718:
  1583  003C00  0E00               	movlw	0
  1584  003C02  6E2E               	movwf	main@lowPWM+1,c
  1585  003C04  0E00               	movlw	0
  1586  003C06                     L14:
  1587  003C06  6E2D               	movwf	main@lowPWM,c
  1588  003C08                     l1720:
  1589                           
  1590                           ;main.c: 442: }
  1591                           ;main.c: 444: if (tickCounter > 8)
  1592  003C08  5034               	movf	main@tickCounter+1,w,c
  1593  003C0A  0A80               	xorlw	128
  1594  003C0C  0F80               	addlw	-128
  1595  003C0E  0E09               	movlw	9
  1596  003C10  B4D8               	btfsc	status,2,c
  1597  003C12  5C33               	subwf	main@tickCounter,w,c
  1598  003C14  A0D8               	btfss	status,0,c
  1599  003C16  D02B               	goto	l1744
  1600                           
  1601                           ;main.c: 445: {
  1602                           ;main.c: 446: stepNumber++;
  1603  003C18  4A3F               	infsnz	main@stepNumber,f,c
  1604  003C1A  2A40               	incf	main@stepNumber+1,f,c
  1605                           
  1606                           ;main.c: 447: tickCounter = 0;
  1607  003C1C  0E00               	movlw	0
  1608  003C1E  6E34               	movwf	main@tickCounter+1,c
  1609  003C20  0E00               	movlw	0
  1610  003C22  6E33               	movwf	main@tickCounter,c
  1611                           
  1612                           ;main.c: 449: if (stepNumber == 3)
  1613  003C24  503F               	movf	main@stepNumber,w,c
  1614  003C26  0A03               	xorlw	3
  1615  003C28  1040               	iorwf	main@stepNumber+1,w,c
  1616  003C2A  A4D8               	btfss	status,2,c
  1617  003C2C  D020               	goto	l1744
  1618                           
  1619                           ;main.c: 450: {
  1620                           ;main.c: 451: stepNumber = 0;
  1621  003C2E  0E00               	movlw	0
  1622  003C30  6E40               	movwf	main@stepNumber+1,c
  1623  003C32  0E00               	movlw	0
  1624  003C34  6E3F               	movwf	main@stepNumber,c
  1625                           
  1626                           ;main.c: 452: sequenceNumber++;
  1627  003C36  2A3E               	incf	main@sequenceNumber,f,c
  1628                           
  1629                           ;main.c: 453: brightness = 0;
  1630  003C38  6E10               	movwf	??_main& (0+255),c
  1631  003C3A  0E00               	movlw	0
  1632  003C3C  6E39               	movwf	main@brightness,c
  1633  003C3E  5010               	movf	??_main& (0+255),w,c
  1634                           
  1635                           ;main.c: 455: if (sequenceNumber == 5)
  1636  003C40  503E               	movf	main@sequenceNumber,w,c
  1637  003C42  0A05               	xorlw	5
  1638  003C44  A4D8               	btfss	status,2,c
  1639  003C46  D013               	goto	l1744
  1640                           
  1641                           ;main.c: 456: {
  1642                           ;main.c: 457: sequenceNumber = 0;
  1643  003C48  6E10               	movwf	??_main& (0+255),c
  1644  003C4A  0E00               	movlw	0
  1645  003C4C  6E3E               	movwf	main@sequenceNumber,c
  1646  003C4E  5010               	movf	??_main& (0+255),w,c
  1647                           
  1648                           ;main.c: 458: sequenceRepeats++;
  1649  003C50  4A31               	infsnz	main@sequenceRepeats,f,c
  1650  003C52  2A32               	incf	main@sequenceRepeats+1,f,c
  1651                           
  1652                           ;main.c: 459: if (sequenceRepeats > 30)
  1653  003C54  5032               	movf	main@sequenceRepeats+1,w,c
  1654  003C56  0A80               	xorlw	128
  1655  003C58  0F80               	addlw	-128
  1656  003C5A  0E1F               	movlw	31
  1657  003C5C  B4D8               	btfsc	status,2,c
  1658  003C5E  5C31               	subwf	main@sequenceRepeats,w,c
  1659  003C60  A0D8               	btfss	status,0,c
  1660  003C62  D005               	goto	l1744
  1661                           
  1662                           ;main.c: 460: {
  1663                           ;main.c: 461: sequenceRepeats = 0;
  1664  003C64  0E00               	movlw	0
  1665  003C66  6E32               	movwf	main@sequenceRepeats+1,c
  1666  003C68  0E00               	movlw	0
  1667  003C6A  6E31               	movwf	main@sequenceRepeats,c
  1668                           
  1669                           ;main.c: 462: patternNumber++;
  1670  003C6C  2A38               	incf	main@patternNumber,f,c
  1671  003C6E                     l1744:
  1672                           
  1673                           ;main.c: 463: }
  1674                           ;main.c: 464: }
  1675                           ;main.c: 465: }
  1676                           ;main.c: 466: }
  1677                           ;main.c: 467: }
  1678                           ;main.c: 470: if (patternNumber == 3)
  1679  003C6E  5038               	movf	main@patternNumber,w,c
  1680  003C70  0A03               	xorlw	3
  1681  003C72  A4D8               	btfss	status,2,c
  1682  003C74  D057               	goto	l1786
  1683                           
  1684                           ;main.c: 471: {
  1685                           ;main.c: 472: if (sequenceNumber == 0)
  1686  003C76  663E               	tstfsz	main@sequenceNumber,c
  1687  003C78  D023               	goto	l154
  1688                           
  1689                           ;main.c: 473: {
  1690                           ;main.c: 474: if (currentStep != stepNumber)
  1691  003C7A  5040               	movf	main@stepNumber+1,w,c
  1692  003C7C  183B               	xorwf	main@currentStep+1,w,c
  1693  003C7E  E102               	bnz	u1275
  1694  003C80  503F               	movf	main@stepNumber,w,c
  1695  003C82  183A               	xorwf	main@currentStep,w,c
  1696  003C84                     u1275:
  1697  003C84  B4D8               	btfsc	status,2,c
  1698  003C86  D013               	goto	l1758
  1699                           
  1700                           ;main.c: 475: {
  1701                           ;main.c: 476: currentStep = stepNumber;
  1702  003C88  C03F  F03A         	movff	main@stepNumber,main@currentStep
  1703  003C8C  C040  F03B         	movff	main@stepNumber+1,main@currentStep+1
  1704                           
  1705                           ;main.c: 477: if (currentStep < 16) brightness += 2; else brightness -= 2;
  1706  003C90  503B               	movf	main@currentStep+1,w,c
  1707  003C92  0A80               	xorlw	128
  1708  003C94  6EF3               	movwf	prodl,c
  1709  003C96  0E80               	movlw	128
  1710  003C98  5CF3               	subwf	prodl,w,c
  1711  003C9A  0E10               	movlw	16
  1712  003C9C  B4D8               	btfsc	status,2,c
  1713  003C9E  5C3A               	subwf	main@currentStep,w,c
  1714  003CA0  B0D8               	btfsc	status,0,c
  1715  003CA2  D003               	goto	l1756
  1716  003CA4  0E02               	movlw	2
  1717  003CA6  2639               	addwf	main@brightness,f,c
  1718  003CA8  D002               	goto	l1758
  1719  003CAA                     l1756:
  1720  003CAA  0E02               	movlw	2
  1721  003CAC  5E39               	subwf	main@brightness,f,c
  1722  003CAE                     l1758:
  1723                           
  1724                           ;main.c: 478: }
  1725                           ;main.c: 479: highPWM = brightness;
  1726  003CAE  C039  F02F         	movff	main@brightness,main@highPWM
  1727  003CB2  6A30               	clrf	main@highPWM+1,c
  1728                           
  1729                           ;main.c: 480: midPWM = brightness;
  1730  003CB4  C039  F036         	movff	main@brightness,main@midPWM
  1731  003CB8  6A37               	clrf	main@midPWM+1,c
  1732                           
  1733                           ;main.c: 481: lowPWM = brightness;
  1734  003CBA  C039  F02D         	movff	main@brightness,main@lowPWM
  1735  003CBE  6A2E               	clrf	main@lowPWM+1,c
  1736  003CC0                     l154:
  1737                           
  1738                           ;main.c: 482: }
  1739                           ;main.c: 484: if (tickCounter > 3)
  1740  003CC0  5034               	movf	main@tickCounter+1,w,c
  1741  003CC2  0A80               	xorlw	128
  1742  003CC4  0F80               	addlw	-128
  1743  003CC6  0E04               	movlw	4
  1744  003CC8  B4D8               	btfsc	status,2,c
  1745  003CCA  5C33               	subwf	main@tickCounter,w,c
  1746  003CCC  A0D8               	btfss	status,0,c
  1747  003CCE  D02A               	goto	l1786
  1748                           
  1749                           ;main.c: 485: {
  1750                           ;main.c: 486: stepNumber++;
  1751  003CD0  4A3F               	infsnz	main@stepNumber,f,c
  1752  003CD2  2A40               	incf	main@stepNumber+1,f,c
  1753                           
  1754                           ;main.c: 487: tickCounter = 0;
  1755  003CD4  0E00               	movlw	0
  1756  003CD6  6E34               	movwf	main@tickCounter+1,c
  1757  003CD8  0E00               	movlw	0
  1758  003CDA  6E33               	movwf	main@tickCounter,c
  1759                           
  1760                           ;main.c: 489: if (stepNumber == 31)
  1761  003CDC  503F               	movf	main@stepNumber,w,c
  1762  003CDE  0A1F               	xorlw	31
  1763  003CE0  1040               	iorwf	main@stepNumber+1,w,c
  1764  003CE2  A4D8               	btfss	status,2,c
  1765  003CE4  D01F               	goto	l1786
  1766                           
  1767                           ;main.c: 490: {
  1768                           ;main.c: 491: stepNumber = 0;
  1769  003CE6  0E00               	movlw	0
  1770  003CE8  6E40               	movwf	main@stepNumber+1,c
  1771  003CEA  0E00               	movlw	0
  1772  003CEC  6E3F               	movwf	main@stepNumber,c
  1773                           
  1774                           ;main.c: 492: sequenceNumber++;
  1775  003CEE  2A3E               	incf	main@sequenceNumber,f,c
  1776                           
  1777                           ;main.c: 493: brightness = 0;
  1778  003CF0  6E10               	movwf	??_main& (0+255),c
  1779  003CF2  0E00               	movlw	0
  1780  003CF4  6E39               	movwf	main@brightness,c
  1781  003CF6  5010               	movf	??_main& (0+255),w,c
  1782                           
  1783                           ;main.c: 495: if (sequenceNumber == 1)
  1784  003CF8  043E               	decf	main@sequenceNumber,w,c
  1785  003CFA  A4D8               	btfss	status,2,c
  1786  003CFC  D013               	goto	l1786
  1787                           
  1788                           ;main.c: 496: {
  1789                           ;main.c: 497: sequenceNumber = 0;
  1790  003CFE  6E10               	movwf	??_main& (0+255),c
  1791  003D00  0E00               	movlw	0
  1792  003D02  6E3E               	movwf	main@sequenceNumber,c
  1793  003D04  5010               	movf	??_main& (0+255),w,c
  1794                           
  1795                           ;main.c: 498: sequenceRepeats++;
  1796  003D06  4A31               	infsnz	main@sequenceRepeats,f,c
  1797  003D08  2A32               	incf	main@sequenceRepeats+1,f,c
  1798                           
  1799                           ;main.c: 499: if (sequenceRepeats > 60)
  1800  003D0A  5032               	movf	main@sequenceRepeats+1,w,c
  1801  003D0C  0A80               	xorlw	128
  1802  003D0E  0F80               	addlw	-128
  1803  003D10  0E3D               	movlw	61
  1804  003D12  B4D8               	btfsc	status,2,c
  1805  003D14  5C31               	subwf	main@sequenceRepeats,w,c
  1806  003D16  A0D8               	btfss	status,0,c
  1807  003D18  D005               	goto	l1786
  1808                           
  1809                           ;main.c: 500: {
  1810                           ;main.c: 501: sequenceRepeats = 0;
  1811  003D1A  0E00               	movlw	0
  1812  003D1C  6E32               	movwf	main@sequenceRepeats+1,c
  1813  003D1E  0E00               	movlw	0
  1814  003D20  6E31               	movwf	main@sequenceRepeats,c
  1815                           
  1816                           ;main.c: 502: patternNumber++;
  1817  003D22  2A38               	incf	main@patternNumber,f,c
  1818  003D24                     l1786:
  1819                           
  1820                           ;main.c: 503: }
  1821                           ;main.c: 504: }
  1822                           ;main.c: 505: }
  1823                           ;main.c: 506: }
  1824                           ;main.c: 507: }
  1825                           ;main.c: 510: if (patternNumber == 4)
  1826  003D24  5038               	movf	main@patternNumber,w,c
  1827  003D26  0A04               	xorlw	4
  1828  003D28  A4D8               	btfss	status,2,c
  1829  003D2A  D06F               	goto	l1842
  1830                           
  1831                           ;main.c: 511: {
  1832                           ;main.c: 512: if (sequenceNumber == 0)
  1833  003D2C  663E               	tstfsz	main@sequenceNumber,c
  1834  003D2E  D03B               	goto	l1818
  1835                           
  1836                           ;main.c: 513: {
  1837                           ;main.c: 514: if (stepNumber == 0) highPWM = 31; else highPWM = 0;
  1838  003D30  5040               	movf	main@stepNumber+1,w,c
  1839  003D32  103F               	iorwf	main@stepNumber,w,c
  1840  003D34  A4D8               	btfss	status,2,c
  1841  003D36  D004               	goto	l1794
  1842  003D38  0E00               	movlw	0
  1843  003D3A  6E30               	movwf	main@highPWM+1,c
  1844  003D3C  0E1F               	movlw	31
  1845  003D3E  D003               	goto	L15
  1846  003D40                     l1794:
  1847  003D40  0E00               	movlw	0
  1848  003D42  6E30               	movwf	main@highPWM+1,c
  1849  003D44  0E00               	movlw	0
  1850  003D46                     L15:
  1851  003D46  6E2F               	movwf	main@highPWM,c
  1852                           
  1853                           ;main.c: 515: if (stepNumber == 1) midPWM = 31; else if (stepNumber != 3) midPWM = 0;
  1854  003D48  043F               	decf	main@stepNumber,w,c
  1855  003D4A  1040               	iorwf	main@stepNumber+1,w,c
  1856  003D4C  A4D8               	btfss	status,2,c
  1857  003D4E  D004               	goto	l1800
  1858  003D50  0E00               	movlw	0
  1859  003D52  6E37               	movwf	main@midPWM+1,c
  1860  003D54  0E1F               	movlw	31
  1861  003D56  D008               	goto	L16
  1862  003D58                     l1800:
  1863  003D58  503F               	movf	main@stepNumber,w,c
  1864  003D5A  0A03               	xorlw	3
  1865  003D5C  1040               	iorwf	main@stepNumber+1,w,c
  1866  003D5E  B4D8               	btfsc	status,2,c
  1867  003D60  D004               	goto	l1804
  1868  003D62  0E00               	movlw	0
  1869  003D64  6E37               	movwf	main@midPWM+1,c
  1870  003D66  0E00               	movlw	0
  1871  003D68                     L16:
  1872  003D68  6E36               	movwf	main@midPWM,c
  1873  003D6A                     l1804:
  1874                           
  1875                           ;main.c: 516: if (stepNumber == 2) lowPWM = 31; else lowPWM = 0;
  1876  003D6A  503F               	movf	main@stepNumber,w,c
  1877  003D6C  0A02               	xorlw	2
  1878  003D6E  1040               	iorwf	main@stepNumber+1,w,c
  1879  003D70  A4D8               	btfss	status,2,c
  1880  003D72  D004               	goto	l1808
  1881  003D74  0E00               	movlw	0
  1882  003D76  6E2E               	movwf	main@lowPWM+1,c
  1883  003D78  0E1F               	movlw	31
  1884  003D7A  D003               	goto	L17
  1885  003D7C                     l1808:
  1886  003D7C  0E00               	movlw	0
  1887  003D7E  6E2E               	movwf	main@lowPWM+1,c
  1888  003D80  0E00               	movlw	0
  1889  003D82                     L17:
  1890  003D82  6E2D               	movwf	main@lowPWM,c
  1891                           
  1892                           ;main.c: 517: if (stepNumber == 3) midPWM = 31; else if (stepNumber != 1) midPWM = 0;
  1893  003D84  503F               	movf	main@stepNumber,w,c
  1894  003D86  0A03               	xorlw	3
  1895  003D88  1040               	iorwf	main@stepNumber+1,w,c
  1896  003D8A  A4D8               	btfss	status,2,c
  1897  003D8C  D004               	goto	l1814
  1898  003D8E  0E00               	movlw	0
  1899  003D90  6E37               	movwf	main@midPWM+1,c
  1900  003D92  0E1F               	movlw	31
  1901  003D94  D007               	goto	L18
  1902  003D96                     l1814:
  1903  003D96  043F               	decf	main@stepNumber,w,c
  1904  003D98  1040               	iorwf	main@stepNumber+1,w,c
  1905  003D9A  B4D8               	btfsc	status,2,c
  1906  003D9C  D004               	goto	l1818
  1907  003D9E  0E00               	movlw	0
  1908  003DA0  6E37               	movwf	main@midPWM+1,c
  1909  003DA2  0E00               	movlw	0
  1910  003DA4                     L18:
  1911  003DA4  6E36               	movwf	main@midPWM,c
  1912  003DA6                     l1818:
  1913                           
  1914                           ;main.c: 518: }
  1915                           ;main.c: 520: if (tickCounter > 8)
  1916  003DA6  5034               	movf	main@tickCounter+1,w,c
  1917  003DA8  0A80               	xorlw	128
  1918  003DAA  0F80               	addlw	-128
  1919  003DAC  0E09               	movlw	9
  1920  003DAE  B4D8               	btfsc	status,2,c
  1921  003DB0  5C33               	subwf	main@tickCounter,w,c
  1922  003DB2  A0D8               	btfss	status,0,c
  1923  003DB4  D02A               	goto	l1842
  1924                           
  1925                           ;main.c: 521: {
  1926                           ;main.c: 522: stepNumber++;
  1927  003DB6  4A3F               	infsnz	main@stepNumber,f,c
  1928  003DB8  2A40               	incf	main@stepNumber+1,f,c
  1929                           
  1930                           ;main.c: 523: tickCounter = 0;
  1931  003DBA  0E00               	movlw	0
  1932  003DBC  6E34               	movwf	main@tickCounter+1,c
  1933  003DBE  0E00               	movlw	0
  1934  003DC0  6E33               	movwf	main@tickCounter,c
  1935                           
  1936                           ;main.c: 525: if (stepNumber == 4)
  1937  003DC2  503F               	movf	main@stepNumber,w,c
  1938  003DC4  0A04               	xorlw	4
  1939  003DC6  1040               	iorwf	main@stepNumber+1,w,c
  1940  003DC8  A4D8               	btfss	status,2,c
  1941  003DCA  D01F               	goto	l1842
  1942                           
  1943                           ;main.c: 526: {
  1944                           ;main.c: 527: stepNumber = 0;
  1945  003DCC  0E00               	movlw	0
  1946  003DCE  6E40               	movwf	main@stepNumber+1,c
  1947  003DD0  0E00               	movlw	0
  1948  003DD2  6E3F               	movwf	main@stepNumber,c
  1949                           
  1950                           ;main.c: 528: sequenceNumber++;
  1951  003DD4  2A3E               	incf	main@sequenceNumber,f,c
  1952                           
  1953                           ;main.c: 529: brightness = 0;
  1954  003DD6  6E10               	movwf	??_main& (0+255),c
  1955  003DD8  0E00               	movlw	0
  1956  003DDA  6E39               	movwf	main@brightness,c
  1957  003DDC  5010               	movf	??_main& (0+255),w,c
  1958                           
  1959                           ;main.c: 531: if (sequenceNumber == 1)
  1960  003DDE  043E               	decf	main@sequenceNumber,w,c
  1961  003DE0  A4D8               	btfss	status,2,c
  1962  003DE2  D013               	goto	l1842
  1963                           
  1964                           ;main.c: 532: {
  1965                           ;main.c: 533: sequenceNumber = 0;
  1966  003DE4  6E10               	movwf	??_main& (0+255),c
  1967  003DE6  0E00               	movlw	0
  1968  003DE8  6E3E               	movwf	main@sequenceNumber,c
  1969  003DEA  5010               	movf	??_main& (0+255),w,c
  1970                           
  1971                           ;main.c: 534: sequenceRepeats++;
  1972  003DEC  4A31               	infsnz	main@sequenceRepeats,f,c
  1973  003DEE  2A32               	incf	main@sequenceRepeats+1,f,c
  1974                           
  1975                           ;main.c: 535: if (sequenceRepeats > 100)
  1976  003DF0  5032               	movf	main@sequenceRepeats+1,w,c
  1977  003DF2  0A80               	xorlw	128
  1978  003DF4  0F80               	addlw	-128
  1979  003DF6  0E65               	movlw	101
  1980  003DF8  B4D8               	btfsc	status,2,c
  1981  003DFA  5C31               	subwf	main@sequenceRepeats,w,c
  1982  003DFC  A0D8               	btfss	status,0,c
  1983  003DFE  D005               	goto	l1842
  1984                           
  1985                           ;main.c: 536: {
  1986                           ;main.c: 537: sequenceRepeats = 0;
  1987  003E00  0E00               	movlw	0
  1988  003E02  6E32               	movwf	main@sequenceRepeats+1,c
  1989  003E04  0E00               	movlw	0
  1990  003E06  6E31               	movwf	main@sequenceRepeats,c
  1991                           
  1992                           ;main.c: 538: patternNumber++;
  1993  003E08  2A38               	incf	main@patternNumber,f,c
  1994  003E0A                     l1842:
  1995                           
  1996                           ;main.c: 539: }
  1997                           ;main.c: 540: }
  1998                           ;main.c: 541: }
  1999                           ;main.c: 542: }
  2000                           ;main.c: 543: }
  2001                           ;main.c: 546: if (patternNumber > 4) patternNumber = 0;
  2002  003E0A  0E04               	movlw	4
  2003  003E0C  6438               	cpfsgt	main@patternNumber,c
  2004  003E0E  D004               	goto	l1846
  2005  003E10  6E10               	movwf	??_main& (0+255),c
  2006  003E12  0E00               	movlw	0
  2007  003E14  6E38               	movwf	main@patternNumber,c
  2008  003E16  5010               	movf	??_main& (0+255),w,c
  2009  003E18                     l1846:
  2010                           
  2011                           ;main.c: 549: if (highPWM > PWMcount) PORTBbits.RB2 = 1; else PORTBbits.RB2 = 0;
  2012  003E18  503D               	movf	main@PWMcount+1,w,c
  2013  003E1A  0A80               	xorlw	128
  2014  003E1C  6E10               	movwf	??_main& (0+255),c
  2015  003E1E  502F               	movf	main@highPWM,w,c
  2016  003E20  5C3C               	subwf	main@PWMcount,w,c
  2017  003E22  5030               	movf	main@highPWM+1,w,c
  2018  003E24  0A80               	xorlw	128
  2019  003E26  5810               	subwfb	??_main& (0+255),w,c
  2020  003E28  B0D8               	btfsc	status,0,c
  2021  003E2A  D002               	goto	l179
  2022  003E2C  8481               	bsf	3969,2,c	;volatile
  2023  003E2E  D001               	goto	l1850
  2024  003E30                     l179:
  2025  003E30  9481               	bcf	3969,2,c	;volatile
  2026  003E32                     l1850:
  2027                           
  2028                           ;main.c: 550: if (midPWM > PWMcount) PORTBbits.RB1 = 1; else PORTBbits.RB1 = 0;
  2029  003E32  503D               	movf	main@PWMcount+1,w,c
  2030  003E34  0A80               	xorlw	128
  2031  003E36  6E10               	movwf	??_main& (0+255),c
  2032  003E38  5036               	movf	main@midPWM,w,c
  2033  003E3A  5C3C               	subwf	main@PWMcount,w,c
  2034  003E3C  5037               	movf	main@midPWM+1,w,c
  2035  003E3E  0A80               	xorlw	128
  2036  003E40  5810               	subwfb	??_main& (0+255),w,c
  2037  003E42  B0D8               	btfsc	status,0,c
  2038  003E44  D002               	goto	l181
  2039  003E46  8281               	bsf	3969,1,c	;volatile
  2040  003E48  D001               	goto	l1854
  2041  003E4A                     l181:
  2042  003E4A  9281               	bcf	3969,1,c	;volatile
  2043  003E4C                     l1854:
  2044                           
  2045                           ;main.c: 551: if (lowPWM > PWMcount) PORTBbits.RB0 = 1; else PORTBbits.RB0 = 0;
  2046  003E4C  503D               	movf	main@PWMcount+1,w,c
  2047  003E4E  0A80               	xorlw	128
  2048  003E50  6E10               	movwf	??_main& (0+255),c
  2049  003E52  502D               	movf	main@lowPWM,w,c
  2050  003E54  5C3C               	subwf	main@PWMcount,w,c
  2051  003E56  502E               	movf	main@lowPWM+1,w,c
  2052  003E58  0A80               	xorlw	128
  2053  003E5A  5810               	subwfb	??_main& (0+255),w,c
  2054  003E5C  B0D8               	btfsc	status,0,c
  2055  003E5E  D002               	goto	l183
  2056  003E60  8081               	bsf	3969,0,c	;volatile
  2057  003E62  D001               	goto	l1858
  2058  003E64                     l183:
  2059  003E64  9081               	bcf	3969,0,c	;volatile
  2060  003E66                     l1858:
  2061                           
  2062                           ;main.c: 554: PWMcount++;
  2063  003E66  4A3C               	infsnz	main@PWMcount,f,c
  2064  003E68  2A3D               	incf	main@PWMcount+1,f,c
  2065                           
  2066                           ;main.c: 555: if (PWMcount > 31) PWMcount = 0;
  2067  003E6A  503D               	movf	main@PWMcount+1,w,c
  2068  003E6C  0A80               	xorlw	128
  2069  003E6E  0F80               	addlw	-128
  2070  003E70  0E20               	movlw	32
  2071  003E72  B4D8               	btfsc	status,2,c
  2072  003E74  5C3C               	subwf	main@PWMcount,w,c
  2073  003E76  A0D8               	btfss	status,0,c
  2074  003E78  D004               	goto	l1864
  2075  003E7A  0E00               	movlw	0
  2076  003E7C  6E3D               	movwf	main@PWMcount+1,c
  2077  003E7E  0E00               	movlw	0
  2078  003E80  6E3C               	movwf	main@PWMcount,c
  2079  003E82                     l1864:
  2080                           
  2081                           ;main.c: 556: }
  2082                           ;main.c: 559: if (mode == 2)
  2083  003E82  5035               	movf	main@mode,w,c
  2084  003E84  0A02               	xorlw	2
  2085  003E86  A4D8               	btfss	status,2,c
  2086  003E88  EF90  F01A         	goto	l1316
  2087                           
  2088                           ;main.c: 560: {
  2089                           ;main.c: 562: if (fadeCounter == 0)
  2090  003E8C  5021               	movf	main@fadeCounter+1,w,c
  2091  003E8E  1020               	iorwf	main@fadeCounter,w,c
  2092  003E90  A4D8               	btfss	status,2,c
  2093  003E92  D021               	goto	l1880
  2094                           
  2095                           ;main.c: 563: {
  2096                           ;main.c: 564: if (highPWM > 0) highPWM--;
  2097  003E94  5030               	movf	main@highPWM+1,w,c
  2098  003E96  0A80               	xorlw	128
  2099  003E98  0F80               	addlw	-128
  2100  003E9A  0E01               	movlw	1
  2101  003E9C  B4D8               	btfsc	status,2,c
  2102  003E9E  5C2F               	subwf	main@highPWM,w,c
  2103  003EA0  A0D8               	btfss	status,0,c
  2104  003EA2  D003               	goto	l1872
  2105  003EA4  062F               	decf	main@highPWM,f,c
  2106  003EA6  A0D8               	btfss	status,0,c
  2107  003EA8  0630               	decf	main@highPWM+1,f,c
  2108  003EAA                     l1872:
  2109                           
  2110                           ;main.c: 565: if (midPWM > 0) midPWM--;
  2111  003EAA  5037               	movf	main@midPWM+1,w,c
  2112  003EAC  0A80               	xorlw	128
  2113  003EAE  0F80               	addlw	-128
  2114  003EB0  0E01               	movlw	1
  2115  003EB2  B4D8               	btfsc	status,2,c
  2116  003EB4  5C36               	subwf	main@midPWM,w,c
  2117  003EB6  A0D8               	btfss	status,0,c
  2118  003EB8  D003               	goto	l1876
  2119  003EBA  0636               	decf	main@midPWM,f,c
  2120  003EBC  A0D8               	btfss	status,0,c
  2121  003EBE  0637               	decf	main@midPWM+1,f,c
  2122  003EC0                     l1876:
  2123                           
  2124                           ;main.c: 566: if (lowPWM > 0) lowPWM--;
  2125  003EC0  502E               	movf	main@lowPWM+1,w,c
  2126  003EC2  0A80               	xorlw	128
  2127  003EC4  0F80               	addlw	-128
  2128  003EC6  0E01               	movlw	1
  2129  003EC8  B4D8               	btfsc	status,2,c
  2130  003ECA  5C2D               	subwf	main@lowPWM,w,c
  2131  003ECC  A0D8               	btfss	status,0,c
  2132  003ECE  D003               	goto	l1880
  2133  003ED0  062D               	decf	main@lowPWM,f,c
  2134  003ED2  A0D8               	btfss	status,0,c
  2135  003ED4  062E               	decf	main@lowPWM+1,f,c
  2136  003ED6                     l1880:
  2137                           
  2138                           ;main.c: 567: }
  2139                           ;main.c: 570: if (highLevel > 150) highPWM = 31;
  2140  003ED6  5025               	movf	main@highLevel+1,w,c
  2141  003ED8  0A80               	xorlw	128
  2142  003EDA  0F80               	addlw	-128
  2143  003EDC  0E97               	movlw	151
  2144  003EDE  B4D8               	btfsc	status,2,c
  2145  003EE0  5C24               	subwf	main@highLevel,w,c
  2146  003EE2  A0D8               	btfss	status,0,c
  2147  003EE4  D004               	goto	l1884
  2148  003EE6  0E00               	movlw	0
  2149  003EE8  6E30               	movwf	main@highPWM+1,c
  2150  003EEA  0E1F               	movlw	31
  2151  003EEC  6E2F               	movwf	main@highPWM,c
  2152  003EEE                     l1884:
  2153                           
  2154                           ;main.c: 571: if (midLevel > 520) midPWM = 31;
  2155  003EEE  5019               	movf	main@midLevel+1,w,c
  2156  003EF0  0A80               	xorlw	128
  2157  003EF2  0F7E               	addlw	-130
  2158  003EF4  0E09               	movlw	9
  2159  003EF6  B4D8               	btfsc	status,2,c
  2160  003EF8  5C18               	subwf	main@midLevel,w,c
  2161  003EFA  A0D8               	btfss	status,0,c
  2162  003EFC  D004               	goto	l1888
  2163  003EFE  0E00               	movlw	0
  2164  003F00  6E37               	movwf	main@midPWM+1,c
  2165  003F02  0E1F               	movlw	31
  2166  003F04  6E36               	movwf	main@midPWM,c
  2167  003F06                     l1888:
  2168                           
  2169                           ;main.c: 572: if (lowLevel > 470) lowPWM = 31;
  2170  003F06  501B               	movf	main@lowLevel+1,w,c
  2171  003F08  0A80               	xorlw	128
  2172  003F0A  0F7F               	addlw	-129
  2173  003F0C  0ED7               	movlw	215
  2174  003F0E  B4D8               	btfsc	status,2,c
  2175  003F10  5C1A               	subwf	main@lowLevel,w,c
  2176  003F12  A0D8               	btfss	status,0,c
  2177  003F14  D004               	goto	l1892
  2178  003F16  0E00               	movlw	0
  2179  003F18  6E2E               	movwf	main@lowPWM+1,c
  2180  003F1A  0E1F               	movlw	31
  2181  003F1C  6E2D               	movwf	main@lowPWM,c
  2182  003F1E                     l1892:
  2183                           
  2184                           ;main.c: 575: if (highPWM > PWMcount) PORTBbits.RB2 = 1; else PORTBbits.RB2 = 0;
  2185  003F1E  503D               	movf	main@PWMcount+1,w,c
  2186  003F20  0A80               	xorlw	128
  2187  003F22  6E10               	movwf	??_main& (0+255),c
  2188  003F24  502F               	movf	main@highPWM,w,c
  2189  003F26  5C3C               	subwf	main@PWMcount,w,c
  2190  003F28  5030               	movf	main@highPWM+1,w,c
  2191  003F2A  0A80               	xorlw	128
  2192  003F2C  5810               	subwfb	??_main& (0+255),w,c
  2193  003F2E  B0D8               	btfsc	status,0,c
  2194  003F30  D002               	goto	l194
  2195  003F32  8481               	bsf	3969,2,c	;volatile
  2196  003F34  D001               	goto	l1896
  2197  003F36                     l194:
  2198  003F36  9481               	bcf	3969,2,c	;volatile
  2199  003F38                     l1896:
  2200                           
  2201                           ;main.c: 576: if (midPWM > PWMcount) PORTBbits.RB1 = 1; else PORTBbits.RB1 = 0;
  2202  003F38  503D               	movf	main@PWMcount+1,w,c
  2203  003F3A  0A80               	xorlw	128
  2204  003F3C  6E10               	movwf	??_main& (0+255),c
  2205  003F3E  5036               	movf	main@midPWM,w,c
  2206  003F40  5C3C               	subwf	main@PWMcount,w,c
  2207  003F42  5037               	movf	main@midPWM+1,w,c
  2208  003F44  0A80               	xorlw	128
  2209  003F46  5810               	subwfb	??_main& (0+255),w,c
  2210  003F48  B0D8               	btfsc	status,0,c
  2211  003F4A  D002               	goto	l196
  2212  003F4C  8281               	bsf	3969,1,c	;volatile
  2213  003F4E  D001               	goto	l1900
  2214  003F50                     l196:
  2215  003F50  9281               	bcf	3969,1,c	;volatile
  2216  003F52                     l1900:
  2217                           
  2218                           ;main.c: 577: if (lowPWM > PWMcount) PORTBbits.RB0 = 1; else PORTBbits.RB0 = 0;
  2219  003F52  503D               	movf	main@PWMcount+1,w,c
  2220  003F54  0A80               	xorlw	128
  2221  003F56  6E10               	movwf	??_main& (0+255),c
  2222  003F58  502D               	movf	main@lowPWM,w,c
  2223  003F5A  5C3C               	subwf	main@PWMcount,w,c
  2224  003F5C  502E               	movf	main@lowPWM+1,w,c
  2225  003F5E  0A80               	xorlw	128
  2226  003F60  5810               	subwfb	??_main& (0+255),w,c
  2227  003F62  B0D8               	btfsc	status,0,c
  2228  003F64  D002               	goto	l198
  2229  003F66  8081               	bsf	3969,0,c	;volatile
  2230  003F68  D001               	goto	l1904
  2231  003F6A                     l198:
  2232  003F6A  9081               	bcf	3969,0,c	;volatile
  2233  003F6C                     l1904:
  2234                           
  2235                           ;main.c: 580: if (highPWM > PWMcount) PORTBbits.RB5 = 1; else PORTBbits.RB5 = 0;
  2236  003F6C  503D               	movf	main@PWMcount+1,w,c
  2237  003F6E  0A80               	xorlw	128
  2238  003F70  6E10               	movwf	??_main& (0+255),c
  2239  003F72  502F               	movf	main@highPWM,w,c
  2240  003F74  5C3C               	subwf	main@PWMcount,w,c
  2241  003F76  5030               	movf	main@highPWM+1,w,c
  2242  003F78  0A80               	xorlw	128
  2243  003F7A  5810               	subwfb	??_main& (0+255),w,c
  2244  003F7C  B0D8               	btfsc	status,0,c
  2245  003F7E  D002               	goto	l200
  2246  003F80  8A81               	bsf	3969,5,c	;volatile
  2247  003F82  D001               	goto	l1908
  2248  003F84                     l200:
  2249  003F84  9A81               	bcf	3969,5,c	;volatile
  2250  003F86                     l1908:
  2251                           
  2252                           ;main.c: 581: if (midPWM > PWMcount) PORTBbits.RB4 = 1; else PORTBbits.RB4 = 0;
  2253  003F86  503D               	movf	main@PWMcount+1,w,c
  2254  003F88  0A80               	xorlw	128
  2255  003F8A  6E10               	movwf	??_main& (0+255),c
  2256  003F8C  5036               	movf	main@midPWM,w,c
  2257  003F8E  5C3C               	subwf	main@PWMcount,w,c
  2258  003F90  5037               	movf	main@midPWM+1,w,c
  2259  003F92  0A80               	xorlw	128
  2260  003F94  5810               	subwfb	??_main& (0+255),w,c
  2261  003F96  B0D8               	btfsc	status,0,c
  2262  003F98  D002               	goto	l202
  2263  003F9A  8881               	bsf	3969,4,c	;volatile
  2264  003F9C  D001               	goto	l1912
  2265  003F9E                     l202:
  2266  003F9E  9881               	bcf	3969,4,c	;volatile
  2267  003FA0                     l1912:
  2268                           
  2269                           ;main.c: 582: if (lowPWM > PWMcount) PORTBbits.RB3 = 1; else PORTBbits.RB3 = 0;
  2270  003FA0  503D               	movf	main@PWMcount+1,w,c
  2271  003FA2  0A80               	xorlw	128
  2272  003FA4  6E10               	movwf	??_main& (0+255),c
  2273  003FA6  502D               	movf	main@lowPWM,w,c
  2274  003FA8  5C3C               	subwf	main@PWMcount,w,c
  2275  003FAA  502E               	movf	main@lowPWM+1,w,c
  2276  003FAC  0A80               	xorlw	128
  2277  003FAE  5810               	subwfb	??_main& (0+255),w,c
  2278  003FB0  B0D8               	btfsc	status,0,c
  2279  003FB2  D002               	goto	l204
  2280  003FB4  8681               	bsf	3969,3,c	;volatile
  2281  003FB6  D001               	goto	l1916
  2282  003FB8                     l204:
  2283  003FB8  9681               	bcf	3969,3,c	;volatile
  2284  003FBA                     l1916:
  2285                           
  2286                           ;main.c: 585: PWMcount++;
  2287  003FBA  4A3C               	infsnz	main@PWMcount,f,c
  2288  003FBC  2A3D               	incf	main@PWMcount+1,f,c
  2289                           
  2290                           ;main.c: 586: if (PWMcount > 31) PWMcount = 0;
  2291  003FBE  503D               	movf	main@PWMcount+1,w,c
  2292  003FC0  0A80               	xorlw	128
  2293  003FC2  0F80               	addlw	-128
  2294  003FC4  0E20               	movlw	32
  2295  003FC6  B4D8               	btfsc	status,2,c
  2296  003FC8  5C3C               	subwf	main@PWMcount,w,c
  2297  003FCA  A0D8               	btfss	status,0,c
  2298  003FCC  D004               	goto	l1922
  2299  003FCE  0E00               	movlw	0
  2300  003FD0  6E3D               	movwf	main@PWMcount+1,c
  2301  003FD2  0E00               	movlw	0
  2302  003FD4  6E3C               	movwf	main@PWMcount,c
  2303  003FD6                     l1922:
  2304                           
  2305                           ;main.c: 589: fadeCounter++;
  2306  003FD6  4A20               	infsnz	main@fadeCounter,f,c
  2307  003FD8  2A21               	incf	main@fadeCounter+1,f,c
  2308                           
  2309                           ;main.c: 590: if (fadeCounter > 30) fadeCounter = 0;
  2310  003FDA  5021               	movf	main@fadeCounter+1,w,c
  2311  003FDC  0A80               	xorlw	128
  2312  003FDE  0F80               	addlw	-128
  2313  003FE0  0E1F               	movlw	31
  2314  003FE2  B4D8               	btfsc	status,2,c
  2315  003FE4  5C20               	subwf	main@fadeCounter,w,c
  2316  003FE6  A0D8               	btfss	status,0,c
  2317  003FE8  EF90  F01A         	goto	l1316
  2318  003FEC  0E00               	movlw	0
  2319  003FEE  6E21               	movwf	main@fadeCounter+1,c
  2320  003FF0  0E00               	movlw	0
  2321  003FF2  6E20               	movwf	main@fadeCounter,c
  2322  003FF4  EF90  F01A         	goto	l1316
  2323  003FF8                     __end_of_main:
  2324                           	opt stack 0
  2325                           prodl	equ	0xFF3
  2326                           intcon	equ	0xFF2
  2327                           status	equ	0xFD8
  2328                           
  2329                           	psect	cinit
  2330  003282                     __pcinit:
  2331                           	opt stack 0
  2332  003282                     start_initialization:
  2333                           	opt stack 0
  2334  003282                     __initialization:
  2335                           	opt stack 0
  2336                           
  2337                           ; Clear objects allocated to BANK0 (128 bytes)
  2338  003282  EE00  F080         	lfsr	0,__pbssBANK0
  2339  003286  0E80               	movlw	128
  2340  003288                     clear_0:
  2341  003288  6AEE               	clrf	postinc0,c
  2342  00328A  06E8               	decf	wreg,f,c
  2343  00328C  E1FD               	bnz	clear_0
  2344                           
  2345                           ; Clear objects allocated to COMRAM (5 bytes)
  2346  00328E  6A45               	clrf	(__pbssCOMRAM+4)& (0+255),c
  2347  003290  6A44               	clrf	(__pbssCOMRAM+3)& (0+255),c
  2348  003292  6A43               	clrf	(__pbssCOMRAM+2)& (0+255),c
  2349  003294  6A42               	clrf	(__pbssCOMRAM+1)& (0+255),c
  2350  003296  6A41               	clrf	__pbssCOMRAM& (0+255),c
  2351  003298                     end_of_initialization:
  2352                           	opt stack 0
  2353  003298                     __end_of__initialization:
  2354                           	opt stack 0
  2355  003298  0E00               	movlw	low (__Lmediumconst shr (0+16))
  2356  00329A  6EF8               	movwf	tblptru,c
  2357  00329C  0100               	movlb	0
  2358  00329E  EF0E  F01A         	goto	_main	;jump to C main() function
  2359                           tblptru	equ	0xFF8
  2360                           prodl	equ	0xFF3
  2361                           intcon	equ	0xFF2
  2362                           postinc0	equ	0xFEE
  2363                           wreg	equ	0xFE8
  2364                           status	equ	0xFD8
  2365                           
  2366                           	psect	bssCOMRAM
  2367  000041                     __pbssCOMRAM:
  2368                           	opt stack 0
  2369  000041                     _randx:
  2370                           	opt stack 0
  2371  000041                     	ds	4
  2372  000045                     _randf:
  2373                           	opt stack 0
  2374  000045                     	ds	1
  2375                           tblptru	equ	0xFF8
  2376                           prodl	equ	0xFF3
  2377                           intcon	equ	0xFF2
  2378                           postinc0	equ	0xFEE
  2379                           wreg	equ	0xFE8
  2380                           status	equ	0xFD8
  2381                           
  2382                           	psect	bssBANK0
  2383  000080                     __pbssBANK0:
  2384                           	opt stack 0
  2385  000080                     _led_strip_colors:
  2386                           	opt stack 0
  2387  000080                     	ds	128
  2388                           tblptru	equ	0xFF8
  2389                           prodl	equ	0xFF3
  2390                           intcon	equ	0xFF2
  2391                           postinc0	equ	0xFEE
  2392                           wreg	equ	0xFE8
  2393                           status	equ	0xFD8
  2394                           
  2395                           	psect	cstackCOMRAM
  2396  000001                     __pcstackCOMRAM:
  2397                           	opt stack 0
  2398  000001                     ?_readMyADC:
  2399                           	opt stack 0
  2400  000001                     ?___aldiv:
  2401                           	opt stack 0
  2402  000001                     setGainLevel@gainLevel:
  2403                           	opt stack 0
  2404  000001                     ___aldiv@dividend:
  2405                           	opt stack 0
  2406                           
  2407                           ; 4 bytes @ 0x0
  2408  000001                     	ds	2
  2409  000003                     readMyADC@result:
  2410                           	opt stack 0
  2411                           
  2412                           ; 2 bytes @ 0x2
  2413  000003                     	ds	2
  2414  000005                     readMyADC@ADCnumber:
  2415                           	opt stack 0
  2416  000005                     ___aldiv@divisor:
  2417                           	opt stack 0
  2418                           
  2419                           ; 4 bytes @ 0x4
  2420  000005                     	ds	4
  2421  000009                     ??___aldiv:
  2422                           
  2423                           ; 0 bytes @ 0x8
  2424  000009                     	ds	1
  2425  00000A                     ___aldiv@counter:
  2426                           	opt stack 0
  2427                           
  2428                           ; 1 bytes @ 0x9
  2429  00000A                     	ds	1
  2430  00000B                     ___aldiv@sign:
  2431                           	opt stack 0
  2432                           
  2433                           ; 1 bytes @ 0xA
  2434  00000B                     	ds	1
  2435  00000C                     ___aldiv@quotient:
  2436                           	opt stack 0
  2437                           
  2438                           ; 4 bytes @ 0xB
  2439  00000C                     	ds	4
  2440  000010                     ??_main:
  2441                           
  2442                           ; 0 bytes @ 0xF
  2443  000010                     	ds	4
  2444  000014                     main@total:
  2445                           	opt stack 0
  2446                           
  2447                           ; 4 bytes @ 0x13
  2448  000014                     	ds	4
  2449  000018                     main@midLevel:
  2450                           	opt stack 0
  2451                           
  2452                           ; 2 bytes @ 0x17
  2453  000018                     	ds	2
  2454  00001A                     main@lowLevel:
  2455                           	opt stack 0
  2456                           
  2457                           ; 2 bytes @ 0x19
  2458  00001A                     	ds	2
  2459  00001C                     main@mainLevel:
  2460                           	opt stack 0
  2461                           
  2462                           ; 2 bytes @ 0x1B
  2463  00001C                     	ds	2
  2464  00001E                     main@sampleCount:
  2465                           	opt stack 0
  2466                           
  2467                           ; 2 bytes @ 0x1D
  2468  00001E                     	ds	2
  2469  000020                     main@fadeCounter:
  2470                           	opt stack 0
  2471                           
  2472                           ; 2 bytes @ 0x1F
  2473  000020                     	ds	2
  2474  000022                     main@soundDetectedCount:
  2475                           	opt stack 0
  2476                           
  2477                           ; 2 bytes @ 0x21
  2478  000022                     	ds	2
  2479  000024                     main@highLevel:
  2480                           	opt stack 0
  2481                           
  2482                           ; 2 bytes @ 0x23
  2483  000024                     	ds	2
  2484  000026                     main@soundFlag:
  2485                           	opt stack 0
  2486                           
  2487                           ; 1 bytes @ 0x25
  2488  000026                     	ds	1
  2489  000027                     main@average:
  2490                           	opt stack 0
  2491                           
  2492                           ; 2 bytes @ 0x26
  2493  000027                     	ds	2
  2494  000029                     main@clapCounter:
  2495                           	opt stack 0
  2496                           
  2497                           ; 2 bytes @ 0x28
  2498  000029                     	ds	2
  2499  00002B                     main@currentGainLevel:
  2500                           	opt stack 0
  2501                           
  2502                           ; 2 bytes @ 0x2A
  2503  00002B                     	ds	2
  2504  00002D                     main@lowPWM:
  2505                           	opt stack 0
  2506                           
  2507                           ; 2 bytes @ 0x2C
  2508  00002D                     	ds	2
  2509  00002F                     main@highPWM:
  2510                           	opt stack 0
  2511                           
  2512                           ; 2 bytes @ 0x2E
  2513  00002F                     	ds	2
  2514  000031                     main@sequenceRepeats:
  2515                           	opt stack 0
  2516                           
  2517                           ; 2 bytes @ 0x30
  2518  000031                     	ds	2
  2519  000033                     main@tickCounter:
  2520                           	opt stack 0
  2521                           
  2522                           ; 2 bytes @ 0x32
  2523  000033                     	ds	2
  2524  000035                     main@mode:
  2525                           	opt stack 0
  2526                           
  2527                           ; 1 bytes @ 0x34
  2528  000035                     	ds	1
  2529  000036                     main@midPWM:
  2530                           	opt stack 0
  2531                           
  2532                           ; 2 bytes @ 0x35
  2533  000036                     	ds	2
  2534  000038                     main@patternNumber:
  2535                           	opt stack 0
  2536                           
  2537                           ; 1 bytes @ 0x37
  2538  000038                     	ds	1
  2539  000039                     main@brightness:
  2540                           	opt stack 0
  2541                           
  2542                           ; 1 bytes @ 0x38
  2543  000039                     	ds	1
  2544  00003A                     main@currentStep:
  2545                           	opt stack 0
  2546                           
  2547                           ; 2 bytes @ 0x39
  2548  00003A                     	ds	2
  2549  00003C                     main@PWMcount:
  2550                           	opt stack 0
  2551                           
  2552                           ; 2 bytes @ 0x3B
  2553  00003C                     	ds	2
  2554  00003E                     main@sequenceNumber:
  2555                           	opt stack 0
  2556                           
  2557                           ; 1 bytes @ 0x3D
  2558  00003E                     	ds	1
  2559  00003F                     main@stepNumber:
  2560                           	opt stack 0
  2561                           
  2562                           ; 2 bytes @ 0x3E
  2563  00003F                     	ds	2
  2564                           tblptru	equ	0xFF8
  2565                           prodl	equ	0xFF3
  2566                           intcon	equ	0xFF2
  2567                           postinc0	equ	0xFEE
  2568                           wreg	equ	0xFE8
  2569                           status	equ	0xFD8
  2570                           
  2571 ;; *************** function _setupSPI *****************
  2572 ;; Defined at:
  2573 ;;		line 3 in file "spi.c"
  2574 ;; Parameters:    Size  Location     Type
  2575 ;;		None
  2576 ;; Auto vars:     Size  Location     Type
  2577 ;;		None
  2578 ;; Return value:  Size  Location     Type
  2579 ;;		None               void
  2580 ;; Registers used:
  2581 ;;		wreg, status,2
  2582 ;; Tracked objects:
  2583 ;;		On entry : 0/0
  2584 ;;		On exit  : 0/0
  2585 ;;		Unchanged: 0/0
  2586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2587 ;;      Params:         0       0       0       0       0
  2588 ;;      Locals:         0       0       0       0       0
  2589 ;;      Temps:          0       0       0       0       0
  2590 ;;      Totals:         0       0       0       0       0
  2591 ;;Total ram usage:        0 bytes
  2592 ;; Hardware stack levels used:    1
  2593 ;; This function calls:
  2594 ;;		Nothing
  2595 ;; This function is called by:
  2596 ;;		_main
  2597 ;; This function uses a non-reentrant model
  2598 ;;
  2599                           
  2600                           	psect	text1
  2601  003270                     __ptext1:
  2602                           	opt stack 0
  2603  003270                     _setupSPI:
  2604                           	opt stack 30
  2605                           
  2606                           ;spi.c: 6: TRISCbits.TRISC5 = 0;
  2607                           
  2608                           ;incstack = 0
  2609  003270  9A94               	bcf	3988,5,c	;volatile
  2610                           
  2611                           ;spi.c: 7: TRISCbits.TRISC4 = 1;
  2612  003272  8894               	bsf	3988,4,c	;volatile
  2613                           
  2614                           ;spi.c: 8: TRISCbits.TRISC3 = 0;
  2615  003274  9694               	bcf	3988,3,c	;volatile
  2616                           
  2617                           ;spi.c: 11: TRISCbits.TRISC0 = 1;
  2618  003276  8094               	bsf	3988,0,c	;volatile
  2619                           
  2620                           ;spi.c: 14: SSPSTAT = 0x40;
  2621  003278  0E40               	movlw	64
  2622  00327A  6EC7               	movwf	4039,c	;volatile
  2623                           
  2624                           ;spi.c: 15: SSPCON1 = 0x20;
  2625  00327C  0E20               	movlw	32
  2626  00327E  6EC6               	movwf	4038,c	;volatile
  2627  003280  0012               	return	
  2628  003282                     __end_of_setupSPI:
  2629                           	opt stack 0
  2630                           tblptru	equ	0xFF8
  2631                           prodl	equ	0xFF3
  2632                           intcon	equ	0xFF2
  2633                           postinc0	equ	0xFEE
  2634                           wreg	equ	0xFE8
  2635                           status	equ	0xFD8
  2636                           
  2637 ;; *************** function _setGainLevel *****************
  2638 ;; Defined at:
  2639 ;;		line 20 in file "spi.c"
  2640 ;; Parameters:    Size  Location     Type
  2641 ;;  gainLevel       1    wreg     unsigned char 
  2642 ;; Auto vars:     Size  Location     Type
  2643 ;;  gainLevel       1    0[COMRAM] unsigned char 
  2644 ;; Return value:  Size  Location     Type
  2645 ;;		None               void
  2646 ;; Registers used:
  2647 ;;		wreg, status,2
  2648 ;; Tracked objects:
  2649 ;;		On entry : 0/0
  2650 ;;		On exit  : 0/0
  2651 ;;		Unchanged: 0/0
  2652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2653 ;;      Params:         0       0       0       0       0
  2654 ;;      Locals:         1       0       0       0       0
  2655 ;;      Temps:          0       0       0       0       0
  2656 ;;      Totals:         1       0       0       0       0
  2657 ;;Total ram usage:        1 bytes
  2658 ;; Hardware stack levels used:    1
  2659 ;; This function calls:
  2660 ;;		Nothing
  2661 ;; This function is called by:
  2662 ;;		_main
  2663 ;; This function uses a non-reentrant model
  2664 ;;
  2665                           
  2666                           	psect	text2
  2667  0032A2                     __ptext2:
  2668                           	opt stack 0
  2669  0032A2                     _setGainLevel:
  2670                           	opt stack 30
  2671                           
  2672                           ;incstack = 0
  2673                           ;setGainLevel@gainLevel stored from wreg
  2674  0032A2  CFE8 F001          	movff	wreg,setGainLevel@gainLevel
  2675                           
  2676                           ;spi.c: 23: SSPSTAT = 0xC0;
  2677  0032A6  0EC0               	movlw	192
  2678  0032A8  6EC7               	movwf	4039,c	;volatile
  2679                           
  2680                           ;spi.c: 26: SSPCON1 = 0x20;
  2681  0032AA  0E20               	movlw	32
  2682  0032AC  6EC6               	movwf	4038,c	;volatile
  2683                           
  2684                           ;spi.c: 30: TRISCbits.RC0 = 0;
  2685  0032AE  9094               	bcf	3988,0,c	;volatile
  2686                           
  2687                           ;spi.c: 33: SSPIF = 0;
  2688  0032B0  969E               	bcf	3998,3,c	;volatile
  2689                           
  2690                           ;spi.c: 34: SSPBUF = 0x13;
  2691  0032B2  0E13               	movlw	19
  2692  0032B4  6EC9               	movwf	4041,c	;volatile
  2693  0032B6                     l299:
  2694  0032B6  A69E               	btfss	3998,3,c	;volatile
  2695  0032B8  D7FE               	goto	l299
  2696                           
  2697                           ;spi.c: 38: SSPIF = 0;
  2698  0032BA  969E               	bcf	3998,3,c	;volatile
  2699                           
  2700                           ;spi.c: 39: SSPBUF = gainLevel;
  2701  0032BC  C001  FFC9         	movff	setGainLevel@gainLevel,4041	;volatile
  2702  0032C0                     l302:
  2703  0032C0  A69E               	btfss	3998,3,c	;volatile
  2704  0032C2  D7FE               	goto	l302
  2705                           
  2706                           ;spi.c: 43: TRISCbits.RC0 = 1;
  2707  0032C4  8094               	bsf	3988,0,c	;volatile
  2708  0032C6  0012               	return	
  2709  0032C8                     __end_of_setGainLevel:
  2710                           	opt stack 0
  2711                           tblptru	equ	0xFF8
  2712                           prodl	equ	0xFF3
  2713                           intcon	equ	0xFF2
  2714                           postinc0	equ	0xFEE
  2715                           wreg	equ	0xFE8
  2716                           status	equ	0xFD8
  2717                           
  2718 ;; *************** function _readMyADC *****************
  2719 ;; Defined at:
  2720 ;;		line 596 in file "main.c"
  2721 ;; Parameters:    Size  Location     Type
  2722 ;;  ADCnumber       1    wreg     unsigned char 
  2723 ;; Auto vars:     Size  Location     Type
  2724 ;;  ADCnumber       1    4[COMRAM] unsigned char 
  2725 ;;  result          2    2[COMRAM] int 
  2726 ;; Return value:  Size  Location     Type
  2727 ;;                  2    0[COMRAM] int 
  2728 ;; Registers used:
  2729 ;;		wreg, status,2, status,0
  2730 ;; Tracked objects:
  2731 ;;		On entry : 0/0
  2732 ;;		On exit  : 0/0
  2733 ;;		Unchanged: 0/0
  2734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2735 ;;      Params:         2       0       0       0       0
  2736 ;;      Locals:         3       0       0       0       0
  2737 ;;      Temps:          0       0       0       0       0
  2738 ;;      Totals:         5       0       0       0       0
  2739 ;;Total ram usage:        5 bytes
  2740 ;; Hardware stack levels used:    1
  2741 ;; This function calls:
  2742 ;;		Nothing
  2743 ;; This function is called by:
  2744 ;;		_main
  2745 ;; This function uses a non-reentrant model
  2746 ;;
  2747                           
  2748                           	psect	text3
  2749  0032C8                     __ptext3:
  2750                           	opt stack 0
  2751  0032C8                     _readMyADC:
  2752                           	opt stack 30
  2753                           
  2754                           ;incstack = 0
  2755                           ;readMyADC@ADCnumber stored from wreg
  2756  0032C8  CFE8 F005          	movff	wreg,readMyADC@ADCnumber
  2757                           
  2758                           ;main.c: 598: int result;
  2759                           ;main.c: 601: switch(ADCnumber)
  2760  0032CC  D009               	goto	l1010
  2761  0032CE                     l1000:
  2762  0032CE  0E01               	movlw	1
  2763  0032D0  D005               	goto	L21
  2764  0032D2                     l1002:
  2765  0032D2  0E05               	movlw	5
  2766  0032D4  D003               	goto	L21
  2767  0032D6                     l1004:
  2768  0032D6  0E09               	movlw	9
  2769  0032D8  D001               	goto	L21
  2770  0032DA                     l1006:
  2771  0032DA  0E0D               	movlw	13
  2772  0032DC                     L21:
  2773  0032DC  6EC2               	movwf	4034,c	;volatile
  2774                           
  2775                           ;main.c: 610: break;
  2776  0032DE  D00D               	goto	l1012
  2777  0032E0                     l1010:
  2778  0032E0  5005               	movf	readMyADC@ADCnumber,w,c
  2779                           
  2780                           ; Switch size 1, requested type "space"
  2781                           ; Number of cases is 4, Range of values is 0 to 3
  2782                           ; switch strategies available:
  2783                           ; Name         Instructions Cycles
  2784                           ; simple_byte           13     7 (average)
  2785                           ;	Chosen strategy is simple_byte
  2786  0032E2  0A00               	xorlw	0	; case 0
  2787  0032E4  B4D8               	btfsc	status,2,c
  2788  0032E6  D7F3               	goto	l1000
  2789  0032E8  0A01               	xorlw	1	; case 1
  2790  0032EA  B4D8               	btfsc	status,2,c
  2791  0032EC  D7F2               	goto	l1002
  2792  0032EE  0A03               	xorlw	3	; case 2
  2793  0032F0  B4D8               	btfsc	status,2,c
  2794  0032F2  D7F1               	goto	l1004
  2795  0032F4  0A01               	xorlw	1	; case 3
  2796  0032F6  B4D8               	btfsc	status,2,c
  2797  0032F8  D7F0               	goto	l1006
  2798  0032FA                     l1012:
  2799                           
  2800                           ;main.c: 614: ADCON0 |= 0x02;
  2801  0032FA  82C2               	bsf	4034,1,c	;volatile
  2802  0032FC                     l219:
  2803  0032FC  B2C2               	btfsc	4034,1,c	;volatile
  2804  0032FE  D7FE               	goto	l219
  2805                           
  2806                           ;main.c: 620: result = ADRESL;
  2807  003300  CFC3 F003          	movff	4035,readMyADC@result	;volatile
  2808  003304  6A04               	clrf	readMyADC@result+1,c
  2809                           
  2810                           ;main.c: 621: result += (ADRESH << 8);
  2811  003306  50C4               	movf	4036,w,c	;volatile
  2812  003308  2604               	addwf	readMyADC@result+1,f,c
  2813                           
  2814                           ;main.c: 623: return result;
  2815  00330A  C003  F001         	movff	readMyADC@result,?_readMyADC
  2816  00330E  C004  F002         	movff	readMyADC@result+1,?_readMyADC+1
  2817  003312  0012               	return	
  2818  003314                     __end_of_readMyADC:
  2819                           	opt stack 0
  2820                           tblptru	equ	0xFF8
  2821                           prodl	equ	0xFF3
  2822                           intcon	equ	0xFF2
  2823                           postinc0	equ	0xFEE
  2824                           wreg	equ	0xFE8
  2825                           status	equ	0xFD8
  2826                           
  2827 ;; *************** function ___aldiv *****************
  2828 ;; Defined at:
  2829 ;;		line 8 in file "/opt/microchip/xc8/v1.30/sources/common/aldiv.c"
  2830 ;; Parameters:    Size  Location     Type
  2831 ;;  dividend        4    0[COMRAM] long 
  2832 ;;  divisor         4    4[COMRAM] long 
  2833 ;; Auto vars:     Size  Location     Type
  2834 ;;  quotient        4   11[COMRAM] long 
  2835 ;;  sign            1   10[COMRAM] unsigned char 
  2836 ;;  counter         1    9[COMRAM] unsigned char 
  2837 ;; Return value:  Size  Location     Type
  2838 ;;                  4    0[COMRAM] long 
  2839 ;; Registers used:
  2840 ;;		wreg, status,2, status,0
  2841 ;; Tracked objects:
  2842 ;;		On entry : 0/0
  2843 ;;		On exit  : 0/0
  2844 ;;		Unchanged: 0/0
  2845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2846 ;;      Params:         8       0       0       0       0
  2847 ;;      Locals:         6       0       0       0       0
  2848 ;;      Temps:          1       0       0       0       0
  2849 ;;      Totals:        15       0       0       0       0
  2850 ;;Total ram usage:       15 bytes
  2851 ;; Hardware stack levels used:    1
  2852 ;; This function calls:
  2853 ;;		Nothing
  2854 ;; This function is called by:
  2855 ;;		_main
  2856 ;; This function uses a non-reentrant model
  2857 ;;
  2858                           
  2859                           	psect	text4
  2860  003314                     __ptext4:
  2861                           	opt stack 0
  2862  003314                     ___aldiv:
  2863                           	opt stack 30
  2864                           
  2865                           ;incstack = 0
  2866  003314  6E09               	movwf	??___aldiv& (0+255),c
  2867  003316  0E00               	movlw	0
  2868  003318  6E0B               	movwf	___aldiv@sign,c
  2869  00331A  5009               	movf	??___aldiv& (0+255),w,c
  2870  00331C  5008               	movf	___aldiv@divisor+3,w,c
  2871  00331E  0A80               	xorlw	128
  2872  003320  0F80               	addlw	128
  2873  003322  E108               	bnz	u425
  2874  003324  0E00               	movlw	0
  2875  003326  5C07               	subwf	___aldiv@divisor+2,w,c
  2876  003328  E105               	bnz	u425
  2877  00332A  0E00               	movlw	0
  2878  00332C  5C06               	subwf	___aldiv@divisor+1,w,c
  2879  00332E  E102               	bnz	u425
  2880  003330  0E00               	movlw	0
  2881  003332  5C05               	subwf	___aldiv@divisor,w,c
  2882  003334                     u425:
  2883  003334  B0D8               	btfsc	status,0,c
  2884  003336  D00C               	goto	l1242
  2885  003338  1E08               	comf	___aldiv@divisor+3,f,c
  2886  00333A  1E07               	comf	___aldiv@divisor+2,f,c
  2887  00333C  1E06               	comf	___aldiv@divisor+1,f,c
  2888  00333E  6C05               	negf	___aldiv@divisor,c
  2889  003340  0E00               	movlw	0
  2890  003342  2206               	addwfc	___aldiv@divisor+1,f,c
  2891  003344  2207               	addwfc	___aldiv@divisor+2,f,c
  2892  003346  2208               	addwfc	___aldiv@divisor+3,f,c
  2893  003348  6E09               	movwf	??___aldiv& (0+255),c
  2894  00334A  0E01               	movlw	1
  2895  00334C  6E0B               	movwf	___aldiv@sign,c
  2896  00334E  5009               	movf	??___aldiv& (0+255),w,c
  2897  003350                     l1242:
  2898  003350  5004               	movf	___aldiv@dividend+3,w,c
  2899  003352  0A80               	xorlw	128
  2900  003354  0F80               	addlw	128
  2901  003356  E108               	bnz	u435
  2902  003358  0E00               	movlw	0
  2903  00335A  5C03               	subwf	___aldiv@dividend+2,w,c
  2904  00335C  E105               	bnz	u435
  2905  00335E  0E00               	movlw	0
  2906  003360  5C02               	subwf	___aldiv@dividend+1,w,c
  2907  003362  E102               	bnz	u435
  2908  003364  0E00               	movlw	0
  2909  003366  5C01               	subwf	___aldiv@dividend,w,c
  2910  003368                     u435:
  2911  003368  B0D8               	btfsc	status,0,c
  2912  00336A  D00A               	goto	l1248
  2913  00336C  1E04               	comf	___aldiv@dividend+3,f,c
  2914  00336E  1E03               	comf	___aldiv@dividend+2,f,c
  2915  003370  1E02               	comf	___aldiv@dividend+1,f,c
  2916  003372  6C01               	negf	___aldiv@dividend,c
  2917  003374  0E00               	movlw	0
  2918  003376  2202               	addwfc	___aldiv@dividend+1,f,c
  2919  003378  2203               	addwfc	___aldiv@dividend+2,f,c
  2920  00337A  2204               	addwfc	___aldiv@dividend+3,f,c
  2921  00337C  0E01               	movlw	1
  2922  00337E  1A0B               	xorwf	___aldiv@sign,f,c
  2923  003380                     l1248:
  2924  003380  0E00               	movlw	0
  2925  003382  6E0C               	movwf	___aldiv@quotient,c
  2926  003384  0E00               	movlw	0
  2927  003386  6E0D               	movwf	___aldiv@quotient+1,c
  2928  003388  0E00               	movlw	0
  2929  00338A  6E0E               	movwf	___aldiv@quotient+2,c
  2930  00338C  0E00               	movlw	0
  2931  00338E  6E0F               	movwf	___aldiv@quotient+3,c
  2932  003390  5008               	movf	___aldiv@divisor+3,w,c
  2933  003392  1005               	iorwf	___aldiv@divisor,w,c
  2934  003394  1006               	iorwf	___aldiv@divisor+1,w,c
  2935  003396  1007               	iorwf	___aldiv@divisor+2,w,c
  2936  003398  B4D8               	btfsc	status,2,c
  2937  00339A  D02C               	goto	l1270
  2938  00339C  6E09               	movwf	??___aldiv& (0+255),c
  2939  00339E  0E01               	movlw	1
  2940  0033A0  6E0A               	movwf	___aldiv@counter,c
  2941  0033A2  5009               	movf	??___aldiv& (0+255),w,c
  2942  0033A4  D006               	goto	l1256
  2943  0033A6                     l1254:
  2944  0033A6  90D8               	bcf	status,0,c
  2945  0033A8  3605               	rlcf	___aldiv@divisor,f,c
  2946  0033AA  3606               	rlcf	___aldiv@divisor+1,f,c
  2947  0033AC  3607               	rlcf	___aldiv@divisor+2,f,c
  2948  0033AE  3608               	rlcf	___aldiv@divisor+3,f,c
  2949  0033B0  2A0A               	incf	___aldiv@counter,f,c
  2950  0033B2                     l1256:
  2951  0033B2  AE08               	btfss	___aldiv@divisor+3,7,c
  2952  0033B4  D7F8               	goto	l1254
  2953  0033B6                     l1258:
  2954  0033B6  90D8               	bcf	status,0,c
  2955  0033B8  360C               	rlcf	___aldiv@quotient,f,c
  2956  0033BA  360D               	rlcf	___aldiv@quotient+1,f,c
  2957  0033BC  360E               	rlcf	___aldiv@quotient+2,f,c
  2958  0033BE  360F               	rlcf	___aldiv@quotient+3,f,c
  2959  0033C0  5005               	movf	___aldiv@divisor,w,c
  2960  0033C2  5C01               	subwf	___aldiv@dividend,w,c
  2961  0033C4  5006               	movf	___aldiv@divisor+1,w,c
  2962  0033C6  5802               	subwfb	___aldiv@dividend+1,w,c
  2963  0033C8  5007               	movf	___aldiv@divisor+2,w,c
  2964  0033CA  5803               	subwfb	___aldiv@dividend+2,w,c
  2965  0033CC  5008               	movf	___aldiv@divisor+3,w,c
  2966  0033CE  5804               	subwfb	___aldiv@dividend+3,w,c
  2967  0033D0  A0D8               	btfss	status,0,c
  2968  0033D2  D009               	goto	l1266
  2969  0033D4  5005               	movf	___aldiv@divisor,w,c
  2970  0033D6  5E01               	subwf	___aldiv@dividend,f,c
  2971  0033D8  5006               	movf	___aldiv@divisor+1,w,c
  2972  0033DA  5A02               	subwfb	___aldiv@dividend+1,f,c
  2973  0033DC  5007               	movf	___aldiv@divisor+2,w,c
  2974  0033DE  5A03               	subwfb	___aldiv@dividend+2,f,c
  2975  0033E0  5008               	movf	___aldiv@divisor+3,w,c
  2976  0033E2  5A04               	subwfb	___aldiv@dividend+3,f,c
  2977  0033E4  800C               	bsf	___aldiv@quotient,0,c
  2978  0033E6                     l1266:
  2979  0033E6  90D8               	bcf	status,0,c
  2980  0033E8  3208               	rrcf	___aldiv@divisor+3,f,c
  2981  0033EA  3207               	rrcf	___aldiv@divisor+2,f,c
  2982  0033EC  3206               	rrcf	___aldiv@divisor+1,f,c
  2983  0033EE  3205               	rrcf	___aldiv@divisor,f,c
  2984  0033F0  2E0A               	decfsz	___aldiv@counter,f,c
  2985  0033F2  D7E1               	goto	l1258
  2986  0033F4                     l1270:
  2987  0033F4  500B               	movf	___aldiv@sign,w,c
  2988  0033F6  B4D8               	btfsc	status,2,c
  2989  0033F8  D008               	goto	l1274
  2990  0033FA  1E0F               	comf	___aldiv@quotient+3,f,c
  2991  0033FC  1E0E               	comf	___aldiv@quotient+2,f,c
  2992  0033FE  1E0D               	comf	___aldiv@quotient+1,f,c
  2993  003400  6C0C               	negf	___aldiv@quotient,c
  2994  003402  0E00               	movlw	0
  2995  003404  220D               	addwfc	___aldiv@quotient+1,f,c
  2996  003406  220E               	addwfc	___aldiv@quotient+2,f,c
  2997  003408  220F               	addwfc	___aldiv@quotient+3,f,c
  2998  00340A                     l1274:
  2999  00340A  C00C  F001         	movff	___aldiv@quotient,?___aldiv
  3000  00340E  C00D  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  3001  003412  C00E  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  3002  003416  C00F  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  3003  00341A  0012               	return	
  3004  00341C                     __end_of___aldiv:
  3005                           	opt stack 0
  3006  0000                     tblptru	equ	0xFF8
  3007                           prodl	equ	0xFF3
  3008                           intcon	equ	0xFF2
  3009                           postinc0	equ	0xFEE
  3010                           wreg	equ	0xFE8
  3011                           status	equ	0xFD8
  3012                           tblptru	equ	0xFF8
  3013                           prodl	equ	0xFF3
  3014                           intcon	equ	0xFF2
  3015                           postinc0	equ	0xFEE
  3016                           wreg	equ	0xFE8
  3017                           status	equ	0xFD8
  3018                           
  3019                           	psect	rparam
  3020  0000                     tblptru	equ	0xFF8
  3021                           prodl	equ	0xFF3
  3022                           intcon	equ	0xFF2
  3023                           postinc0	equ	0xFEE
  3024                           wreg	equ	0xFE8
  3025                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         133
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     64      69
    BANK0           128      0     128
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___aldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                49    49      0    2528
                                             15 COMRAM    49    49      0
                            ___aldiv
                          _readMyADC
                       _setGainLevel
                           _setupSPI
 ---------------------------------------------------------------------------------
 (1) _setupSPI                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setGainLevel                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _readMyADC                                            5     3      2      30
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             15     7      8     263
                                              0 COMRAM    15     7      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___aldiv
   _readMyADC
   _setGainLevel
   _setupSPI

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0      80       4      100.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     40      45       1       54.3%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C5      11        0.0%
DATA                 0      0      C5      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Fri Sep  5 06:30:05 2014

                     l45 3540                       l54 367A                       l80 3840  
                     l68 376E                       l79 383E             __CFG_CP0$OFF 000000  
                    l200 3F84                      l202 3F9E                      l204 3FB8  
                    l302 32C0                      l154 3CC0                      l219 32FC  
                    l181 3E4A                      l183 3E64                      l194 3F36  
                    l179 3E30                      l196 3F50                      l198 3F6A  
                    l299 32B6                      u425 3334                      u435 3368  
                    u815 389C                      u855 38F0                      u785 3852  
                    u885 393C                      wreg 000FE8             __CFG_IESO$ON 000000  
           __CFG_FOSC$EC 000000              main@highPWM 002F              main@average 0027  
                   l1000 32CE                     l1002 32D2                     l1010 32E0  
                   l1004 32D6                     l1012 32FA                     l1006 32DA  
                   l1242 3350                     l1410 36B0                     l1420 36E6  
                   l1316 3520                     l1254 33A6                     l1270 33F4  
                   l1510 387C                     l1430 370E                     l1414 36C8  
                   l1406 3694                     l1326 354A                     l1256 33B2  
                   l1248 3380                     l1512 3884                     l1440 373E  
                   l1274 340A                     l1266 33E6                     l1258 33B6  
                   l1514 388C                     l1442 3746                     l1700 3BB6  
                   l1532 38DE                     l1524 38C2                     l1508 3878  
                   l1452 3770                     l1428 3706                     l1436 3724  
                   l1542 3916                     l1526 38C6                     l1470 37BC  
                   l1800 3D58                     l1712 3BE6                     l1720 3C08  
                   l1632 3A9A                     l1640 3ABC                     l1560 3966  
                   l1544 391A                     l1528 38CE                     l1456 377C  
                   l1448 3766                     l1706 3BCE                     l1626 3A82  
                   l1618 3A66                     l1562 396E                     l1546 3922  
                   l1466 37A8                     l1458 3784                     l1900 3F52  
                   l1804 3D6A                     l1652 3AEA                     l1660 3B0C  
                   l1548 392A                     l1492 3822                     l1388 35CC  
                   l1814 3D96                     l1718 3C00                     l1646 3AD2  
                   l1638 3AB4                     l1566 397C                     l1558 3962  
                   l1590 39E2                     l1494 382A                     l1912 3FA0  
                   l1904 3F6C                     l1808 3D7C                     l1672 3B3C  
                   l1680 3B5E                     l1744 3C6E                     l1922 3FD6  
                   l1850 3E32                     l1818 3DA6                     l1842 3E0A  
                   l1666 3B24                     l1658 3B04                     l1916 3FBA  
                   l1908 3F86                     l1756 3CAA                     l1692 3B92  
                   l1854 3E4C                     l1846 3E18                     l1758 3CAE  
                   l1694 3B9A                     l1686 3B78                     l1678 3B56  
                   l1872 3EAA                     l1880 3ED6                     l1688 3B80  
                   l1864 3E82                     l1858 3E66                     l1794 3D40  
                   l1786 3D24                     l1698 3BAE                     l1892 3F1E  
                   l1884 3EEE                     l1876 3EC0                     l1896 3F38  
                   l1888 3F06                     u1275 3C84            __CFG_FCMEN$ON 000000  
                   _main 341C                     prodl 000FF3                     start 0000  
          __CFG_FOSC2$ON 000000          __end_of___aldiv 341C                    ?_main 0001  
           main@midLevel 0018                    _T0CON 000FD5                    _TMR0H 000FD7  
                  _TMR0L 000FD6                    _PORTA 000F80                    _PORTB 000F81  
                  _PORTC 000F82                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISC 000F94                    _SSPIF 007CF3             main@lowLevel 001A  
                  _randf 0045                    _randx 0041                    status 000FD8  
        __initialization 3282             __end_of_main 3FF8       main@sequenceNumber 003E  
                 ??_main 0010            __activetblptr 000002            main@highLevel 0024  
          main@mainLevel 001C                   _ADCON0 000FC2                   _ADCON1 000FC1  
                 _ADCON2 000FC0                   _ADRESH 000FC4                   _ADRESL 000FC3  
                 _GODONE 007E11           __CFG_WDTEN$OFF 000000                   _TMR0IF 007F92  
                 _SSPBUF 000FC9           __CFG_XINST$OFF 000000                ??___aldiv 0009  
         __CFG_STVREN$ON 000000                   clear_0 3288     main@currentGainLevel 002B  
       __end_of_setupSPI 3282                   tblptru 000FF8            main@soundFlag 0026  
             __accesstop 0080  __end_of__initialization 3298           __pcstackCOMRAM 0001  
          ?_setGainLevel 0001      main@sequenceRepeats 0031        main@patternNumber 0038  
             __pbssBANK0 0080       __size_of_readMyADC 004C           main@brightness 0039  
         ??_setGainLevel 0001       readMyADC@ADCnumber 0005                  _SSP1BUF 000FC9  
                _SSPCON1 000FC6                  _SSPSTAT 000FC7                  __Hparam 0000  
                __Lparam 0000                ?_setupSPI 0001                  ___aldiv 3314  
                __pcinit 3282                  __ramtop 0400                  __ptext0 341C  
                __ptext1 3270                  __ptext2 32A2                  __ptext3 32C8  
                __ptext4 3314        __end_of_readMyADC 3314         ___aldiv@dividend 0001  
   end_of_initialization 3298            __Lmediumconst 0000         _led_strip_colors 0080  
             ??_setupSPI 0001         ___aldiv@quotient 000C           main@stepNumber 003F  
                postinc0 000FEE                _PORTBbits 000F81                _TRISCbits 000F94  
   __end_of_setGainLevel 32C8               main@midPWM 0036          main@fadeCounter 0020  
             main@lowPWM 002D      start_initialization 3282          main@clapCounter 0029  
            __pbssCOMRAM 0041      __CFG_CCP2MX$DEFAULT 000000                 ?___aldiv 0001  
      __size_of_setupSPI 0012    __size_of_setGainLevel 0026                _readMyADC 32C8  
        ___aldiv@divisor 0005          ___aldiv@counter 000A                 _PIR1bits 000F9E  
       __CFG_WDTPS$32768 000000                 _SSP1CON1 000FC6             _setGainLevel 32A2  
        main@currentStep 003A                main@total 0014               ?_readMyADC 0001  
               __Hrparam 0000                 __Lrparam 0000         __size_of___aldiv 0108  
        main@sampleCount 001E          readMyADC@result 0003          main@tickCounter 0033  
           _SSP1CON1bits 000FC6            __size_of_main 0BDC                 _setupSPI 3270  
               main@mode 0035              ??_readMyADC 0003   main@soundDetectedCount 0022  
  setGainLevel@gainLevel 0001             ___aldiv@sign 000B             main@PWMcount 003C  
