

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Tue May  6 04:26:17 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F24J10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    23  0000                     _ADCON1	set	4033
    24  0000                     _LATA	set	3977
    25  0000                     _LATB	set	3978
    26  0000                     _LATC	set	3979
    27  0000                     _PIR1bits	set	3998
    28  0000                     _PORTB	set	3969
    29  0000                     _PORTC	set	3970
    30  0000                     _SSP1BUF	set	4041
    31  0000                     _SSP1CON1	set	4038
    32  0000                     _SSP1CON1bits	set	4038
    33  0000                     _SSPCON1	set	4038
    34  0000                     _SSPSTAT	set	4039
    35  0000                     _TRISB	set	3987
    36  0000                     _TRISCbits	set	3988
    37                           
    38                           ; 0 bytes @ 0x27
    39 ;;
    40 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    41 ;;
    42 ;; *************** function _main *****************
    43 ;; Defined at:
    44 ;;		line 14 in file "main.c"
    45 ;; Parameters:    Size  Location     Type
    46 ;;  argc            2   34[COMRAM] int 
    47 ;;  argv            3   36[COMRAM] PTR PTR unsigned char 
    48 ;; Auto vars:     Size  Location     Type
    49 ;;		None
    50 ;; Return value:  Size  Location     Type
    51 ;;                  2   34[COMRAM] int 
    52 ;; Registers used:
    53 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
    54 ;; Tracked objects:
    55 ;;		On entry : 0/0
    56 ;;		On exit  : 0/0
    57 ;;		Unchanged: 0/0
    58 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
    59 ;;      Params:         5       0       0       0       0
    60 ;;      Locals:         0       0       0       0       0
    61 ;;      Temps:          0       0       0       0       0
    62 ;;      Totals:         5       0       0       0       0
    63 ;;Total ram usage:        5 bytes
    64 ;; Hardware stack levels required when called:    4
    65 ;; This function calls:
    66 ;;		_demoLEDs
    67 ;;		_setupSPI
    68 ;; This function is called by:
    69 ;;		Startup code after reset
    70 ;; This function uses a non-reentrant model
    71 ;;
    72                           
    73                           	psect	text0
    74  0037C8                     __ptext0:
    75                           	opt stack 0
    76  0037C8                     _main:
    77                           	opt stack 27
    78                           
    79                           ;main.c: 17: LATA = 0x00;
    80                           
    81                           ;incstack = 0
    82  0037C8  0E00               	movlw	0
    83  0037CA  6E89               	movwf	3977,c	;volatile
    84                           
    85                           ;main.c: 18: LATB = 0x00;
    86  0037CC  0E00               	movlw	0
    87  0037CE  6E8A               	movwf	3978,c	;volatile
    88                           
    89                           ;main.c: 19: LATC = 0x00;
    90  0037D0  0E00               	movlw	0
    91  0037D2  6E8B               	movwf	3979,c	;volatile
    92                           
    93                           ;main.c: 22: ADCON1 = 0x0F;
    94  0037D4  0E0F               	movlw	15
    95  0037D6  6EC1               	movwf	4033,c	;volatile
    96                           
    97                           ;main.c: 25: TRISB = 0x00;
    98  0037D8  0E00               	movlw	0
    99  0037DA  6E93               	movwf	3987,c	;volatile
   100                           
   101                           ;main.c: 29: setupSPI();
   102  0037DC  ECB6  F01B         	call	_setupSPI	;wreg free
   103  0037E0                     l1085:
   104                           
   105                           ;main.c: 32: {
   106                           ;main.c: 37: demoLEDs();
   107  0037E0  ECB0  F01D         	call	_demoLEDs	;wreg free
   108  0037E4  D7FD               	goto	l1085
   109  0037E6                     __end_of_main:
   110                           	opt stack 0
   111                           
   112                           	psect	cinit
   113  0037AC                     __pcinit:
   114                           	opt stack 0
   115  0037AC                     start_initialization:
   116                           	opt stack 0
   117  0037AC                     __initialization:
   118                           	opt stack 0
   119                           
   120                           ; Clear objects allocated to BANK0 (128 bytes)
   121  0037AC  EE00  F080         	lfsr	0,__pbssBANK0
   122  0037B0  0E80               	movlw	128
   123  0037B2                     clear_0:
   124  0037B2  6AEE               	clrf	postinc0,c
   125  0037B4  06E8               	decf	wreg,f,c
   126  0037B6  E1FD               	bnz	clear_0
   127                           
   128                           ; Clear objects allocated to COMRAM (5 bytes)
   129  0037B8  6A2C               	clrf	(__pbssCOMRAM+4)& (0+255),c
   130  0037BA  6A2B               	clrf	(__pbssCOMRAM+3)& (0+255),c
   131  0037BC  6A2A               	clrf	(__pbssCOMRAM+2)& (0+255),c
   132  0037BE  6A29               	clrf	(__pbssCOMRAM+1)& (0+255),c
   133  0037C0  6A28               	clrf	__pbssCOMRAM& (0+255),c
   134  0037C2                     end_of_initialization:
   135                           	opt stack 0
   136  0037C2                     __end_of__initialization:
   137                           	opt stack 0
   138  0037C2  0100               	movlb	0
   139  0037C4  EFE4  F01B         	goto	_main	;jump to C main() function
   140                           postinc0	equ	0xFEE
   141                           wreg	equ	0xFE8
   142                           
   143                           	psect	bssCOMRAM
   144  000028                     __pbssCOMRAM:
   145                           	opt stack 0
   146  000028                     _randx:
   147                           	opt stack 0
   148  000028                     	ds	4
   149  00002C                     _randf:
   150                           	opt stack 0
   151  00002C                     	ds	1
   152                           postinc0	equ	0xFEE
   153                           wreg	equ	0xFE8
   154                           
   155                           	psect	bssBANK0
   156  000080                     __pbssBANK0:
   157                           	opt stack 0
   158  000080                     _led_strip_colors:
   159                           	opt stack 0
   160  000080                     	ds	128
   161                           postinc0	equ	0xFEE
   162                           wreg	equ	0xFE8
   163                           
   164                           	psect	cstackCOMRAM
   165  000001                     __pcstackCOMRAM:
   166                           	opt stack 0
   167  000001                     ?___lwmod:
   168                           	opt stack 0
   169  000001                     ?___wmul:
   170                           	opt stack 0
   171  000001                     ?___lmul:
   172                           	opt stack 0
   173  000001                     WriteSPI1@TempVar:
   174                           	opt stack 0
   175  000001                     ___lwmod@dividend:
   176                           	opt stack 0
   177  000001                     srand@x:
   178                           	opt stack 0
   179  000001                     ___wmul@multiplier:
   180                           	opt stack 0
   181  000001                     ___lmul@multiplier:
   182                           	opt stack 0
   183                           
   184                           ; 4 bytes @ 0x0
   185  000001                     	ds	1
   186  000002                     WriteSPI1@data_out:
   187                           	opt stack 0
   188                           
   189                           ; 1 bytes @ 0x1
   190  000002                     	ds	1
   191  000003                     ??_srand:
   192  000003                     ___lwmod@divisor:
   193                           	opt stack 0
   194  000003                     ___wmul@multiplicand:
   195                           	opt stack 0
   196                           
   197                           ; 2 bytes @ 0x2
   198  000003                     	ds	2
   199  000005                     ??___lwmod:
   200  000005                     ___wmul@product:
   201                           	opt stack 0
   202  000005                     ___lmul@multiplicand:
   203                           	opt stack 0
   204                           
   205                           ; 4 bytes @ 0x4
   206  000005                     	ds	1
   207  000006                     ___lwmod@counter:
   208                           	opt stack 0
   209                           
   210                           ; 1 bytes @ 0x5
   211  000006                     	ds	1
   212  000007                     write_latch@len:
   213                           	opt stack 0
   214                           
   215                           ; 2 bytes @ 0x6
   216  000007                     	ds	2
   217  000009                     ??_write_latch:
   218  000009                     ___lmul@product:
   219                           	opt stack 0
   220                           
   221                           ; 4 bytes @ 0x8
   222  000009                     	ds	3
   223  00000C                     ??_send_frame:
   224                           
   225                           ; 0 bytes @ 0xB
   226  00000C                     	ds	1
   227  00000D                     ?_rand:
   228                           	opt stack 0
   229                           
   230                           ; 2 bytes @ 0xC
   231  00000D                     	ds	2
   232  00000F                     ??_rand:
   233                           
   234                           ; 0 bytes @ 0xE
   235  00000F                     	ds	3
   236  000012                     send_frame@red:
   237                           	opt stack 0
   238                           
   239                           ; 1 bytes @ 0x11
   240  000012                     	ds	1
   241  000013                     ??_addRandom:
   242  000013                     send_frame@green:
   243                           	opt stack 0
   244                           
   245                           ; 1 bytes @ 0x12
   246  000013                     	ds	1
   247  000014                     send_frame@blue:
   248                           	opt stack 0
   249                           
   250                           ; 1 bytes @ 0x13
   251  000014                     	ds	1
   252  000015                     send_frame@i:
   253                           	opt stack 0
   254                           
   255                           ; 2 bytes @ 0x14
   256  000015                     	ds	4
   257  000019                     addRandom@new_color:
   258                           	opt stack 0
   259                           
   260                           ; 4 bytes @ 0x18
   261  000019                     	ds	4
   262  00001D                     addRandom@x:
   263                           	opt stack 0
   264                           
   265                           ; 2 bytes @ 0x1C
   266  00001D                     	ds	2
   267  00001F                     ??_demoLEDs:
   268                           
   269                           ; 0 bytes @ 0x1E
   270  00001F                     	ds	2
   271  000021                     demoLEDs@i:
   272                           	opt stack 0
   273                           
   274                           ; 2 bytes @ 0x20
   275  000021                     	ds	2
   276  000023                     
   277                           ; 2 bytes @ 0x22
   278  000023                     	ds	2
   279  000025                     
   280                           ; 3 bytes @ 0x24
   281  000025                     	ds	3
   282  000028                     postinc0	equ	0xFEE
   283                           wreg	equ	0xFE8
   284                           
   285 ;; *************** function _setupSPI *****************
   286 ;; Defined at:
   287 ;;		line 3 in file "spi.c"
   288 ;; Parameters:    Size  Location     Type
   289 ;;		None
   290 ;; Auto vars:     Size  Location     Type
   291 ;;		None
   292 ;; Return value:  Size  Location     Type
   293 ;;		None               void
   294 ;; Registers used:
   295 ;;		wreg, status,2
   296 ;; Tracked objects:
   297 ;;		On entry : 0/0
   298 ;;		On exit  : 0/0
   299 ;;		Unchanged: 0/0
   300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   301 ;;      Params:         0       0       0       0       0
   302 ;;      Locals:         0       0       0       0       0
   303 ;;      Temps:          0       0       0       0       0
   304 ;;      Totals:         0       0       0       0       0
   305 ;;Total ram usage:        0 bytes
   306 ;; Hardware stack levels used:    1
   307 ;; This function calls:
   308 ;;		Nothing
   309 ;; This function is called by:
   310 ;;		_main
   311 ;; This function uses a non-reentrant model
   312 ;;
   313                           
   314                           	psect	text1
   315  00376C                     __ptext1:
   316                           	opt stack 0
   317  00376C                     _setupSPI:
   318                           	opt stack 30
   319                           
   320                           ;spi.c: 6: TRISCbits.TRISC5= 0;
   321                           
   322                           ;incstack = 0
   323  00376C  9A94               	bcf	3988,5,c	;volatile
   324                           
   325                           ;spi.c: 7: TRISCbits.TRISC4= 1;
   326  00376E  8894               	bsf	3988,4,c	;volatile
   327                           
   328                           ;spi.c: 8: TRISCbits.TRISC3= 0;
   329  003770  9694               	bcf	3988,3,c	;volatile
   330                           
   331                           ;spi.c: 11: SSPSTAT = 0x40;
   332  003772  0E40               	movlw	64
   333  003774  6EC7               	movwf	4039,c	;volatile
   334                           
   335                           ;spi.c: 12: SSPCON1 = 0x20;
   336  003776  0E20               	movlw	32
   337  003778  6EC6               	movwf	4038,c	;volatile
   338  00377A  0012               	return	
   339  00377C                     __end_of_setupSPI:
   340                           	opt stack 0
   341                           postinc0	equ	0xFEE
   342                           wreg	equ	0xFE8
   343                           
   344 ;; *************** function _demoLEDs *****************
   345 ;; Defined at:
   346 ;;		line 64 in file "led.c"
   347 ;; Parameters:    Size  Location     Type
   348 ;;		None
   349 ;; Auto vars:     Size  Location     Type
   350 ;;  i               2   32[COMRAM] unsigned int 
   351 ;; Return value:  Size  Location     Type
   352 ;;		None               void
   353 ;; Registers used:
   354 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   355 ;; Tracked objects:
   356 ;;		On entry : 0/0
   357 ;;		On exit  : 0/0
   358 ;;		Unchanged: 0/0
   359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   360 ;;      Params:         0       0       0       0       0
   361 ;;      Locals:         2       0       0       0       0
   362 ;;      Temps:          2       0       0       0       0
   363 ;;      Totals:         4       0       0       0       0
   364 ;;Total ram usage:        4 bytes
   365 ;; Hardware stack levels used:    1
   366 ;; Hardware stack levels required when called:    3
   367 ;; This function calls:
   368 ;;		___lwmod
   369 ;;		_addRandom
   370 ;;		_send_frame
   371 ;; This function is called by:
   372 ;;		_main
   373 ;; This function uses a non-reentrant model
   374 ;;
   375                           
   376                           	psect	text2
   377  003B60                     __ptext2:
   378                           	opt stack 0
   379  003B60                     _demoLEDs:
   380                           	opt stack 27
   381                           
   382                           ;led.c: 66: uint16_t i;
   383                           ;led.c: 68: for(i = 0 ; i < 400 ; i++)
   384                           
   385                           ;incstack = 0
   386  003B60  0E00               	movlw	0
   387  003B62  6E22               	movwf	demoLEDs@i+1,c
   388  003B64  0E00               	movlw	0
   389  003B66  6E21               	movwf	demoLEDs@i,c
   390  003B68  0E90               	movlw	144
   391  003B6A  5C21               	subwf	demoLEDs@i,w,c
   392  003B6C  0E01               	movlw	1
   393  003B6E  5822               	subwfb	demoLEDs@i+1,w,c
   394  003B70  B0D8               	btfsc	status,0,c
   395  003B72  D00B               	goto	l927
   396                           
   397                           ;led.c: 69: _delay((unsigned long)((5)*(20000000ULL/4000.0)));
   398  003B74  0E21               	movlw	33
   399  003B76  6E1F               	movwf	??_demoLEDs& (0+255),c
   400  003B78  0E76               	movlw	118
   401  003B7A                     u517:
   402  003B7A  2EE8               	decfsz	wreg,f,c
   403  003B7C  D7FE               	goto	u517
   404  003B7E  2E1F               	decfsz	??_demoLEDs& (0+255),f,c
   405  003B80  D7FC               	goto	u517
   406  003B82  D000               	nop2	
   407  003B84  4A21               	infsnz	demoLEDs@i,f,c
   408  003B86  2A22               	incf	demoLEDs@i+1,f,c
   409  003B88  D7EF               	goto	L1
   410  003B8A                     l927:
   411                           
   412                           ;led.c: 70: for(i = 0 ; i < 32 ; i++) {led_strip_colors[i] = 0;}
   413  003B8A  0E00               	movlw	0
   414  003B8C  6E22               	movwf	demoLEDs@i+1,c
   415  003B8E  0E00               	movlw	0
   416  003B90  6E21               	movwf	demoLEDs@i,c
   417  003B92  0E20               	movlw	32
   418  003B94  5C21               	subwf	demoLEDs@i,w,c
   419  003B96  0E00               	movlw	0
   420  003B98  5822               	subwfb	demoLEDs@i+1,w,c
   421  003B9A  B0D8               	btfsc	status,0,c
   422  003B9C  D01F               	goto	l939
   423  003B9E  C021  F01F         	movff	demoLEDs@i,??_demoLEDs
   424  003BA2  C022  F020         	movff	demoLEDs@i+1,??_demoLEDs+1
   425  003BA6  90D8               	bcf	status,0,c
   426  003BA8  361F               	rlcf	??_demoLEDs,f,c
   427  003BAA  3620               	rlcf	??_demoLEDs+1,f,c
   428  003BAC  90D8               	bcf	status,0,c
   429  003BAE  361F               	rlcf	??_demoLEDs,f,c
   430  003BB0  3620               	rlcf	??_demoLEDs+1,f,c
   431  003BB2  0100               	movlb	0	; () banked
   432  003BB4  0E80               	movlw	low _led_strip_colors
   433  003BB6  241F               	addwf	??_demoLEDs,w,c
   434  003BB8  6ED9               	movwf	fsr2l,c
   435  003BBA  0100               	movlb	0	; () banked
   436  003BBC  0E00               	movlw	high _led_strip_colors
   437  003BBE  2020               	addwfc	??_demoLEDs+1,w,c
   438  003BC0  6EDA               	movwf	fsr2h,c
   439  003BC2  0E00               	movlw	0
   440  003BC4  6EDE               	movwf	postinc2,c
   441  003BC6  0E00               	movlw	0
   442  003BC8  6EDE               	movwf	postinc2,c
   443  003BCA  0E00               	movlw	0
   444  003BCC  6EDE               	movwf	postinc2,c
   445  003BCE  0E00               	movlw	0
   446  003BD0  6EDD               	movwf	postdec2,c
   447  003BD2  52DD               	movf	postdec2,f,c
   448  003BD4  52DD               	movf	postdec2,f,c
   449                           
   450                           ; BSR set to: 0
   451  003BD6  4A21               	infsnz	demoLEDs@i,f,c
   452  003BD8  2A22               	incf	demoLEDs@i+1,f,c
   453  003BDA  D7DB               	goto	L2
   454  003BDC                     l939:
   455                           
   456                           ;led.c: 71: send_frame();
   457  003BDC  EC34  F01D         	call	_send_frame	;wreg free
   458                           
   459                           ;led.c: 74: led_strip_colors[0] = 0xFF0000;
   460  003BE0  0E00               	movlw	0
   461  003BE2  0100               	movlb	0	; () banked
   462  003BE4  0100               	movlb	0	; () banked
   463  003BE6  6F80               	movwf	_led_strip_colors& (0+255),b
   464  003BE8  0E00               	movlw	0
   465  003BEA  0100               	movlb	0	; () banked
   466  003BEC  6F81               	movwf	(_led_strip_colors+1)& (0+255),b
   467  003BEE  0EFF               	movlw	255
   468  003BF0  0100               	movlb	0	; () banked
   469  003BF2  6F82               	movwf	(_led_strip_colors+2)& (0+255),b
   470  003BF4  0E00               	movlw	0
   471  003BF6  0100               	movlb	0	; () banked
   472  003BF8  6F83               	movwf	(_led_strip_colors+3)& (0+255),b
   473                           
   474                           ; BSR set to: 0
   475                           ;led.c: 75: led_strip_colors[1] = 0x00FF00;
   476  003BFA  0E00               	movlw	0
   477  003BFC  0100               	movlb	0	; () banked
   478  003BFE  0100               	movlb	0	; () banked
   479  003C00  6F84               	movwf	(_led_strip_colors+4)& (0+255),b
   480  003C02  0EFF               	movlw	255
   481  003C04  0100               	movlb	0	; () banked
   482  003C06  6F85               	movwf	(_led_strip_colors+5)& (0+255),b
   483  003C08  0E00               	movlw	0
   484  003C0A  0100               	movlb	0	; () banked
   485  003C0C  6F86               	movwf	(_led_strip_colors+6)& (0+255),b
   486  003C0E  0E00               	movlw	0
   487  003C10  0100               	movlb	0	; () banked
   488  003C12  6F87               	movwf	(_led_strip_colors+7)& (0+255),b
   489                           
   490                           ; BSR set to: 0
   491                           ;led.c: 76: led_strip_colors[2] = 0x0000FF;
   492  003C14  0EFF               	movlw	255
   493  003C16  0100               	movlb	0	; () banked
   494  003C18  0100               	movlb	0	; () banked
   495  003C1A  6F88               	movwf	(_led_strip_colors+8)& (0+255),b
   496  003C1C  0E00               	movlw	0
   497  003C1E  0100               	movlb	0	; () banked
   498  003C20  6F89               	movwf	(_led_strip_colors+9)& (0+255),b
   499  003C22  0E00               	movlw	0
   500  003C24  0100               	movlb	0	; () banked
   501  003C26  6F8A               	movwf	(_led_strip_colors+10)& (0+255),b
   502  003C28  0E00               	movlw	0
   503  003C2A  0100               	movlb	0	; () banked
   504  003C2C  6F8B               	movwf	(_led_strip_colors+11)& (0+255),b
   505                           
   506                           ; BSR set to: 0
   507                           ;led.c: 77: led_strip_colors[3] = 0x00FFFF;
   508  003C2E  0EFF               	movlw	255
   509  003C30  0100               	movlb	0	; () banked
   510  003C32  0100               	movlb	0	; () banked
   511  003C34  6F8C               	movwf	(_led_strip_colors+12)& (0+255),b
   512  003C36  0EFF               	movlw	255
   513  003C38  0100               	movlb	0	; () banked
   514  003C3A  6F8D               	movwf	(_led_strip_colors+13)& (0+255),b
   515  003C3C  0E00               	movlw	0
   516  003C3E  0100               	movlb	0	; () banked
   517  003C40  6F8E               	movwf	(_led_strip_colors+14)& (0+255),b
   518  003C42  0E00               	movlw	0
   519  003C44  0100               	movlb	0	; () banked
   520  003C46  6F8F               	movwf	(_led_strip_colors+15)& (0+255),b
   521                           
   522                           ; BSR set to: 0
   523                           ;led.c: 78: led_strip_colors[4] = 0xFF00FF;
   524  003C48  0EFF               	movlw	255
   525  003C4A  0100               	movlb	0	; () banked
   526  003C4C  0100               	movlb	0	; () banked
   527  003C4E  6F90               	movwf	(_led_strip_colors+16)& (0+255),b
   528  003C50  0E00               	movlw	0
   529  003C52  0100               	movlb	0	; () banked
   530  003C54  6F91               	movwf	(_led_strip_colors+17)& (0+255),b
   531  003C56  0EFF               	movlw	255
   532  003C58  0100               	movlb	0	; () banked
   533  003C5A  6F92               	movwf	(_led_strip_colors+18)& (0+255),b
   534  003C5C  0E00               	movlw	0
   535  003C5E  0100               	movlb	0	; () banked
   536  003C60  6F93               	movwf	(_led_strip_colors+19)& (0+255),b
   537                           
   538                           ; BSR set to: 0
   539                           ;led.c: 79: led_strip_colors[5] = 0xFFFF00;
   540  003C62  0E00               	movlw	0
   541  003C64  0100               	movlb	0	; () banked
   542  003C66  0100               	movlb	0	; () banked
   543  003C68  6F94               	movwf	(_led_strip_colors+20)& (0+255),b
   544  003C6A  0EFF               	movlw	255
   545  003C6C  0100               	movlb	0	; () banked
   546  003C6E  6F95               	movwf	(_led_strip_colors+21)& (0+255),b
   547  003C70  0EFF               	movlw	255
   548  003C72  0100               	movlb	0	; () banked
   549  003C74  6F96               	movwf	(_led_strip_colors+22)& (0+255),b
   550  003C76  0E00               	movlw	0
   551  003C78  0100               	movlb	0	; () banked
   552  003C7A  6F97               	movwf	(_led_strip_colors+23)& (0+255),b
   553                           
   554                           ;led.c: 80: send_frame();
   555  003C7C  EC34  F01D         	call	_send_frame	;wreg free
   556                           
   557                           ;led.c: 82: for(i = 0 ; i < 1000 ; i++)
   558  003C80  0E00               	movlw	0
   559  003C82  6E22               	movwf	demoLEDs@i+1,c
   560  003C84  0E00               	movlw	0
   561  003C86  6E21               	movwf	demoLEDs@i,c
   562  003C88  0EE8               	movlw	232
   563  003C8A  5C21               	subwf	demoLEDs@i,w,c
   564  003C8C  0E03               	movlw	3
   565  003C8E  5822               	subwfb	demoLEDs@i+1,w,c
   566  003C90  B0D8               	btfsc	status,0,c
   567  003C92  D00B               	goto	l963
   568                           
   569                           ;led.c: 83: _delay((unsigned long)((5)*(20000000ULL/4000.0)));
   570  003C94  0E21               	movlw	33
   571  003C96  6E1F               	movwf	??_demoLEDs& (0+255),c
   572  003C98  0E76               	movlw	118
   573  003C9A                     u527:
   574  003C9A  2EE8               	decfsz	wreg,f,c
   575  003C9C  D7FE               	goto	u527
   576  003C9E  2E1F               	decfsz	??_demoLEDs& (0+255),f,c
   577  003CA0  D7FC               	goto	u527
   578  003CA2  D000               	nop2	
   579  003CA4  4A21               	infsnz	demoLEDs@i,f,c
   580  003CA6  2A22               	incf	demoLEDs@i+1,f,c
   581  003CA8  D7EF               	goto	L3
   582  003CAA                     l963:
   583                           
   584                           ;led.c: 85: for(i=0;i<32;i++) {
   585  003CAA  0E00               	movlw	0
   586  003CAC  6E22               	movwf	demoLEDs@i+1,c
   587  003CAE  0E00               	movlw	0
   588  003CB0  6E21               	movwf	demoLEDs@i,c
   589  003CB2  0E20               	movlw	32
   590  003CB4  5C21               	subwf	demoLEDs@i,w,c
   591  003CB6  0E00               	movlw	0
   592  003CB8  5822               	subwfb	demoLEDs@i+1,w,c
   593  003CBA  B0D8               	btfsc	status,0,c
   594  003CBC  D082               	goto	l985
   595                           
   596                           ;led.c: 86: if((i%3) == 0) {led_strip_colors[i] = 0xFF0000;}
   597  003CBE  C021  F001         	movff	demoLEDs@i,___lwmod@dividend
   598  003CC2  C022  F002         	movff	demoLEDs@i+1,___lwmod@dividend+1
   599  003CC6  0E00               	movlw	0
   600  003CC8  6E04               	movwf	___lwmod@divisor+1,c
   601  003CCA  0E03               	movlw	3
   602  003CCC  6E03               	movwf	___lwmod@divisor,c
   603  003CCE  EC10  F01C         	call	___lwmod	;wreg free
   604  003CD2  5002               	movf	?___lwmod+1,w,c
   605  003CD4  1001               	iorwf	?___lwmod,w,c
   606  003CD6  A4D8               	btfss	status,2,c
   607  003CD8  D01C               	goto	l973
   608  003CDA  C021  F01F         	movff	demoLEDs@i,??_demoLEDs
   609  003CDE  C022  F020         	movff	demoLEDs@i+1,??_demoLEDs+1
   610  003CE2  90D8               	bcf	status,0,c
   611  003CE4  361F               	rlcf	??_demoLEDs,f,c
   612  003CE6  3620               	rlcf	??_demoLEDs+1,f,c
   613  003CE8  90D8               	bcf	status,0,c
   614  003CEA  361F               	rlcf	??_demoLEDs,f,c
   615  003CEC  3620               	rlcf	??_demoLEDs+1,f,c
   616  003CEE  0100               	movlb	0	; () banked
   617  003CF0  0E80               	movlw	low _led_strip_colors
   618  003CF2  241F               	addwf	??_demoLEDs,w,c
   619  003CF4  6ED9               	movwf	fsr2l,c
   620  003CF6  0100               	movlb	0	; () banked
   621  003CF8  0E00               	movlw	high _led_strip_colors
   622  003CFA  2020               	addwfc	??_demoLEDs+1,w,c
   623  003CFC  6EDA               	movwf	fsr2h,c
   624  003CFE  0E00               	movlw	0
   625  003D00  6EDE               	movwf	postinc2,c
   626  003D02  0E00               	movlw	0
   627  003D04  6EDE               	movwf	postinc2,c
   628  003D06  0EFF               	movlw	255
   629  003D08  6EDE               	movwf	postinc2,c
   630  003D0A  0E00               	movlw	0
   631  003D0C  6EDD               	movwf	postdec2,c
   632  003D0E  52DD               	movf	postdec2,f,c
   633  003D10  52DD               	movf	postdec2,f,c
   634  003D12                     l973:
   635                           
   636                           ;led.c: 87: if((i%3) == 1) {led_strip_colors[i] = 0xFFFFFF;}
   637  003D12  C021  F001         	movff	demoLEDs@i,___lwmod@dividend
   638  003D16  C022  F002         	movff	demoLEDs@i+1,___lwmod@dividend+1
   639  003D1A  0E00               	movlw	0
   640  003D1C  6E04               	movwf	___lwmod@divisor+1,c
   641  003D1E  0E03               	movlw	3
   642  003D20  6E03               	movwf	___lwmod@divisor,c
   643  003D22  EC10  F01C         	call	___lwmod	;wreg free
   644  003D26  0401               	decf	?___lwmod,w,c
   645  003D28  1002               	iorwf	?___lwmod+1,w,c
   646  003D2A  A4D8               	btfss	status,2,c
   647  003D2C  D01C               	goto	l977
   648  003D2E  C021  F01F         	movff	demoLEDs@i,??_demoLEDs
   649  003D32  C022  F020         	movff	demoLEDs@i+1,??_demoLEDs+1
   650  003D36  90D8               	bcf	status,0,c
   651  003D38  361F               	rlcf	??_demoLEDs,f,c
   652  003D3A  3620               	rlcf	??_demoLEDs+1,f,c
   653  003D3C  90D8               	bcf	status,0,c
   654  003D3E  361F               	rlcf	??_demoLEDs,f,c
   655  003D40  3620               	rlcf	??_demoLEDs+1,f,c
   656  003D42  0100               	movlb	0	; () banked
   657  003D44  0E80               	movlw	low _led_strip_colors
   658  003D46  241F               	addwf	??_demoLEDs,w,c
   659  003D48  6ED9               	movwf	fsr2l,c
   660  003D4A  0100               	movlb	0	; () banked
   661  003D4C  0E00               	movlw	high _led_strip_colors
   662  003D4E  2020               	addwfc	??_demoLEDs+1,w,c
   663  003D50  6EDA               	movwf	fsr2h,c
   664  003D52  0EFF               	movlw	255
   665  003D54  6EDE               	movwf	postinc2,c
   666  003D56  0EFF               	movlw	255
   667  003D58  6EDE               	movwf	postinc2,c
   668  003D5A  0EFF               	movlw	255
   669  003D5C  6EDE               	movwf	postinc2,c
   670  003D5E  0E00               	movlw	0
   671  003D60  6EDD               	movwf	postdec2,c
   672  003D62  52DD               	movf	postdec2,f,c
   673  003D64  52DD               	movf	postdec2,f,c
   674  003D66                     l977:
   675                           
   676                           ;led.c: 88: if((i%3) == 2) {led_strip_colors[i] = 0x0000FF;}
   677  003D66  C021  F001         	movff	demoLEDs@i,___lwmod@dividend
   678  003D6A  C022  F002         	movff	demoLEDs@i+1,___lwmod@dividend+1
   679  003D6E  0E00               	movlw	0
   680  003D70  6E04               	movwf	___lwmod@divisor+1,c
   681  003D72  0E03               	movlw	3
   682  003D74  6E03               	movwf	___lwmod@divisor,c
   683  003D76  EC10  F01C         	call	___lwmod	;wreg free
   684  003D7A  5001               	movf	?___lwmod,w,c
   685  003D7C  0A02               	xorlw	2
   686  003D7E  1002               	iorwf	?___lwmod+1,w,c
   687  003D80  A4D8               	btfss	status,2,c
   688  003D82  D01C               	goto	l981
   689  003D84  C021  F01F         	movff	demoLEDs@i,??_demoLEDs
   690  003D88  C022  F020         	movff	demoLEDs@i+1,??_demoLEDs+1
   691  003D8C  90D8               	bcf	status,0,c
   692  003D8E  361F               	rlcf	??_demoLEDs,f,c
   693  003D90  3620               	rlcf	??_demoLEDs+1,f,c
   694  003D92  90D8               	bcf	status,0,c
   695  003D94  361F               	rlcf	??_demoLEDs,f,c
   696  003D96  3620               	rlcf	??_demoLEDs+1,f,c
   697  003D98  0100               	movlb	0	; () banked
   698  003D9A  0E80               	movlw	low _led_strip_colors
   699  003D9C  241F               	addwf	??_demoLEDs,w,c
   700  003D9E  6ED9               	movwf	fsr2l,c
   701  003DA0  0100               	movlb	0	; () banked
   702  003DA2  0E00               	movlw	high _led_strip_colors
   703  003DA4  2020               	addwfc	??_demoLEDs+1,w,c
   704  003DA6  6EDA               	movwf	fsr2h,c
   705  003DA8  0EFF               	movlw	255
   706  003DAA  6EDE               	movwf	postinc2,c
   707  003DAC  0E00               	movlw	0
   708  003DAE  6EDE               	movwf	postinc2,c
   709  003DB0  0E00               	movlw	0
   710  003DB2  6EDE               	movwf	postinc2,c
   711  003DB4  0E00               	movlw	0
   712  003DB6  6EDD               	movwf	postdec2,c
   713  003DB8  52DD               	movf	postdec2,f,c
   714  003DBA  52DD               	movf	postdec2,f,c
   715  003DBC                     l981:
   716  003DBC  4A21               	infsnz	demoLEDs@i,f,c
   717  003DBE  2A22               	incf	demoLEDs@i+1,f,c
   718  003DC0  D778               	goto	L4
   719  003DC2                     l985:
   720                           
   721                           ;led.c: 89: }
   722                           ;led.c: 90: send_frame();
   723  003DC2  EC34  F01D         	call	_send_frame	;wreg free
   724                           
   725                           ;led.c: 93: for(i = 0 ; i < 2000 ; i++)
   726  003DC6  0E00               	movlw	0
   727  003DC8  6E22               	movwf	demoLEDs@i+1,c
   728  003DCA  0E00               	movlw	0
   729  003DCC  6E21               	movwf	demoLEDs@i,c
   730  003DCE  0ED0               	movlw	208
   731  003DD0  5C21               	subwf	demoLEDs@i,w,c
   732  003DD2  0E07               	movlw	7
   733  003DD4  5822               	subwfb	demoLEDs@i+1,w,c
   734  003DD6  B0D8               	btfsc	status,0,c
   735  003DD8  D00B               	goto	l997
   736                           
   737                           ;led.c: 94: _delay((unsigned long)((5)*(20000000ULL/4000.0)));
   738  003DDA  0E21               	movlw	33
   739  003DDC  6E1F               	movwf	??_demoLEDs& (0+255),c
   740  003DDE  0E76               	movlw	118
   741  003DE0                     u537:
   742  003DE0  2EE8               	decfsz	wreg,f,c
   743  003DE2  D7FE               	goto	u537
   744  003DE4  2E1F               	decfsz	??_demoLEDs& (0+255),f,c
   745  003DE6  D7FC               	goto	u537
   746  003DE8  D000               	nop2	
   747  003DEA  4A21               	infsnz	demoLEDs@i,f,c
   748  003DEC  2A22               	incf	demoLEDs@i+1,f,c
   749  003DEE  D7EF               	goto	L5
   750  003DF0                     l997:
   751                           
   752                           ;led.c: 96: for(i=0;i<32;i++) {
   753  003DF0  0E00               	movlw	0
   754  003DF2  6E22               	movwf	demoLEDs@i+1,c
   755  003DF4  0E00               	movlw	0
   756  003DF6  6E21               	movwf	demoLEDs@i,c
   757  003DF8  0E20               	movlw	32
   758  003DFA  5C21               	subwf	demoLEDs@i,w,c
   759  003DFC  0E00               	movlw	0
   760  003DFE  5822               	subwfb	demoLEDs@i+1,w,c
   761  003E00  B0D8               	btfsc	status,0,c
   762  003E02  D03F               	goto	l1013
   763                           
   764                           ;led.c: 97: if((i%2) == 0) {led_strip_colors[i] = 0x00FF00;}
   765  003E04  B021               	btfsc	demoLEDs@i,0,c
   766  003E06  D01C               	goto	l1005
   767  003E08  C021  F01F         	movff	demoLEDs@i,??_demoLEDs
   768  003E0C  C022  F020         	movff	demoLEDs@i+1,??_demoLEDs+1
   769  003E10  90D8               	bcf	status,0,c
   770  003E12  361F               	rlcf	??_demoLEDs,f,c
   771  003E14  3620               	rlcf	??_demoLEDs+1,f,c
   772  003E16  90D8               	bcf	status,0,c
   773  003E18  361F               	rlcf	??_demoLEDs,f,c
   774  003E1A  3620               	rlcf	??_demoLEDs+1,f,c
   775  003E1C  0100               	movlb	0	; () banked
   776  003E1E  0E80               	movlw	low _led_strip_colors
   777  003E20  241F               	addwf	??_demoLEDs,w,c
   778  003E22  6ED9               	movwf	fsr2l,c
   779  003E24  0100               	movlb	0	; () banked
   780  003E26  0E00               	movlw	high _led_strip_colors
   781  003E28  2020               	addwfc	??_demoLEDs+1,w,c
   782  003E2A  6EDA               	movwf	fsr2h,c
   783  003E2C  0E00               	movlw	0
   784  003E2E  6EDE               	movwf	postinc2,c
   785  003E30  0EFF               	movlw	255
   786  003E32  6EDE               	movwf	postinc2,c
   787  003E34  0E00               	movlw	0
   788  003E36  6EDE               	movwf	postinc2,c
   789  003E38  0E00               	movlw	0
   790  003E3A  6EDD               	movwf	postdec2,c
   791  003E3C  52DD               	movf	postdec2,f,c
   792  003E3E  52DD               	movf	postdec2,f,c
   793  003E40                     l1005:
   794                           
   795                           ;led.c: 98: if((i%2) == 1) {led_strip_colors[i] = 0xFFFFFF;}
   796  003E40  A021               	btfss	demoLEDs@i,0,c
   797  003E42  D01C               	goto	l1009
   798  003E44  C021  F01F         	movff	demoLEDs@i,??_demoLEDs
   799  003E48  C022  F020         	movff	demoLEDs@i+1,??_demoLEDs+1
   800  003E4C  90D8               	bcf	status,0,c
   801  003E4E  361F               	rlcf	??_demoLEDs,f,c
   802  003E50  3620               	rlcf	??_demoLEDs+1,f,c
   803  003E52  90D8               	bcf	status,0,c
   804  003E54  361F               	rlcf	??_demoLEDs,f,c
   805  003E56  3620               	rlcf	??_demoLEDs+1,f,c
   806  003E58  0100               	movlb	0	; () banked
   807  003E5A  0E80               	movlw	low _led_strip_colors
   808  003E5C  241F               	addwf	??_demoLEDs,w,c
   809  003E5E  6ED9               	movwf	fsr2l,c
   810  003E60  0100               	movlb	0	; () banked
   811  003E62  0E00               	movlw	high _led_strip_colors
   812  003E64  2020               	addwfc	??_demoLEDs+1,w,c
   813  003E66  6EDA               	movwf	fsr2h,c
   814  003E68  0EFF               	movlw	255
   815  003E6A  6EDE               	movwf	postinc2,c
   816  003E6C  0EFF               	movlw	255
   817  003E6E  6EDE               	movwf	postinc2,c
   818  003E70  0EFF               	movlw	255
   819  003E72  6EDE               	movwf	postinc2,c
   820  003E74  0E00               	movlw	0
   821  003E76  6EDD               	movwf	postdec2,c
   822  003E78  52DD               	movf	postdec2,f,c
   823  003E7A  52DD               	movf	postdec2,f,c
   824  003E7C                     l1009:
   825  003E7C  4A21               	infsnz	demoLEDs@i,f,c
   826  003E7E  2A22               	incf	demoLEDs@i+1,f,c
   827  003E80  D7BB               	goto	L6
   828  003E82                     l1013:
   829                           
   830                           ;led.c: 99: }
   831                           ;led.c: 100: send_frame();
   832  003E82  EC34  F01D         	call	_send_frame	;wreg free
   833                           
   834                           ;led.c: 102: for(i = 0 ; i < 2000 ; i++)
   835  003E86  0E00               	movlw	0
   836  003E88  6E22               	movwf	demoLEDs@i+1,c
   837  003E8A  0E00               	movlw	0
   838  003E8C  6E21               	movwf	demoLEDs@i,c
   839  003E8E  0ED0               	movlw	208
   840  003E90  5C21               	subwf	demoLEDs@i,w,c
   841  003E92  0E07               	movlw	7
   842  003E94  5822               	subwfb	demoLEDs@i+1,w,c
   843  003E96  B0D8               	btfsc	status,0,c
   844  003E98  D00B               	goto	l1025
   845                           
   846                           ;led.c: 103: _delay((unsigned long)((5)*(20000000ULL/4000.0)));
   847  003E9A  0E21               	movlw	33
   848  003E9C  6E1F               	movwf	??_demoLEDs& (0+255),c
   849  003E9E  0E76               	movlw	118
   850  003EA0                     u547:
   851  003EA0  2EE8               	decfsz	wreg,f,c
   852  003EA2  D7FE               	goto	u547
   853  003EA4  2E1F               	decfsz	??_demoLEDs& (0+255),f,c
   854  003EA6  D7FC               	goto	u547
   855  003EA8  D000               	nop2	
   856  003EAA  4A21               	infsnz	demoLEDs@i,f,c
   857  003EAC  2A22               	incf	demoLEDs@i+1,f,c
   858  003EAE  D7EF               	goto	L7
   859  003EB0                     l1025:
   860                           
   861                           ;led.c: 105: for(i=0;i<32;i++) {
   862  003EB0  0E00               	movlw	0
   863  003EB2  6E22               	movwf	demoLEDs@i+1,c
   864  003EB4  0E00               	movlw	0
   865  003EB6  6E21               	movwf	demoLEDs@i,c
   866  003EB8  0E20               	movlw	32
   867  003EBA  5C21               	subwf	demoLEDs@i,w,c
   868  003EBC  0E00               	movlw	0
   869  003EBE  5822               	subwfb	demoLEDs@i+1,w,c
   870  003EC0  B0D8               	btfsc	status,0,c
   871  003EC2  D03F               	goto	l1041
   872                           
   873                           ;led.c: 106: if((i%2) == 0) {led_strip_colors[i] = 0x0000FF;}
   874  003EC4  B021               	btfsc	demoLEDs@i,0,c
   875  003EC6  D01C               	goto	l1033
   876  003EC8  C021  F01F         	movff	demoLEDs@i,??_demoLEDs
   877  003ECC  C022  F020         	movff	demoLEDs@i+1,??_demoLEDs+1
   878  003ED0  90D8               	bcf	status,0,c
   879  003ED2  361F               	rlcf	??_demoLEDs,f,c
   880  003ED4  3620               	rlcf	??_demoLEDs+1,f,c
   881  003ED6  90D8               	bcf	status,0,c
   882  003ED8  361F               	rlcf	??_demoLEDs,f,c
   883  003EDA  3620               	rlcf	??_demoLEDs+1,f,c
   884  003EDC  0100               	movlb	0	; () banked
   885  003EDE  0E80               	movlw	low _led_strip_colors
   886  003EE0  241F               	addwf	??_demoLEDs,w,c
   887  003EE2  6ED9               	movwf	fsr2l,c
   888  003EE4  0100               	movlb	0	; () banked
   889  003EE6  0E00               	movlw	high _led_strip_colors
   890  003EE8  2020               	addwfc	??_demoLEDs+1,w,c
   891  003EEA  6EDA               	movwf	fsr2h,c
   892  003EEC  0EFF               	movlw	255
   893  003EEE  6EDE               	movwf	postinc2,c
   894  003EF0  0E00               	movlw	0
   895  003EF2  6EDE               	movwf	postinc2,c
   896  003EF4  0E00               	movlw	0
   897  003EF6  6EDE               	movwf	postinc2,c
   898  003EF8  0E00               	movlw	0
   899  003EFA  6EDD               	movwf	postdec2,c
   900  003EFC  52DD               	movf	postdec2,f,c
   901  003EFE  52DD               	movf	postdec2,f,c
   902  003F00                     l1033:
   903                           
   904                           ;led.c: 107: if((i%2) == 1) {led_strip_colors[i] = 0xFFFFFF;}
   905  003F00  A021               	btfss	demoLEDs@i,0,c
   906  003F02  D01C               	goto	l1037
   907  003F04  C021  F01F         	movff	demoLEDs@i,??_demoLEDs
   908  003F08  C022  F020         	movff	demoLEDs@i+1,??_demoLEDs+1
   909  003F0C  90D8               	bcf	status,0,c
   910  003F0E  361F               	rlcf	??_demoLEDs,f,c
   911  003F10  3620               	rlcf	??_demoLEDs+1,f,c
   912  003F12  90D8               	bcf	status,0,c
   913  003F14  361F               	rlcf	??_demoLEDs,f,c
   914  003F16  3620               	rlcf	??_demoLEDs+1,f,c
   915  003F18  0100               	movlb	0	; () banked
   916  003F1A  0E80               	movlw	low _led_strip_colors
   917  003F1C  241F               	addwf	??_demoLEDs,w,c
   918  003F1E  6ED9               	movwf	fsr2l,c
   919  003F20  0100               	movlb	0	; () banked
   920  003F22  0E00               	movlw	high _led_strip_colors
   921  003F24  2020               	addwfc	??_demoLEDs+1,w,c
   922  003F26  6EDA               	movwf	fsr2h,c
   923  003F28  0EFF               	movlw	255
   924  003F2A  6EDE               	movwf	postinc2,c
   925  003F2C  0EFF               	movlw	255
   926  003F2E  6EDE               	movwf	postinc2,c
   927  003F30  0EFF               	movlw	255
   928  003F32  6EDE               	movwf	postinc2,c
   929  003F34  0E00               	movlw	0
   930  003F36  6EDD               	movwf	postdec2,c
   931  003F38  52DD               	movf	postdec2,f,c
   932  003F3A  52DD               	movf	postdec2,f,c
   933  003F3C                     l1037:
   934  003F3C  4A21               	infsnz	demoLEDs@i,f,c
   935  003F3E  2A22               	incf	demoLEDs@i+1,f,c
   936  003F40  D7BB               	goto	L8
   937  003F42                     l1041:
   938                           
   939                           ;led.c: 108: }
   940                           ;led.c: 109: send_frame();
   941  003F42  EC34  F01D         	call	_send_frame	;wreg free
   942                           
   943                           ;led.c: 111: for(i = 0 ; i < 2000 ; i++)
   944  003F46  0E00               	movlw	0
   945  003F48  6E22               	movwf	demoLEDs@i+1,c
   946  003F4A  0E00               	movlw	0
   947  003F4C  6E21               	movwf	demoLEDs@i,c
   948  003F4E  0ED0               	movlw	208
   949  003F50  5C21               	subwf	demoLEDs@i,w,c
   950  003F52  0E07               	movlw	7
   951  003F54  5822               	subwfb	demoLEDs@i+1,w,c
   952  003F56  B0D8               	btfsc	status,0,c
   953  003F58  D00B               	goto	l1053
   954                           
   955                           ;led.c: 112: _delay((unsigned long)((5)*(20000000ULL/4000.0)));
   956  003F5A  0E21               	movlw	33
   957  003F5C  6E1F               	movwf	??_demoLEDs& (0+255),c
   958  003F5E  0E76               	movlw	118
   959  003F60                     u557:
   960  003F60  2EE8               	decfsz	wreg,f,c
   961  003F62  D7FE               	goto	u557
   962  003F64  2E1F               	decfsz	??_demoLEDs& (0+255),f,c
   963  003F66  D7FC               	goto	u557
   964  003F68  D000               	nop2	
   965  003F6A  4A21               	infsnz	demoLEDs@i,f,c
   966  003F6C  2A22               	incf	demoLEDs@i+1,f,c
   967  003F6E  D7EF               	goto	L9
   968  003F70                     l1053:
   969                           
   970                           ;led.c: 114: for(i = 0 ; i < 32 ; i++) {led_strip_colors[i] = 0;}
   971  003F70  0E00               	movlw	0
   972  003F72  6E22               	movwf	demoLEDs@i+1,c
   973  003F74  0E00               	movlw	0
   974  003F76  6E21               	movwf	demoLEDs@i,c
   975  003F78  0E20               	movlw	32
   976  003F7A  5C21               	subwf	demoLEDs@i,w,c
   977  003F7C  0E00               	movlw	0
   978  003F7E  5822               	subwfb	demoLEDs@i+1,w,c
   979  003F80  B0D8               	btfsc	status,0,c
   980  003F82  D01F               	goto	l1065
   981  003F84  C021  F01F         	movff	demoLEDs@i,??_demoLEDs
   982  003F88  C022  F020         	movff	demoLEDs@i+1,??_demoLEDs+1
   983  003F8C  90D8               	bcf	status,0,c
   984  003F8E  361F               	rlcf	??_demoLEDs,f,c
   985  003F90  3620               	rlcf	??_demoLEDs+1,f,c
   986  003F92  90D8               	bcf	status,0,c
   987  003F94  361F               	rlcf	??_demoLEDs,f,c
   988  003F96  3620               	rlcf	??_demoLEDs+1,f,c
   989  003F98  0100               	movlb	0	; () banked
   990  003F9A  0E80               	movlw	low _led_strip_colors
   991  003F9C  241F               	addwf	??_demoLEDs,w,c
   992  003F9E  6ED9               	movwf	fsr2l,c
   993  003FA0  0100               	movlb	0	; () banked
   994  003FA2  0E00               	movlw	high _led_strip_colors
   995  003FA4  2020               	addwfc	??_demoLEDs+1,w,c
   996  003FA6  6EDA               	movwf	fsr2h,c
   997  003FA8  0E00               	movlw	0
   998  003FAA  6EDE               	movwf	postinc2,c
   999  003FAC  0E00               	movlw	0
  1000  003FAE  6EDE               	movwf	postinc2,c
  1001  003FB0  0E00               	movlw	0
  1002  003FB2  6EDE               	movwf	postinc2,c
  1003  003FB4  0E00               	movlw	0
  1004  003FB6  6EDD               	movwf	postdec2,c
  1005  003FB8  52DD               	movf	postdec2,f,c
  1006  003FBA  52DD               	movf	postdec2,f,c
  1007                           
  1008                           ; BSR set to: 0
  1009  003FBC  4A21               	infsnz	demoLEDs@i,f,c
  1010  003FBE  2A22               	incf	demoLEDs@i+1,f,c
  1011  003FC0  D7DB               	goto	L10
  1012  003FC2                     l1065:
  1013                           
  1014                           ;led.c: 115: send_frame();
  1015  003FC2  EC34  F01D         	call	_send_frame	;wreg free
  1016  003FC6                     l1067:
  1017                           
  1018                           ;led.c: 118: addRandom();
  1019  003FC6  ECBA  F01C         	call	_addRandom	;wreg free
  1020                           
  1021                           ;led.c: 119: send_frame();
  1022  003FCA  EC34  F01D         	call	_send_frame	;wreg free
  1023                           
  1024                           ;led.c: 120: for(i = 0 ; i < 20 ; i++)
  1025  003FCE  0E00               	movlw	0
  1026  003FD0  6E22               	movwf	demoLEDs@i+1,c
  1027  003FD2  0E00               	movlw	0
  1028  003FD4  6E21               	movwf	demoLEDs@i,c
  1029  003FD6  0E14               	movlw	20
  1030  003FD8  5C21               	subwf	demoLEDs@i,w,c
  1031  003FDA  0E00               	movlw	0
  1032  003FDC  5822               	subwfb	demoLEDs@i+1,w,c
  1033  003FDE  B0D8               	btfsc	status,0,c
  1034  003FE0  D7F2               	goto	l1067
  1035                           
  1036                           ;led.c: 121: _delay((unsigned long)((5)*(20000000ULL/4000.0)));
  1037  003FE2  0E21               	movlw	33
  1038  003FE4  6E1F               	movwf	??_demoLEDs& (0+255),c
  1039  003FE6  0E76               	movlw	118
  1040  003FE8                     u567:
  1041  003FE8  2EE8               	decfsz	wreg,f,c
  1042  003FEA  D7FE               	goto	u567
  1043  003FEC  2E1F               	decfsz	??_demoLEDs& (0+255),f,c
  1044  003FEE  D7FC               	goto	u567
  1045  003FF0  D000               	nop2	
  1046  003FF2  4A21               	infsnz	demoLEDs@i,f,c
  1047  003FF4  2A22               	incf	demoLEDs@i+1,f,c
  1048  003FF6  D7EF               	goto	L11
  1049  003FF8                     __end_of_demoLEDs:
  1050                           	opt stack 0
  1051                           postinc0	equ	0xFEE
  1052                           wreg	equ	0xFE8
  1053                           postinc2	equ	0xFDE
  1054                           postdec2	equ	0xFDD
  1055                           fsr2h	equ	0xFDA
  1056                           fsr2l	equ	0xFD9
  1057                           status	equ	0xFD8
  1058                           
  1059 ;; *************** function _send_frame *****************
  1060 ;; Defined at:
  1061 ;;		line 33 in file "led.c"
  1062 ;; Parameters:    Size  Location     Type
  1063 ;;		None
  1064 ;; Auto vars:     Size  Location     Type
  1065 ;;  i               2   20[COMRAM] unsigned int 
  1066 ;;  blue            1   19[COMRAM] unsigned char 
  1067 ;;  green           1   18[COMRAM] unsigned char 
  1068 ;;  red             1   17[COMRAM] unsigned char 
  1069 ;; Return value:  Size  Location     Type
  1070 ;;		None               void
  1071 ;; Registers used:
  1072 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1073 ;; Tracked objects:
  1074 ;;		On entry : 0/0
  1075 ;;		On exit  : 0/0
  1076 ;;		Unchanged: 0/0
  1077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1078 ;;      Params:         0       0       0       0       0
  1079 ;;      Locals:         5       0       0       0       0
  1080 ;;      Temps:          6       0       0       0       0
  1081 ;;      Totals:        11       0       0       0       0
  1082 ;;Total ram usage:       11 bytes
  1083 ;; Hardware stack levels used:    1
  1084 ;; Hardware stack levels required when called:    2
  1085 ;; This function calls:
  1086 ;;		_WriteSPI1
  1087 ;;		_write_latch
  1088 ;; This function is called by:
  1089 ;;		_demoLEDs
  1090 ;; This function uses a non-reentrant model
  1091 ;;
  1092                           
  1093                           	psect	text3
  1094  003A68                     __ptext3:
  1095                           	opt stack 0
  1096  003A68                     _send_frame:
  1097                           	opt stack 27
  1098                           
  1099                           ;led.c: 34: uint16_t i;
  1100                           ;led.c: 35: uint8_t red,green,blue;
  1101                           ;led.c: 37: for(i=0;i<32;i++) {
  1102                           
  1103                           ;incstack = 0
  1104  003A68  0E00               	movlw	0
  1105  003A6A  6E16               	movwf	send_frame@i+1,c
  1106  003A6C  0E00               	movlw	0
  1107  003A6E  6E15               	movwf	send_frame@i,c
  1108  003A70  0E20               	movlw	32
  1109  003A72  5C15               	subwf	send_frame@i,w,c
  1110  003A74  0E00               	movlw	0
  1111  003A76  5816               	subwfb	send_frame@i+1,w,c
  1112  003A78  B0D8               	btfsc	status,0,c
  1113  003A7A  D06B               	goto	l889
  1114                           
  1115                           ;led.c: 38: blue = led_strip_colors[i] & 0xFF;
  1116  003A7C  C015  F00C         	movff	send_frame@i,??_send_frame
  1117  003A80  C016  F00D         	movff	send_frame@i+1,??_send_frame+1
  1118  003A84  90D8               	bcf	status,0,c
  1119  003A86  360C               	rlcf	??_send_frame,f,c
  1120  003A88  360D               	rlcf	??_send_frame+1,f,c
  1121  003A8A  90D8               	bcf	status,0,c
  1122  003A8C  360C               	rlcf	??_send_frame,f,c
  1123  003A8E  360D               	rlcf	??_send_frame+1,f,c
  1124  003A90  0100               	movlb	0	; () banked
  1125  003A92  0E80               	movlw	low _led_strip_colors
  1126  003A94  240C               	addwf	??_send_frame,w,c
  1127  003A96  6ED9               	movwf	fsr2l,c
  1128  003A98  0100               	movlb	0	; () banked
  1129  003A9A  0E00               	movlw	high _led_strip_colors
  1130  003A9C  200D               	addwfc	??_send_frame+1,w,c
  1131  003A9E  6EDA               	movwf	fsr2h,c
  1132  003AA0  50DF               	movf	indf2,w,c
  1133  003AA2  6E14               	movwf	send_frame@blue,c
  1134                           
  1135                           ;led.c: 39: green = (led_strip_colors[i] >> 8) & 0xFF;
  1136  003AA4  C015  F00C         	movff	send_frame@i,??_send_frame
  1137  003AA8  C016  F00D         	movff	send_frame@i+1,??_send_frame+1
  1138  003AAC  90D8               	bcf	status,0,c
  1139  003AAE  360C               	rlcf	??_send_frame,f,c
  1140  003AB0  360D               	rlcf	??_send_frame+1,f,c
  1141  003AB2  90D8               	bcf	status,0,c
  1142  003AB4  360C               	rlcf	??_send_frame,f,c
  1143  003AB6  360D               	rlcf	??_send_frame+1,f,c
  1144  003AB8  0100               	movlb	0	; () banked
  1145  003ABA  0E80               	movlw	low _led_strip_colors
  1146  003ABC  240C               	addwf	??_send_frame,w,c
  1147  003ABE  6ED9               	movwf	fsr2l,c
  1148  003AC0  0100               	movlb	0	; () banked
  1149  003AC2  0E00               	movlw	high _led_strip_colors
  1150  003AC4  200D               	addwfc	??_send_frame+1,w,c
  1151  003AC6  6EDA               	movwf	fsr2h,c
  1152  003AC8  CFDE F00E          	movff	postinc2,??_send_frame+2
  1153  003ACC  CFDE F00F          	movff	postinc2,??_send_frame+3
  1154  003AD0  CFDE F010          	movff	postinc2,??_send_frame+4
  1155  003AD4  CFDE F011          	movff	postinc2,??_send_frame+5
  1156  003AD8  C00F  F00E         	movff	??_send_frame+3,??_send_frame+2
  1157  003ADC  C010  F00F         	movff	??_send_frame+4,??_send_frame+3
  1158  003AE0  C011  F010         	movff	??_send_frame+5,??_send_frame+4
  1159  003AE4  6A11               	clrf	??_send_frame+5,c
  1160  003AE6  500E               	movf	??_send_frame+2,w,c
  1161  003AE8  6E13               	movwf	send_frame@green,c
  1162                           
  1163                           ;led.c: 40: red = (led_strip_colors[i] >> 16) & 0xFF;
  1164  003AEA  C015  F00C         	movff	send_frame@i,??_send_frame
  1165  003AEE  C016  F00D         	movff	send_frame@i+1,??_send_frame+1
  1166  003AF2  90D8               	bcf	status,0,c
  1167  003AF4  360C               	rlcf	??_send_frame,f,c
  1168  003AF6  360D               	rlcf	??_send_frame+1,f,c
  1169  003AF8  90D8               	bcf	status,0,c
  1170  003AFA  360C               	rlcf	??_send_frame,f,c
  1171  003AFC  360D               	rlcf	??_send_frame+1,f,c
  1172  003AFE  0100               	movlb	0	; () banked
  1173  003B00  0E80               	movlw	low _led_strip_colors
  1174  003B02  240C               	addwf	??_send_frame,w,c
  1175  003B04  6ED9               	movwf	fsr2l,c
  1176  003B06  0100               	movlb	0	; () banked
  1177  003B08  0E00               	movlw	high _led_strip_colors
  1178  003B0A  200D               	addwfc	??_send_frame+1,w,c
  1179  003B0C  6EDA               	movwf	fsr2h,c
  1180  003B0E  CFDE F00E          	movff	postinc2,??_send_frame+2
  1181  003B12  CFDE F00F          	movff	postinc2,??_send_frame+3
  1182  003B16  CFDE F010          	movff	postinc2,??_send_frame+4
  1183  003B1A  CFDE F011          	movff	postinc2,??_send_frame+5
  1184  003B1E  0E11               	movlw	17
  1185  003B20  D005               	goto	u160
  1186  003B22                     u165:
  1187  003B22  90D8               	bcf	status,0,c
  1188  003B24  3211               	rrcf	??_send_frame+5,f,c
  1189  003B26  3210               	rrcf	??_send_frame+4,f,c
  1190  003B28  320F               	rrcf	??_send_frame+3,f,c
  1191  003B2A  320E               	rrcf	??_send_frame+2,f,c
  1192  003B2C                     u160:
  1193  003B2C  2EE8               	decfsz	wreg,f,c
  1194  003B2E  D7F9               	goto	u165
  1195  003B30  500E               	movf	??_send_frame+2,w,c
  1196  003B32  6E12               	movwf	send_frame@red,c
  1197                           
  1198                           ; BSR set to: 0
  1199                           ;led.c: 41: WriteSPI1((green|0x80));
  1200  003B34  5013               	movf	send_frame@green,w,c
  1201  003B36  0980               	iorlw	128
  1202  003B38  ECC9  F01B         	call	_WriteSPI1
  1203                           
  1204                           ;led.c: 42: WriteSPI1((red|0x80));
  1205  003B3C  5012               	movf	send_frame@red,w,c
  1206  003B3E  0980               	iorlw	128
  1207  003B40  ECC9  F01B         	call	_WriteSPI1
  1208                           
  1209                           ;led.c: 43: WriteSPI1((blue|0x80));
  1210  003B44  5014               	movf	send_frame@blue,w,c
  1211  003B46  0980               	iorlw	128
  1212  003B48  ECC9  F01B         	call	_WriteSPI1
  1213  003B4C  4A15               	infsnz	send_frame@i,f,c
  1214  003B4E  2A16               	incf	send_frame@i+1,f,c
  1215  003B50  D78F               	goto	L12
  1216  003B52                     l889:
  1217                           
  1218                           ;led.c: 44: }
  1219                           ;led.c: 45: write_latch(32);
  1220  003B52  0E00               	movlw	0
  1221  003B54  6E08               	movwf	write_latch@len+1,c
  1222  003B56  0E20               	movlw	32
  1223  003B58  6E07               	movwf	write_latch@len,c
  1224  003B5A  EC33  F01C         	call	_write_latch	;wreg free
  1225  003B5E  0012               	return	
  1226  003B60                     __end_of_send_frame:
  1227                           	opt stack 0
  1228                           postinc0	equ	0xFEE
  1229                           wreg	equ	0xFE8
  1230                           indf2	equ	0xFDF
  1231                           postinc2	equ	0xFDE
  1232                           postdec2	equ	0xFDD
  1233                           fsr2h	equ	0xFDA
  1234                           fsr2l	equ	0xFD9
  1235                           status	equ	0xFD8
  1236                           
  1237 ;; *************** function _write_latch *****************
  1238 ;; Defined at:
  1239 ;;		line 22 in file "led.c"
  1240 ;; Parameters:    Size  Location     Type
  1241 ;;  len             2    6[COMRAM] unsigned int 
  1242 ;; Auto vars:     Size  Location     Type
  1243 ;;		None
  1244 ;; Return value:  Size  Location     Type
  1245 ;;		None               void
  1246 ;; Registers used:
  1247 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1248 ;; Tracked objects:
  1249 ;;		On entry : 0/0
  1250 ;;		On exit  : 0/0
  1251 ;;		Unchanged: 0/0
  1252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1253 ;;      Params:         2       0       0       0       0
  1254 ;;      Locals:         0       0       0       0       0
  1255 ;;      Temps:          3       0       0       0       0
  1256 ;;      Totals:         5       0       0       0       0
  1257 ;;Total ram usage:        5 bytes
  1258 ;; Hardware stack levels used:    1
  1259 ;; Hardware stack levels required when called:    1
  1260 ;; This function calls:
  1261 ;;		_WriteSPI1
  1262 ;;		___wmul
  1263 ;; This function is called by:
  1264 ;;		_send_frame
  1265 ;; This function uses a non-reentrant model
  1266 ;;
  1267                           
  1268                           	psect	text4
  1269  003866                     __ptext4:
  1270                           	opt stack 0
  1271  003866                     _write_latch:
  1272                           	opt stack 27
  1273                           
  1274                           ;led.c: 25: len = ((len + 63) / 64) * 3;
  1275                           
  1276                           ;incstack = 0
  1277  003866  0E3F               	movlw	63
  1278  003868  2407               	addwf	write_latch@len,w,c
  1279  00386A  6E09               	movwf	??_write_latch& (0+255),c
  1280  00386C  0E00               	movlw	0
  1281  00386E  2008               	addwfc	write_latch@len+1,w,c
  1282  003870  6E0A               	movwf	(??_write_latch+1)& (0+255),c
  1283  003872  0E06               	movlw	6
  1284  003874  6E0B               	movwf	(??_write_latch+2)& (0+255),c
  1285  003876                     u125:
  1286  003876  90D8               	bcf	status,0,c
  1287  003878  320A               	rrcf	??_write_latch+1,f,c
  1288  00387A  3209               	rrcf	??_write_latch,f,c
  1289  00387C  2E0B               	decfsz	(??_write_latch+2)& (0+255),f,c
  1290  00387E  D7FB               	goto	u125
  1291  003880  C009  F001         	movff	??_write_latch,___wmul@multiplier
  1292  003884  C00A  F002         	movff	??_write_latch+1,___wmul@multiplier+1
  1293  003888  0E00               	movlw	0
  1294  00388A  6E04               	movwf	___wmul@multiplicand+1,c
  1295  00388C  0E03               	movlw	3
  1296  00388E  6E03               	movwf	___wmul@multiplicand,c
  1297  003890  ECF3  F01B         	call	___wmul	;wreg free
  1298  003894  C001  F007         	movff	?___wmul,write_latch@len
  1299  003898  C002  F008         	movff	?___wmul+1,write_latch@len+1
  1300                           
  1301                           ;led.c: 27: while(len>0) {
  1302  00389C  D006               	goto	l861
  1303  00389E                     l857:
  1304                           
  1305                           ;led.c: 28: WriteSPI1(0x00);
  1306  00389E  0E00               	movlw	0
  1307  0038A0  ECC9  F01B         	call	_WriteSPI1
  1308                           
  1309                           ;led.c: 29: len--;
  1310  0038A4  0607               	decf	write_latch@len,f,c
  1311  0038A6  A0D8               	btfss	status,0,c
  1312  0038A8  0608               	decf	write_latch@len+1,f,c
  1313  0038AA                     l861:
  1314  0038AA  5008               	movf	write_latch@len+1,w,c
  1315  0038AC  1007               	iorwf	write_latch@len,w,c
  1316  0038AE  B4D8               	btfsc	status,2,c
  1317  0038B0  0012               	return	
  1318  0038B2  D7F5               	goto	l857
  1319  0038B4                     __end_of_write_latch:
  1320                           	opt stack 0
  1321                           postinc0	equ	0xFEE
  1322                           wreg	equ	0xFE8
  1323                           indf2	equ	0xFDF
  1324                           postinc2	equ	0xFDE
  1325                           postdec2	equ	0xFDD
  1326                           fsr2h	equ	0xFDA
  1327                           fsr2l	equ	0xFD9
  1328                           status	equ	0xFD8
  1329                           
  1330 ;; *************** function ___wmul *****************
  1331 ;; Defined at:
  1332 ;;		line 4 in file "/opt/microchip/xc8/v1.30/sources/common/wmul.c"
  1333 ;; Parameters:    Size  Location     Type
  1334 ;;  multiplier      2    0[COMRAM] unsigned int 
  1335 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1336 ;; Auto vars:     Size  Location     Type
  1337 ;;  product         2    4[COMRAM] unsigned int 
  1338 ;; Return value:  Size  Location     Type
  1339 ;;                  2    0[COMRAM] unsigned int 
  1340 ;; Registers used:
  1341 ;;		wreg, status,2, status,0, prodl, prodh
  1342 ;; Tracked objects:
  1343 ;;		On entry : 0/0
  1344 ;;		On exit  : 0/0
  1345 ;;		Unchanged: 0/0
  1346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1347 ;;      Params:         4       0       0       0       0
  1348 ;;      Locals:         2       0       0       0       0
  1349 ;;      Temps:          0       0       0       0       0
  1350 ;;      Totals:         6       0       0       0       0
  1351 ;;Total ram usage:        6 bytes
  1352 ;; Hardware stack levels used:    1
  1353 ;; This function calls:
  1354 ;;		Nothing
  1355 ;; This function is called by:
  1356 ;;		_write_latch
  1357 ;; This function uses a non-reentrant model
  1358 ;;
  1359                           
  1360                           	psect	text5
  1361  0037E6                     __ptext5:
  1362                           	opt stack 0
  1363  0037E6                     ___wmul:
  1364                           	opt stack 27
  1365                           
  1366                           ;incstack = 0
  1367  0037E6  5001               	movf	___wmul@multiplier,w,c
  1368  0037E8  0203               	mulwf	___wmul@multiplicand,c
  1369  0037EA  CFF3 F005          	movff	prodl,___wmul@product
  1370  0037EE  CFF4 F006          	movff	prodh,___wmul@product+1
  1371  0037F2  5001               	movf	___wmul@multiplier,w,c
  1372  0037F4  0204               	mulwf	___wmul@multiplicand+1,c
  1373  0037F6  CFF3 FFF4          	movff	prodl,prodh
  1374  0037FA  6AF3               	clrf	prodl,c
  1375  0037FC  50F3               	movf	prodl,w,c
  1376  0037FE  2605               	addwf	___wmul@product,f,c
  1377  003800  50F4               	movf	prodh,w,c
  1378  003802  2206               	addwfc	___wmul@product+1,f,c
  1379  003804  5002               	movf	___wmul@multiplier+1,w,c
  1380  003806  0203               	mulwf	___wmul@multiplicand,c
  1381  003808  CFF3 FFF4          	movff	prodl,prodh
  1382  00380C  6AF3               	clrf	prodl,c
  1383  00380E  50F3               	movf	prodl,w,c
  1384  003810  2605               	addwf	___wmul@product,f,c
  1385  003812  50F4               	movf	prodh,w,c
  1386  003814  2206               	addwfc	___wmul@product+1,f,c
  1387  003816  C005  F001         	movff	___wmul@product,?___wmul
  1388  00381A  C006  F002         	movff	___wmul@product+1,?___wmul+1
  1389  00381E  0012               	return	
  1390  003820                     __end_of___wmul:
  1391                           	opt stack 0
  1392                           prodh	equ	0xFF4
  1393                           prodl	equ	0xFF3
  1394                           postinc0	equ	0xFEE
  1395                           wreg	equ	0xFE8
  1396                           indf2	equ	0xFDF
  1397                           postinc2	equ	0xFDE
  1398                           postdec2	equ	0xFDD
  1399                           fsr2h	equ	0xFDA
  1400                           fsr2l	equ	0xFD9
  1401                           status	equ	0xFD8
  1402                           
  1403 ;; *************** function _WriteSPI1 *****************
  1404 ;; Defined at:
  1405 ;;		line 13 in file "/opt/microchip/xc8/v1.30/sources/pic18/plib/SPI/spi1writ.c"
  1406 ;; Parameters:    Size  Location     Type
  1407 ;;  data_out        1    wreg     unsigned char 
  1408 ;; Auto vars:     Size  Location     Type
  1409 ;;  data_out        1    1[COMRAM] unsigned char 
  1410 ;;  TempVar         1    0[COMRAM] unsigned char 
  1411 ;; Return value:  Size  Location     Type
  1412 ;;                  1    wreg      char 
  1413 ;; Registers used:
  1414 ;;		wreg
  1415 ;; Tracked objects:
  1416 ;;		On entry : 0/0
  1417 ;;		On exit  : 0/0
  1418 ;;		Unchanged: 0/0
  1419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1420 ;;      Params:         0       0       0       0       0
  1421 ;;      Locals:         2       0       0       0       0
  1422 ;;      Temps:          0       0       0       0       0
  1423 ;;      Totals:         2       0       0       0       0
  1424 ;;Total ram usage:        2 bytes
  1425 ;; Hardware stack levels used:    1
  1426 ;; This function calls:
  1427 ;;		Nothing
  1428 ;; This function is called by:
  1429 ;;		_write_latch
  1430 ;;		_send_frame
  1431 ;; This function uses a non-reentrant model
  1432 ;;
  1433                           
  1434                           	psect	text6
  1435  003792                     __ptext6:
  1436                           	opt stack 0
  1437  003792                     _WriteSPI1:
  1438                           	opt stack 27
  1439                           
  1440                           ;incstack = 0
  1441                           ;WriteSPI1@data_out stored from wreg
  1442  003792  CFE8 F002          	movff	wreg,WriteSPI1@data_out
  1443  003796  CFC9 F001          	movff	4041,WriteSPI1@TempVar	;volatile
  1444  00379A  969E               	bcf	3998,3,c	;volatile
  1445  00379C  9EC6               	bcf	4038,7,c	;volatile
  1446  00379E  C002  FFC9         	movff	WriteSPI1@data_out,4041	;volatile
  1447  0037A2  BEC6               	btfsc	4038,7,c	;volatile
  1448  0037A4  0012               	return	
  1449  0037A6                     l120:
  1450  0037A6  B69E               	btfsc	3998,3,c	;volatile
  1451                           
  1452                           ;	Return value of _WriteSPI1 is never used
  1453  0037A8  0012               	return	
  1454  0037AA  D7FD               	goto	l120
  1455  0037AC                     __end_of_WriteSPI1:
  1456                           	opt stack 0
  1457                           prodh	equ	0xFF4
  1458                           prodl	equ	0xFF3
  1459                           postinc0	equ	0xFEE
  1460                           wreg	equ	0xFE8
  1461                           indf2	equ	0xFDF
  1462                           postinc2	equ	0xFDE
  1463                           postdec2	equ	0xFDD
  1464                           fsr2h	equ	0xFDA
  1465                           fsr2l	equ	0xFD9
  1466                           status	equ	0xFD8
  1467                           
  1468 ;; *************** function _addRandom *****************
  1469 ;; Defined at:
  1470 ;;		line 48 in file "led.c"
  1471 ;; Parameters:    Size  Location     Type
  1472 ;;		None
  1473 ;; Auto vars:     Size  Location     Type
  1474 ;;  new_color       4   24[COMRAM] unsigned long 
  1475 ;;  x               2   28[COMRAM] unsigned int 
  1476 ;; Return value:  Size  Location     Type
  1477 ;;		None               void
  1478 ;; Registers used:
  1479 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1480 ;; Tracked objects:
  1481 ;;		On entry : 0/0
  1482 ;;		On exit  : 0/0
  1483 ;;		Unchanged: 0/0
  1484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1485 ;;      Params:         0       0       0       0       0
  1486 ;;      Locals:         6       0       0       0       0
  1487 ;;      Temps:          6       0       0       0       0
  1488 ;;      Totals:        12       0       0       0       0
  1489 ;;Total ram usage:       12 bytes
  1490 ;; Hardware stack levels used:    1
  1491 ;; Hardware stack levels required when called:    2
  1492 ;; This function calls:
  1493 ;;		_rand
  1494 ;; This function is called by:
  1495 ;;		_demoLEDs
  1496 ;; This function uses a non-reentrant model
  1497 ;;
  1498                           
  1499                           	psect	text7
  1500  003974                     __ptext7:
  1501                           	opt stack 0
  1502  003974                     _addRandom:
  1503                           	opt stack 27
  1504                           
  1505                           ;led.c: 49: uint16_t x;
  1506                           ;led.c: 50: uint32_t new_color = 0;
  1507                           
  1508                           ;incstack = 0
  1509  003974  0E00               	movlw	0
  1510  003976  6E19               	movwf	addRandom@new_color,c
  1511  003978  0E00               	movlw	0
  1512  00397A  6E1A               	movwf	addRandom@new_color+1,c
  1513  00397C  0E00               	movlw	0
  1514  00397E  6E1B               	movwf	addRandom@new_color+2,c
  1515  003980  0E00               	movlw	0
  1516  003982  6E1C               	movwf	addRandom@new_color+3,c
  1517                           
  1518                           ;led.c: 53: for(x = (32 - 1) ; x > 0 ; x--)
  1519  003984  0E00               	movlw	0
  1520  003986  6E1E               	movwf	addRandom@x+1,c
  1521  003988  0E1F               	movlw	31
  1522  00398A  6E1D               	movwf	addRandom@x,c
  1523  00398C  501E               	movf	addRandom@x+1,w,c
  1524  00398E  101D               	iorwf	addRandom@x,w,c
  1525  003990  B4D8               	btfsc	status,2,c
  1526  003992  D03A               	goto	l903
  1527                           
  1528                           ;led.c: 54: led_strip_colors[x] = led_strip_colors[x - 1];
  1529  003994  0EFC               	movlw	252
  1530  003996  6E13               	movwf	??_addRandom& (0+255),c
  1531  003998  0EFF               	movlw	255
  1532  00399A  6E14               	movwf	(??_addRandom+1)& (0+255),c
  1533  00399C  C01D  F015         	movff	addRandom@x,??_addRandom+2
  1534  0039A0  C01E  F016         	movff	addRandom@x+1,??_addRandom+3
  1535  0039A4  90D8               	bcf	status,0,c
  1536  0039A6  3615               	rlcf	??_addRandom+2,f,c
  1537  0039A8  3616               	rlcf	??_addRandom+3,f,c
  1538  0039AA  90D8               	bcf	status,0,c
  1539  0039AC  3615               	rlcf	??_addRandom+2,f,c
  1540  0039AE  3616               	rlcf	??_addRandom+3,f,c
  1541  0039B0  5013               	movf	??_addRandom,w,c
  1542  0039B2  2615               	addwf	??_addRandom+2,f,c
  1543  0039B4  5014               	movf	??_addRandom+1,w,c
  1544  0039B6  2216               	addwfc	??_addRandom+3,f,c
  1545  0039B8  0100               	movlb	0	; () banked
  1546  0039BA  0E80               	movlw	low _led_strip_colors
  1547  0039BC  2415               	addwf	??_addRandom+2,w,c
  1548  0039BE  6ED9               	movwf	fsr2l,c
  1549  0039C0  0100               	movlb	0	; () banked
  1550  0039C2  0E00               	movlw	high _led_strip_colors
  1551  0039C4  2016               	addwfc	??_addRandom+3,w,c
  1552  0039C6  6EDA               	movwf	fsr2h,c
  1553  0039C8  C01D  F017         	movff	addRandom@x,??_addRandom+4
  1554  0039CC  C01E  F018         	movff	addRandom@x+1,??_addRandom+5
  1555  0039D0  90D8               	bcf	status,0,c
  1556  0039D2  3617               	rlcf	??_addRandom+4,f,c
  1557  0039D4  3618               	rlcf	??_addRandom+5,f,c
  1558  0039D6  90D8               	bcf	status,0,c
  1559  0039D8  3617               	rlcf	??_addRandom+4,f,c
  1560  0039DA  3618               	rlcf	??_addRandom+5,f,c
  1561  0039DC  0100               	movlb	0	; () banked
  1562  0039DE  0E80               	movlw	low _led_strip_colors
  1563  0039E0  2417               	addwf	??_addRandom+4,w,c
  1564  0039E2  6EE1               	movwf	fsr1l,c
  1565  0039E4  0100               	movlb	0	; () banked
  1566  0039E6  0E00               	movlw	high _led_strip_colors
  1567  0039E8  2018               	addwfc	??_addRandom+5,w,c
  1568  0039EA  6EE2               	movwf	fsr1h,c
  1569  0039EC  CFDE FFE6          	movff	postinc2,postinc1
  1570  0039F0  CFDE FFE6          	movff	postinc2,postinc1
  1571  0039F4  CFDE FFE6          	movff	postinc2,postinc1
  1572  0039F8  CFDD FFE5          	movff	postdec2,postdec1
  1573  0039FC  52E5               	movf	postdec1,f,c
  1574  0039FE  52E5               	movf	postdec1,f,c
  1575                           
  1576                           ; BSR set to: 0
  1577  003A00  061D               	decf	addRandom@x,f,c
  1578  003A02  A0D8               	btfss	status,0,c
  1579  003A04  061E               	decf	addRandom@x+1,f,c
  1580  003A06  D7C2               	goto	L13
  1581  003A08                     l903:
  1582                           
  1583                           ;led.c: 57: for(x = 0 ; x < 3 ; x++){
  1584  003A08  0E00               	movlw	0
  1585  003A0A  6E1E               	movwf	addRandom@x+1,c
  1586  003A0C  0E00               	movlw	0
  1587  003A0E  6E1D               	movwf	addRandom@x,c
  1588  003A10  0E03               	movlw	3
  1589  003A12  5C1D               	subwf	addRandom@x,w,c
  1590  003A14  0E00               	movlw	0
  1591  003A16  581E               	subwfb	addRandom@x+1,w,c
  1592  003A18  B0D8               	btfsc	status,0,c
  1593  003A1A  D01D               	goto	l61
  1594                           
  1595                           ;led.c: 58: new_color <<= 8;
  1596  003A1C  C01B  F01C         	movff	addRandom@new_color+2,addRandom@new_color+3
  1597  003A20  C01A  F01B         	movff	addRandom@new_color+1,addRandom@new_color+2
  1598  003A24  C019  F01A         	movff	addRandom@new_color,addRandom@new_color+1
  1599  003A28  6A19               	clrf	addRandom@new_color,c
  1600                           
  1601                           ;led.c: 59: new_color |= rand();
  1602  003A2A  EC85  F01C         	call	_rand	;wreg free
  1603  003A2E  C00D  F013         	movff	?_rand,??_addRandom
  1604  003A32  C00E  F014         	movff	?_rand+1,??_addRandom+1
  1605  003A36  0E00               	movlw	0
  1606  003A38  BE14               	btfsc	(??_addRandom+1)& (0+255),7,c
  1607  003A3A  0EFF               	movlw	255
  1608  003A3C  6E15               	movwf	(??_addRandom+2)& (0+255),c
  1609  003A3E  6E16               	movwf	(??_addRandom+3)& (0+255),c
  1610  003A40  5013               	movf	??_addRandom,w,c
  1611  003A42  1219               	iorwf	addRandom@new_color,f,c
  1612  003A44  5014               	movf	??_addRandom+1,w,c
  1613  003A46  121A               	iorwf	addRandom@new_color+1,f,c
  1614  003A48  5015               	movf	??_addRandom+2,w,c
  1615  003A4A  121B               	iorwf	addRandom@new_color+2,f,c
  1616  003A4C  5016               	movf	??_addRandom+3,w,c
  1617  003A4E  121C               	iorwf	addRandom@new_color+3,f,c
  1618  003A50  4A1D               	infsnz	addRandom@x,f,c
  1619  003A52  2A1E               	incf	addRandom@x+1,f,c
  1620  003A54  D7DD               	goto	L14
  1621  003A56                     l61:
  1622                           
  1623                           ;led.c: 60: }
  1624                           ;led.c: 61: led_strip_colors[0] = new_color;
  1625  003A56  C019  F080         	movff	addRandom@new_color,_led_strip_colors
  1626  003A5A  C01A  F081         	movff	addRandom@new_color+1,_led_strip_colors+1
  1627  003A5E  C01B  F082         	movff	addRandom@new_color+2,_led_strip_colors+2
  1628  003A62  C01C  F083         	movff	addRandom@new_color+3,_led_strip_colors+3
  1629  003A66  0012               	return	
  1630  003A68                     __end_of_addRandom:
  1631                           	opt stack 0
  1632                           prodh	equ	0xFF4
  1633                           prodl	equ	0xFF3
  1634                           postinc0	equ	0xFEE
  1635                           wreg	equ	0xFE8
  1636                           postinc1	equ	0xFE6
  1637                           postdec1	equ	0xFE5
  1638                           fsr1h	equ	0xFE2
  1639                           fsr1l	equ	0xFE1
  1640                           indf2	equ	0xFDF
  1641                           postinc2	equ	0xFDE
  1642                           postdec2	equ	0xFDD
  1643                           fsr2h	equ	0xFDA
  1644                           fsr2l	equ	0xFD9
  1645                           status	equ	0xFD8
  1646                           
  1647 ;; *************** function _rand *****************
  1648 ;; Defined at:
  1649 ;;		line 13 in file "/opt/microchip/xc8/v1.30/sources/common/rand.c"
  1650 ;; Parameters:    Size  Location     Type
  1651 ;;		None
  1652 ;; Auto vars:     Size  Location     Type
  1653 ;;		None
  1654 ;; Return value:  Size  Location     Type
  1655 ;;                  2   12[COMRAM] int 
  1656 ;; Registers used:
  1657 ;;		wreg, status,2, status,0, cstack
  1658 ;; Tracked objects:
  1659 ;;		On entry : 0/0
  1660 ;;		On exit  : 0/0
  1661 ;;		Unchanged: 0/0
  1662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1663 ;;      Params:         2       0       0       0       0
  1664 ;;      Locals:         0       0       0       0       0
  1665 ;;      Temps:          4       0       0       0       0
  1666 ;;      Totals:         6       0       0       0       0
  1667 ;;Total ram usage:        6 bytes
  1668 ;; Hardware stack levels used:    1
  1669 ;; Hardware stack levels required when called:    1
  1670 ;; This function calls:
  1671 ;;		___lmul
  1672 ;;		_srand
  1673 ;; This function is called by:
  1674 ;;		_addRandom
  1675 ;; This function uses a non-reentrant model
  1676 ;;
  1677                           
  1678                           	psect	text8
  1679  00390A                     __ptext8:
  1680                           	opt stack 0
  1681  00390A                     _rand:
  1682                           	opt stack 27
  1683                           
  1684                           ;incstack = 0
  1685  00390A  662C               	tstfsz	_randf,c
  1686  00390C  D006               	goto	l867
  1687  00390E  0E00               	movlw	0
  1688  003910  6E02               	movwf	srand@x+1,c
  1689  003912  0E01               	movlw	1
  1690  003914  6E01               	movwf	srand@x,c
  1691  003916  ECBE  F01B         	call	_srand	;wreg free
  1692  00391A                     l867:
  1693  00391A  C028  F001         	movff	_randx,___lmul@multiplier
  1694  00391E  C029  F002         	movff	_randx+1,___lmul@multiplier+1
  1695  003922  C02A  F003         	movff	_randx+2,___lmul@multiplier+2
  1696  003926  C02B  F004         	movff	_randx+3,___lmul@multiplier+3
  1697  00392A  0E6D               	movlw	109
  1698  00392C  6E05               	movwf	___lmul@multiplicand,c
  1699  00392E  0E4E               	movlw	78
  1700  003930  6E06               	movwf	___lmul@multiplicand+1,c
  1701  003932  0EC6               	movlw	198
  1702  003934  6E07               	movwf	___lmul@multiplicand+2,c
  1703  003936  0E41               	movlw	65
  1704  003938  6E08               	movwf	___lmul@multiplicand+3,c
  1705  00393A  EC5A  F01C         	call	___lmul	;wreg free
  1706  00393E  C001  F00F         	movff	?___lmul,??_rand
  1707  003942  C002  F010         	movff	?___lmul+1,??_rand+1
  1708  003946  C003  F011         	movff	?___lmul+2,??_rand+2
  1709  00394A  C004  F012         	movff	?___lmul+3,??_rand+3
  1710  00394E  0E39               	movlw	57
  1711  003950  240F               	addwf	??_rand,w,c
  1712  003952  6E28               	movwf	_randx,c
  1713  003954  0E30               	movlw	48
  1714  003956  2010               	addwfc	??_rand+1,w,c
  1715  003958  6E29               	movwf	_randx+1,c
  1716  00395A  0E00               	movlw	0
  1717  00395C  2011               	addwfc	??_rand+2,w,c
  1718  00395E  6E2A               	movwf	_randx+2,c
  1719  003960  0E00               	movlw	0
  1720  003962  2012               	addwfc	??_rand+3,w,c
  1721  003964  6E2B               	movwf	_randx+3,c
  1722  003966  0EFF               	movlw	255
  1723  003968  142A               	andwf	(_randx+2)& (0+255),w,c
  1724  00396A  6E0D               	movwf	?_rand,c
  1725  00396C  0E7F               	movlw	127
  1726  00396E  142B               	andwf	(_randx+3)& (0+255),w,c
  1727  003970  6E0E               	movwf	?_rand+1,c
  1728  003972  0012               	return	
  1729  003974                     __end_of_rand:
  1730                           	opt stack 0
  1731                           prodh	equ	0xFF4
  1732                           prodl	equ	0xFF3
  1733                           postinc0	equ	0xFEE
  1734                           wreg	equ	0xFE8
  1735                           postinc1	equ	0xFE6
  1736                           postdec1	equ	0xFE5
  1737                           fsr1h	equ	0xFE2
  1738                           fsr1l	equ	0xFE1
  1739                           indf2	equ	0xFDF
  1740                           postinc2	equ	0xFDE
  1741                           postdec2	equ	0xFDD
  1742                           fsr2h	equ	0xFDA
  1743                           fsr2l	equ	0xFD9
  1744                           status	equ	0xFD8
  1745                           
  1746 ;; *************** function _srand *****************
  1747 ;; Defined at:
  1748 ;;		line 7 in file "/opt/microchip/xc8/v1.30/sources/common/rand.c"
  1749 ;; Parameters:    Size  Location     Type
  1750 ;;  x               2    0[COMRAM] unsigned int 
  1751 ;; Auto vars:     Size  Location     Type
  1752 ;;		None
  1753 ;; Return value:  Size  Location     Type
  1754 ;;		None               void
  1755 ;; Registers used:
  1756 ;;		status,2
  1757 ;; Tracked objects:
  1758 ;;		On entry : 0/0
  1759 ;;		On exit  : 0/0
  1760 ;;		Unchanged: 0/0
  1761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1762 ;;      Params:         2       0       0       0       0
  1763 ;;      Locals:         0       0       0       0       0
  1764 ;;      Temps:          1       0       0       0       0
  1765 ;;      Totals:         3       0       0       0       0
  1766 ;;Total ram usage:        3 bytes
  1767 ;; Hardware stack levels used:    1
  1768 ;; This function calls:
  1769 ;;		Nothing
  1770 ;; This function is called by:
  1771 ;;		_rand
  1772 ;; This function uses a non-reentrant model
  1773 ;;
  1774                           
  1775                           	psect	text9
  1776  00377C                     __ptext9:
  1777                           	opt stack 0
  1778  00377C                     _srand:
  1779                           	opt stack 27
  1780                           
  1781                           ;incstack = 0
  1782  00377C  C001  F028         	movff	srand@x,_randx
  1783  003780  C002  F029         	movff	srand@x+1,_randx+1
  1784  003784  6A2A               	clrf	_randx+2,c
  1785  003786  6A2B               	clrf	_randx+3,c
  1786  003788  6E03               	movwf	??_srand& (0+255),c
  1787  00378A  0E01               	movlw	1
  1788  00378C  6E2C               	movwf	_randf,c
  1789  00378E  5003               	movf	??_srand& (0+255),w,c
  1790  003790  0012               	return	
  1791  003792                     __end_of_srand:
  1792                           	opt stack 0
  1793                           prodh	equ	0xFF4
  1794                           prodl	equ	0xFF3
  1795                           postinc0	equ	0xFEE
  1796                           wreg	equ	0xFE8
  1797                           postinc1	equ	0xFE6
  1798                           postdec1	equ	0xFE5
  1799                           fsr1h	equ	0xFE2
  1800                           fsr1l	equ	0xFE1
  1801                           indf2	equ	0xFDF
  1802                           postinc2	equ	0xFDE
  1803                           postdec2	equ	0xFDD
  1804                           fsr2h	equ	0xFDA
  1805                           fsr2l	equ	0xFD9
  1806                           status	equ	0xFD8
  1807                           
  1808 ;; *************** function ___lmul *****************
  1809 ;; Defined at:
  1810 ;;		line 2 in file "/opt/microchip/xc8/v1.30/sources/common/lmul.c"
  1811 ;; Parameters:    Size  Location     Type
  1812 ;;  multiplier      4    0[COMRAM] unsigned long 
  1813 ;;  multiplicand    4    4[COMRAM] unsigned long 
  1814 ;; Auto vars:     Size  Location     Type
  1815 ;;  product         4    8[COMRAM] unsigned long 
  1816 ;; Return value:  Size  Location     Type
  1817 ;;                  4    0[COMRAM] unsigned long 
  1818 ;; Registers used:
  1819 ;;		wreg, status,2, status,0
  1820 ;; Tracked objects:
  1821 ;;		On entry : 0/0
  1822 ;;		On exit  : 0/0
  1823 ;;		Unchanged: 0/0
  1824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1825 ;;      Params:         8       0       0       0       0
  1826 ;;      Locals:         4       0       0       0       0
  1827 ;;      Temps:          0       0       0       0       0
  1828 ;;      Totals:        12       0       0       0       0
  1829 ;;Total ram usage:       12 bytes
  1830 ;; Hardware stack levels used:    1
  1831 ;; This function calls:
  1832 ;;		Nothing
  1833 ;; This function is called by:
  1834 ;;		_rand
  1835 ;; This function uses a non-reentrant model
  1836 ;;
  1837                           
  1838                           	psect	text10
  1839  0038B4                     __ptext10:
  1840                           	opt stack 0
  1841  0038B4                     ___lmul:
  1842                           	opt stack 27
  1843                           
  1844                           ;incstack = 0
  1845  0038B4  0E00               	movlw	0
  1846  0038B6  6E09               	movwf	___lmul@product,c
  1847  0038B8  0E00               	movlw	0
  1848  0038BA  6E0A               	movwf	___lmul@product+1,c
  1849  0038BC  0E00               	movlw	0
  1850  0038BE  6E0B               	movwf	___lmul@product+2,c
  1851  0038C0  0E00               	movlw	0
  1852  0038C2  6E0C               	movwf	___lmul@product+3,c
  1853  0038C4                     l823:
  1854  0038C4  A001               	btfss	___lmul@multiplier,0,c
  1855  0038C6  D008               	goto	l827
  1856  0038C8  5005               	movf	___lmul@multiplicand,w,c
  1857  0038CA  2609               	addwf	___lmul@product,f,c
  1858  0038CC  5006               	movf	___lmul@multiplicand+1,w,c
  1859  0038CE  220A               	addwfc	___lmul@product+1,f,c
  1860  0038D0  5007               	movf	___lmul@multiplicand+2,w,c
  1861  0038D2  220B               	addwfc	___lmul@product+2,f,c
  1862  0038D4  5008               	movf	___lmul@multiplicand+3,w,c
  1863  0038D6  220C               	addwfc	___lmul@product+3,f,c
  1864  0038D8                     l827:
  1865  0038D8  90D8               	bcf	status,0,c
  1866  0038DA  3605               	rlcf	___lmul@multiplicand,f,c
  1867  0038DC  3606               	rlcf	___lmul@multiplicand+1,f,c
  1868  0038DE  3607               	rlcf	___lmul@multiplicand+2,f,c
  1869  0038E0  3608               	rlcf	___lmul@multiplicand+3,f,c
  1870  0038E2  90D8               	bcf	status,0,c
  1871  0038E4  3204               	rrcf	___lmul@multiplier+3,f,c
  1872  0038E6  3203               	rrcf	___lmul@multiplier+2,f,c
  1873  0038E8  3202               	rrcf	___lmul@multiplier+1,f,c
  1874  0038EA  3201               	rrcf	___lmul@multiplier,f,c
  1875  0038EC  5004               	movf	___lmul@multiplier+3,w,c
  1876  0038EE  1001               	iorwf	___lmul@multiplier,w,c
  1877  0038F0  1002               	iorwf	___lmul@multiplier+1,w,c
  1878  0038F2  1003               	iorwf	___lmul@multiplier+2,w,c
  1879  0038F4  A4D8               	btfss	status,2,c
  1880  0038F6  D7E6               	goto	l823
  1881  0038F8  C009  F001         	movff	___lmul@product,?___lmul
  1882  0038FC  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  1883  003900  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  1884  003904  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  1885  003908  0012               	return	
  1886  00390A                     __end_of___lmul:
  1887                           	opt stack 0
  1888                           prodh	equ	0xFF4
  1889                           prodl	equ	0xFF3
  1890                           postinc0	equ	0xFEE
  1891                           wreg	equ	0xFE8
  1892                           postinc1	equ	0xFE6
  1893                           postdec1	equ	0xFE5
  1894                           fsr1h	equ	0xFE2
  1895                           fsr1l	equ	0xFE1
  1896                           indf2	equ	0xFDF
  1897                           postinc2	equ	0xFDE
  1898                           postdec2	equ	0xFDD
  1899                           fsr2h	equ	0xFDA
  1900                           fsr2l	equ	0xFD9
  1901                           status	equ	0xFD8
  1902                           
  1903 ;; *************** function ___lwmod *****************
  1904 ;; Defined at:
  1905 ;;		line 8 in file "/opt/microchip/xc8/v1.30/sources/common/lwmod.c"
  1906 ;; Parameters:    Size  Location     Type
  1907 ;;  dividend        2    0[COMRAM] unsigned int 
  1908 ;;  divisor         2    2[COMRAM] unsigned int 
  1909 ;; Auto vars:     Size  Location     Type
  1910 ;;  counter         1    5[COMRAM] unsigned char 
  1911 ;; Return value:  Size  Location     Type
  1912 ;;                  2    0[COMRAM] unsigned int 
  1913 ;; Registers used:
  1914 ;;		wreg, status,2, status,0
  1915 ;; Tracked objects:
  1916 ;;		On entry : 0/0
  1917 ;;		On exit  : 0/0
  1918 ;;		Unchanged: 0/0
  1919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1920 ;;      Params:         4       0       0       0       0
  1921 ;;      Locals:         1       0       0       0       0
  1922 ;;      Temps:          1       0       0       0       0
  1923 ;;      Totals:         6       0       0       0       0
  1924 ;;Total ram usage:        6 bytes
  1925 ;; Hardware stack levels used:    1
  1926 ;; This function calls:
  1927 ;;		Nothing
  1928 ;; This function is called by:
  1929 ;;		_demoLEDs
  1930 ;; This function uses a non-reentrant model
  1931 ;;
  1932                           
  1933                           	psect	text11
  1934  003820                     __ptext11:
  1935                           	opt stack 0
  1936  003820                     ___lwmod:
  1937                           	opt stack 29
  1938                           
  1939                           ;incstack = 0
  1940  003820  5004               	movf	___lwmod@divisor+1,w,c
  1941  003822  1003               	iorwf	___lwmod@divisor,w,c
  1942  003824  B4D8               	btfsc	status,2,c
  1943  003826  D01A               	goto	l638
  1944  003828  6E05               	movwf	??___lwmod& (0+255),c
  1945  00382A  0E01               	movlw	1
  1946  00382C  6E06               	movwf	___lwmod@counter,c
  1947  00382E  5005               	movf	??___lwmod& (0+255),w,c
  1948  003830  D004               	goto	l837
  1949  003832                     l835:
  1950  003832  90D8               	bcf	status,0,c
  1951  003834  3603               	rlcf	___lwmod@divisor,f,c
  1952  003836  3604               	rlcf	___lwmod@divisor+1,f,c
  1953  003838  2A06               	incf	___lwmod@counter,f,c
  1954  00383A                     l837:
  1955  00383A  AE04               	btfss	___lwmod@divisor+1,7,c
  1956  00383C  D7FA               	goto	l835
  1957  00383E                     l839:
  1958  00383E  5003               	movf	___lwmod@divisor,w,c
  1959  003840  5C01               	subwf	___lwmod@dividend,w,c
  1960  003842  5004               	movf	___lwmod@divisor+1,w,c
  1961  003844  5802               	subwfb	___lwmod@dividend+1,w,c
  1962  003846  A0D8               	btfss	status,0,c
  1963  003848  D004               	goto	l843
  1964  00384A  5003               	movf	___lwmod@divisor,w,c
  1965  00384C  5E01               	subwf	___lwmod@dividend,f,c
  1966  00384E  5004               	movf	___lwmod@divisor+1,w,c
  1967  003850  5A02               	subwfb	___lwmod@dividend+1,f,c
  1968  003852                     l843:
  1969  003852  90D8               	bcf	status,0,c
  1970  003854  3204               	rrcf	___lwmod@divisor+1,f,c
  1971  003856  3203               	rrcf	___lwmod@divisor,f,c
  1972  003858  2E06               	decfsz	___lwmod@counter,f,c
  1973  00385A  D7F1               	goto	l839
  1974  00385C                     l638:
  1975  00385C  C001  F001         	movff	___lwmod@dividend,?___lwmod
  1976  003860  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  1977  003864  0012               	return	
  1978  003866                     __end_of___lwmod:
  1979                           	opt stack 0
  1980  0000                     prodh	equ	0xFF4
  1981                           prodl	equ	0xFF3
  1982                           postinc0	equ	0xFEE
  1983                           wreg	equ	0xFE8
  1984                           postinc1	equ	0xFE6
  1985                           postdec1	equ	0xFE5
  1986                           fsr1h	equ	0xFE2
  1987                           fsr1l	equ	0xFE1
  1988                           indf2	equ	0xFDF
  1989                           postinc2	equ	0xFDE
  1990                           postdec2	equ	0xFDD
  1991                           fsr2h	equ	0xFDA
  1992                           fsr2l	equ	0xFD9
  1993                           status	equ	0xFD8
  1994                           prodh	equ	0xFF4
  1995                           prodl	equ	0xFF3
  1996                           postinc0	equ	0xFEE
  1997                           wreg	equ	0xFE8
  1998                           postinc1	equ	0xFE6
  1999                           postdec1	equ	0xFE5
  2000                           fsr1h	equ	0xFE2
  2001                           fsr1l	equ	0xFE1
  2002                           indf2	equ	0xFDF
  2003                           postinc2	equ	0xFDE
  2004                           postdec2	equ	0xFDD
  2005                           fsr2h	equ	0xFDA
  2006                           fsr2l	equ	0xFD9
  2007                           status	equ	0xFD8
  2008                           
  2009                           	psect	rparam
  2010  0000                     prodh	equ	0xFF4
  2011                           prodl	equ	0xFF3
  2012                           postinc0	equ	0xFEE
  2013                           wreg	equ	0xFE8
  2014                           postinc1	equ	0xFE6
  2015                           postdec1	equ	0xFE5
  2016                           fsr1h	equ	0xFE2
  2017                           fsr1l	equ	0xFE1
  2018                           indf2	equ	0xFDF
  2019                           postinc2	equ	0xFDE
  2020                           postdec2	equ	0xFDD
  2021                           fsr2h	equ	0xFDA
  2022                           fsr2l	equ	0xFD9
  2023                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         133
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     39      44
    BANK0           128      0     128
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_demoLEDs
    _demoLEDs->_addRandom
    _send_frame->_write_latch
    _write_latch->___wmul
    _addRandom->_rand
    _rand->___lmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     0      5    1600
                                             34 COMRAM     5     0      5
                           _demoLEDs
                           _setupSPI
 ---------------------------------------------------------------------------------
 (1) _setupSPI                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _demoLEDs                                             4     4      0    1600
                                             30 COMRAM     4     4      0
                            ___lwmod
                          _addRandom
                         _send_frame
 ---------------------------------------------------------------------------------
 (2) _send_frame                                          11    11      0     387
                                             11 COMRAM    11    11      0
                          _WriteSPI1
                        _write_latch
 ---------------------------------------------------------------------------------
 (3) _write_latch                                          5     3      2     252
                                              6 COMRAM     5     3      2
                          _WriteSPI1
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     173
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _WriteSPI1                                            2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _addRandom                                           12    12      0     334
                                             18 COMRAM    12    12      0
                               _rand
 ---------------------------------------------------------------------------------
 (3) _rand                                                 6     4      2     229
                                             12 COMRAM     6     4      2
                             ___lmul
                              _srand
 ---------------------------------------------------------------------------------
 (4) _srand                                                3     1      2      49
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     180
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     309
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _demoLEDs
     ___lwmod
     _addRandom
       _rand
         ___lmul
         _srand
     _send_frame
       _WriteSPI1
       _write_latch
         _WriteSPI1
         ___wmul
   _setupSPI

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0      80       4      100.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     27      2C       1       34.6%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      AC      11        0.0%
DATA                 0      0      AC      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Tue May  6 04:26:17 2014

                     l61 3A56      ___wmul@multiplicand 0003             __CFG_CP0$OFF 000000  
                    l120 37A6                      l638 385C                      l823 38C4  
                    l903 3A08                      l843 3852                      l835 3832  
                    l827 38D8                      l837 383A                      l861 38AA  
                    l839 383E                      l927 3B8A                      l857 389E  
                    l867 391A                      l963 3CAA                      l939 3BDC  
                    l981 3DBC                      l973 3D12                      l889 3B52  
                    l977 3D66                      l985 3DC2                      l997 3DF0  
                    u125 3876                      u160 3B2C                      u165 3B22  
                    u517 3B7A                      u527 3C9A                      u537 3DE0  
                    u547 3EA0                      u557 3F60                      u567 3FE8  
         send_frame@blue 0014                      wreg 000FE8             __CFG_IESO$ON 000000  
           __CFG_FOSC$EC 000000                     l1005 3E40                     l1013 3E82  
                   l1033 3F00                     l1041 3F42                     l1025 3EB0  
                   l1009 3E7C                     l1053 3F70                     l1037 3F3C  
                   l1065 3FC2                     l1067 3FC6                     l1085 37E0  
                   _LATA 000F89                     _LATB 000F8A                     _LATC 000F8B  
          __CFG_FCMEN$ON 000000                     _main 37C8                     _rand 390A  
                   fsr1l 000FE1                     indf2 000FDF                     fsr2l 000FD9  
                   prodh 000FF4                     prodl 000FF3                     start 0000  
        send_frame@green 0013            __CFG_FOSC2$ON 000000                    ?_main 0023  
                  ?_rand 000D          __end_of___lwmod 3866                    _PORTB 000F81  
                  _PORTC 000F82                    _TRISB 000F93      ___lmul@multiplicand 0005  
            _write_latch 3866           write_latch@len 0007                    _randf 002C  
                  _randx 0028                    _srand 377C                    status 000FD8  
        __initialization 37AC             __end_of_main 37E6             __end_of_rand 3974  
                 ??_main 0028                   ??_rand 000F            __activetblptr 000000  
                 _ADCON1 000FC1                   ?_srand 0001           __CFG_WDTEN$OFF 000000  
       __end_of_demoLEDs 3FF8           __CFG_XINST$OFF 000000                   ___lmul 38B4  
                 ___wmul 37E6           __CFG_STVREN$ON 000000                ??___lwmod 0005  
                 clear_0 37B2         __end_of_setupSPI 377C                   srand@x 0001  
     __size_of_addRandom 00F4               __accesstop 0080  __end_of__initialization 37C2  
     __size_of_WriteSPI1 001A           __pcstackCOMRAM 0001            __end_of_srand 3792  
             addRandom@x 001D                  ??_srand 0003               __pbssBANK0 0080  
       WriteSPI1@TempVar 0001                  ?___lmul 0001                  ?___wmul 0001  
         ___lmul@product 0009        __end_of_addRandom 3A68        __end_of_WriteSPI1 37AC  
              ?_demoLEDs 0001             ?_write_latch 0007                  _SSP1BUF 000FC9  
                _SSPCON1 000FC6                  _SSPSTAT 000FC7              send_frame@i 0015  
                __Hparam 0000                  __Lparam 0000                ?_setupSPI 0001  
        __size_of___lmul 0056          __size_of___wmul 003A                  ___lwmod 3820  
                __pcinit 37AC                  __ramtop 0400                  __ptext0 37C8  
                __ptext1 376C                  __ptext2 3B60                  __ptext3 3A68  
                __ptext4 3866                  __ptext5 37E6                  __ptext6 3792  
                __ptext7 3974                  __ptext8 390A                  __ptext9 377C  
             ??_demoLEDs 001F     end_of_initialization 37C2               _send_frame 3A68  
       _led_strip_colors 0080               ??_setupSPI 0001                  postdec1 000FE5  
                postdec2 000FDD                  postinc0 000FEE                  postinc1 000FE6  
                postinc2 000FDE                _TRISCbits 000F94            send_frame@red 0012  
         __end_of___lmul 390A           __end_of___wmul 3820      start_initialization 37AC  
   __size_of_write_latch 004E              ?_send_frame 0001                 ??___lmul 0009  
               ??___wmul 0005              __pbssCOMRAM 0028                _addRandom 3974  
              _WriteSPI1 3792        __size_of_demoLEDs 0498      __CFG_CCP2MX$DEFAULT 000000  
      WriteSPI1@data_out 0002                 ?___lwmod 0001        __size_of_setupSPI 0010  
    __size_of_send_frame 00F8               ?_addRandom 0001               ?_WriteSPI1 0001  
              demoLEDs@i 0021           __size_of_srand 0016           ___wmul@product 0005  
               _PIR1bits 000F9E         __CFG_WDTPS$32768 000000                 _SSP1CON1 000FC6  
      ___wmul@multiplier 0001       addRandom@new_color 0019        ___lmul@multiplier 0001  
               __Hrparam 0000                 __Lrparam 0000         __size_of___lwmod 0046  
               _demoLEDs 3B60              ??_addRandom 0013              ??_WriteSPI1 0001  
               __ptext10 38B4                 __ptext11 3820             _SSP1CON1bits 000FC6  
           ??_send_frame 000C            __size_of_main 001E            __size_of_rand 006A  
               _setupSPI 376C                 main@argc 0023                 main@argv 0025  
     __end_of_send_frame 3B60            ??_write_latch 0009         ___lwmod@dividend 0001  
        ___lwmod@divisor 0003          ___lwmod@counter 0006      __end_of_write_latch 38B4  
