

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Tue May  6 04:21:33 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F24J10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    23  0000                     _ADCON1	set	4033
    24  0000                     _LATA	set	3977
    25  0000                     _LATB	set	3978
    26  0000                     _LATC	set	3979
    27  0000                     _PIR1bits	set	3998
    28  0000                     _PORTB	set	3969
    29  0000                     _PORTC	set	3970
    30  0000                     _SSP1BUF	set	4041
    31  0000                     _SSP1CON1	set	4038
    32  0000                     _SSP1CON1bits	set	4038
    33  0000                     _SSPBUF	set	4041
    34  0000                     _SSPCON1	set	4038
    35  0000                     _SSPSTAT	set	4039
    36  0000                     _SSPSTATbits	set	4039
    37  0000                     _TRISB	set	3987
    38  0000                     _TRISCbits	set	3988
    39                           
    40                           ; 0 bytes @ 0x27
    41 ;;
    42 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    43 ;;
    44 ;; *************** function _main *****************
    45 ;; Defined at:
    46 ;;		line 14 in file "main.c"
    47 ;; Parameters:    Size  Location     Type
    48 ;;  argc            2   34[COMRAM] int 
    49 ;;  argv            3   36[COMRAM] PTR PTR unsigned char 
    50 ;; Auto vars:     Size  Location     Type
    51 ;;		None
    52 ;; Return value:  Size  Location     Type
    53 ;;                  2   34[COMRAM] int 
    54 ;; Registers used:
    55 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
    56 ;; Tracked objects:
    57 ;;		On entry : 0/0
    58 ;;		On exit  : 0/0
    59 ;;		Unchanged: 0/0
    60 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
    61 ;;      Params:         5       0       0       0       0
    62 ;;      Locals:         0       0       0       0       0
    63 ;;      Temps:          0       0       0       0       0
    64 ;;      Totals:         5       0       0       0       0
    65 ;;Total ram usage:        5 bytes
    66 ;; Hardware stack levels required when called:    4
    67 ;; This function calls:
    68 ;;		_demoLEDs
    69 ;;		_setupSPI
    70 ;; This function is called by:
    71 ;;		Startup code after reset
    72 ;; This function uses a non-reentrant model
    73 ;;
    74                           
    75                           	psect	text0
    76  0037C8                     __ptext0:
    77                           	opt stack 0
    78  0037C8                     _main:
    79                           	opt stack 27
    80                           
    81                           ;main.c: 17: LATA = 0x00;
    82                           
    83                           ;incstack = 0
    84  0037C8  0E00               	movlw	0
    85  0037CA  6E89               	movwf	3977,c	;volatile
    86                           
    87                           ;main.c: 18: LATB = 0x00;
    88  0037CC  0E00               	movlw	0
    89  0037CE  6E8A               	movwf	3978,c	;volatile
    90                           
    91                           ;main.c: 19: LATC = 0x00;
    92  0037D0  0E00               	movlw	0
    93  0037D2  6E8B               	movwf	3979,c	;volatile
    94                           
    95                           ;main.c: 22: ADCON1 = 0x0F;
    96  0037D4  0E0F               	movlw	15
    97  0037D6  6EC1               	movwf	4033,c	;volatile
    98                           
    99                           ;main.c: 25: TRISB = 0x00;
   100  0037D8  0E00               	movlw	0
   101  0037DA  6E93               	movwf	3987,c	;volatile
   102                           
   103                           ;main.c: 29: setupSPI();
   104  0037DC  ECB6  F01B         	call	_setupSPI	;wreg free
   105  0037E0                     l1097:
   106                           
   107                           ;main.c: 32: {
   108                           ;main.c: 37: demoLEDs();
   109  0037E0  ECB0  F01D         	call	_demoLEDs	;wreg free
   110  0037E4  D7FD               	goto	l1097
   111  0037E6                     __end_of_main:
   112                           	opt stack 0
   113                           
   114                           	psect	cinit
   115  0037AC                     __pcinit:
   116                           	opt stack 0
   117  0037AC                     start_initialization:
   118                           	opt stack 0
   119  0037AC                     __initialization:
   120                           	opt stack 0
   121                           
   122                           ; Clear objects allocated to BANK0 (128 bytes)
   123  0037AC  EE00  F080         	lfsr	0,__pbssBANK0
   124  0037B0  0E80               	movlw	128
   125  0037B2                     clear_0:
   126  0037B2  6AEE               	clrf	postinc0,c
   127  0037B4  06E8               	decf	wreg,f,c
   128  0037B6  E1FD               	bnz	clear_0
   129                           
   130                           ; Clear objects allocated to COMRAM (5 bytes)
   131  0037B8  6A2C               	clrf	(__pbssCOMRAM+4)& (0+255),c
   132  0037BA  6A2B               	clrf	(__pbssCOMRAM+3)& (0+255),c
   133  0037BC  6A2A               	clrf	(__pbssCOMRAM+2)& (0+255),c
   134  0037BE  6A29               	clrf	(__pbssCOMRAM+1)& (0+255),c
   135  0037C0  6A28               	clrf	__pbssCOMRAM& (0+255),c
   136  0037C2                     end_of_initialization:
   137                           	opt stack 0
   138  0037C2                     __end_of__initialization:
   139                           	opt stack 0
   140  0037C2  0100               	movlb	0
   141  0037C4  EFE4  F01B         	goto	_main	;jump to C main() function
   142                           postinc0	equ	0xFEE
   143                           wreg	equ	0xFE8
   144                           
   145                           	psect	bssCOMRAM
   146  000028                     __pbssCOMRAM:
   147                           	opt stack 0
   148  000028                     _randx:
   149                           	opt stack 0
   150  000028                     	ds	4
   151  00002C                     _randf:
   152                           	opt stack 0
   153  00002C                     	ds	1
   154                           postinc0	equ	0xFEE
   155                           wreg	equ	0xFE8
   156                           
   157                           	psect	bssBANK0
   158  000080                     __pbssBANK0:
   159                           	opt stack 0
   160  000080                     _led_strip_colors:
   161                           	opt stack 0
   162  000080                     	ds	128
   163                           postinc0	equ	0xFEE
   164                           wreg	equ	0xFE8
   165                           
   166                           	psect	cstackCOMRAM
   167  000001                     __pcstackCOMRAM:
   168                           	opt stack 0
   169  000001                     ?___lwmod:
   170                           	opt stack 0
   171  000001                     ?___wmul:
   172                           	opt stack 0
   173  000001                     ?___lmul:
   174                           	opt stack 0
   175  000001                     WriteSPI1@TempVar:
   176                           	opt stack 0
   177  000001                     ___lwmod@dividend:
   178                           	opt stack 0
   179  000001                     srand@x:
   180                           	opt stack 0
   181  000001                     ___wmul@multiplier:
   182                           	opt stack 0
   183  000001                     ___lmul@multiplier:
   184                           	opt stack 0
   185                           
   186                           ; 4 bytes @ 0x0
   187  000001                     	ds	1
   188  000002                     WriteSPI1@data_out:
   189                           	opt stack 0
   190                           
   191                           ; 1 bytes @ 0x1
   192  000002                     	ds	1
   193  000003                     ??_srand:
   194  000003                     ___lwmod@divisor:
   195                           	opt stack 0
   196  000003                     ___wmul@multiplicand:
   197                           	opt stack 0
   198                           
   199                           ; 2 bytes @ 0x2
   200  000003                     	ds	2
   201  000005                     ??___lwmod:
   202  000005                     ___wmul@product:
   203                           	opt stack 0
   204  000005                     ___lmul@multiplicand:
   205                           	opt stack 0
   206                           
   207                           ; 4 bytes @ 0x4
   208  000005                     	ds	1
   209  000006                     ___lwmod@counter:
   210                           	opt stack 0
   211                           
   212                           ; 1 bytes @ 0x5
   213  000006                     	ds	1
   214  000007                     write_latch@len:
   215                           	opt stack 0
   216                           
   217                           ; 2 bytes @ 0x6
   218  000007                     	ds	2
   219  000009                     ??_write_latch:
   220  000009                     ___lmul@product:
   221                           	opt stack 0
   222                           
   223                           ; 4 bytes @ 0x8
   224  000009                     	ds	3
   225  00000C                     ??_send_frame:
   226                           
   227                           ; 0 bytes @ 0xB
   228  00000C                     	ds	1
   229  00000D                     ?_rand:
   230                           	opt stack 0
   231                           
   232                           ; 2 bytes @ 0xC
   233  00000D                     	ds	2
   234  00000F                     ??_rand:
   235                           
   236                           ; 0 bytes @ 0xE
   237  00000F                     	ds	3
   238  000012                     send_frame@red:
   239                           	opt stack 0
   240                           
   241                           ; 1 bytes @ 0x11
   242  000012                     	ds	1
   243  000013                     ??_addRandom:
   244  000013                     send_frame@green:
   245                           	opt stack 0
   246                           
   247                           ; 1 bytes @ 0x12
   248  000013                     	ds	1
   249  000014                     send_frame@blue:
   250                           	opt stack 0
   251                           
   252                           ; 1 bytes @ 0x13
   253  000014                     	ds	1
   254  000015                     send_frame@i:
   255                           	opt stack 0
   256                           
   257                           ; 2 bytes @ 0x14
   258  000015                     	ds	4
   259  000019                     addRandom@new_color:
   260                           	opt stack 0
   261                           
   262                           ; 4 bytes @ 0x18
   263  000019                     	ds	4
   264  00001D                     addRandom@x:
   265                           	opt stack 0
   266                           
   267                           ; 2 bytes @ 0x1C
   268  00001D                     	ds	2
   269  00001F                     ??_demoLEDs:
   270                           
   271                           ; 0 bytes @ 0x1E
   272  00001F                     	ds	2
   273  000021                     demoLEDs@i:
   274                           	opt stack 0
   275                           
   276                           ; 2 bytes @ 0x20
   277  000021                     	ds	2
   278  000023                     
   279                           ; 2 bytes @ 0x22
   280  000023                     	ds	2
   281  000025                     
   282                           ; 3 bytes @ 0x24
   283  000025                     	ds	3
   284  000028                     postinc0	equ	0xFEE
   285                           wreg	equ	0xFE8
   286                           
   287 ;; *************** function _setupSPI *****************
   288 ;; Defined at:
   289 ;;		line 3 in file "spi.c"
   290 ;; Parameters:    Size  Location     Type
   291 ;;		None
   292 ;; Auto vars:     Size  Location     Type
   293 ;;		None
   294 ;; Return value:  Size  Location     Type
   295 ;;		None               void
   296 ;; Registers used:
   297 ;;		wreg, status,2
   298 ;; Tracked objects:
   299 ;;		On entry : 0/0
   300 ;;		On exit  : 0/0
   301 ;;		Unchanged: 0/0
   302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   303 ;;      Params:         0       0       0       0       0
   304 ;;      Locals:         0       0       0       0       0
   305 ;;      Temps:          0       0       0       0       0
   306 ;;      Totals:         0       0       0       0       0
   307 ;;Total ram usage:        0 bytes
   308 ;; Hardware stack levels used:    1
   309 ;; This function calls:
   310 ;;		Nothing
   311 ;; This function is called by:
   312 ;;		_main
   313 ;; This function uses a non-reentrant model
   314 ;;
   315                           
   316                           	psect	text1
   317  00376C                     __ptext1:
   318                           	opt stack 0
   319  00376C                     _setupSPI:
   320                           	opt stack 30
   321                           
   322                           ;spi.c: 6: TRISCbits.TRISC5= 0;
   323                           
   324                           ;incstack = 0
   325  00376C  9A94               	bcf	3988,5,c	;volatile
   326                           
   327                           ;spi.c: 7: TRISCbits.TRISC4= 1;
   328  00376E  8894               	bsf	3988,4,c	;volatile
   329                           
   330                           ;spi.c: 8: TRISCbits.TRISC3= 0;
   331  003770  9694               	bcf	3988,3,c	;volatile
   332                           
   333                           ;spi.c: 11: SSPSTAT = 0x40;
   334  003772  0E40               	movlw	64
   335  003774  6EC7               	movwf	4039,c	;volatile
   336                           
   337                           ;spi.c: 12: SSPCON1 = 0x20;
   338  003776  0E20               	movlw	32
   339  003778  6EC6               	movwf	4038,c	;volatile
   340  00377A  0012               	return	
   341  00377C                     __end_of_setupSPI:
   342                           	opt stack 0
   343                           postinc0	equ	0xFEE
   344                           wreg	equ	0xFE8
   345                           
   346 ;; *************** function _demoLEDs *****************
   347 ;; Defined at:
   348 ;;		line 64 in file "led.c"
   349 ;; Parameters:    Size  Location     Type
   350 ;;		None
   351 ;; Auto vars:     Size  Location     Type
   352 ;;  i               2   32[COMRAM] unsigned int 
   353 ;; Return value:  Size  Location     Type
   354 ;;		None               void
   355 ;; Registers used:
   356 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   357 ;; Tracked objects:
   358 ;;		On entry : 0/0
   359 ;;		On exit  : 0/0
   360 ;;		Unchanged: 0/0
   361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   362 ;;      Params:         0       0       0       0       0
   363 ;;      Locals:         2       0       0       0       0
   364 ;;      Temps:          2       0       0       0       0
   365 ;;      Totals:         4       0       0       0       0
   366 ;;Total ram usage:        4 bytes
   367 ;; Hardware stack levels used:    1
   368 ;; Hardware stack levels required when called:    3
   369 ;; This function calls:
   370 ;;		___lwmod
   371 ;;		_addRandom
   372 ;;		_send_frame
   373 ;; This function is called by:
   374 ;;		_main
   375 ;; This function uses a non-reentrant model
   376 ;;
   377                           
   378                           	psect	text2
   379  003B60                     __ptext2:
   380                           	opt stack 0
   381  003B60                     _demoLEDs:
   382                           	opt stack 27
   383                           
   384                           ;led.c: 66: uint16_t i;
   385                           ;led.c: 68: for(i = 0 ; i < 400 ; i++)
   386                           
   387                           ;incstack = 0
   388  003B60  0E00               	movlw	0
   389  003B62  6E22               	movwf	demoLEDs@i+1,c
   390  003B64  0E00               	movlw	0
   391  003B66  6E21               	movwf	demoLEDs@i,c
   392  003B68  0E90               	movlw	144
   393  003B6A  5C21               	subwf	demoLEDs@i,w,c
   394  003B6C  0E01               	movlw	1
   395  003B6E  5822               	subwfb	demoLEDs@i+1,w,c
   396  003B70  B0D8               	btfsc	status,0,c
   397  003B72  D00B               	goto	l939
   398                           
   399                           ;led.c: 69: _delay((unsigned long)((5)*(20000000ULL/4000.0)));
   400  003B74  0E21               	movlw	33
   401  003B76  6E1F               	movwf	??_demoLEDs& (0+255),c
   402  003B78  0E76               	movlw	118
   403  003B7A                     u527:
   404  003B7A  2EE8               	decfsz	wreg,f,c
   405  003B7C  D7FE               	goto	u527
   406  003B7E  2E1F               	decfsz	??_demoLEDs& (0+255),f,c
   407  003B80  D7FC               	goto	u527
   408  003B82  D000               	nop2	
   409  003B84  4A21               	infsnz	demoLEDs@i,f,c
   410  003B86  2A22               	incf	demoLEDs@i+1,f,c
   411  003B88  D7EF               	goto	L1
   412  003B8A                     l939:
   413                           
   414                           ;led.c: 70: for(i = 0 ; i < 32 ; i++) {led_strip_colors[i] = 0;}
   415  003B8A  0E00               	movlw	0
   416  003B8C  6E22               	movwf	demoLEDs@i+1,c
   417  003B8E  0E00               	movlw	0
   418  003B90  6E21               	movwf	demoLEDs@i,c
   419  003B92  0E20               	movlw	32
   420  003B94  5C21               	subwf	demoLEDs@i,w,c
   421  003B96  0E00               	movlw	0
   422  003B98  5822               	subwfb	demoLEDs@i+1,w,c
   423  003B9A  B0D8               	btfsc	status,0,c
   424  003B9C  D01F               	goto	l951
   425  003B9E  C021  F01F         	movff	demoLEDs@i,??_demoLEDs
   426  003BA2  C022  F020         	movff	demoLEDs@i+1,??_demoLEDs+1
   427  003BA6  90D8               	bcf	status,0,c
   428  003BA8  361F               	rlcf	??_demoLEDs,f,c
   429  003BAA  3620               	rlcf	??_demoLEDs+1,f,c
   430  003BAC  90D8               	bcf	status,0,c
   431  003BAE  361F               	rlcf	??_demoLEDs,f,c
   432  003BB0  3620               	rlcf	??_demoLEDs+1,f,c
   433  003BB2  0100               	movlb	0	; () banked
   434  003BB4  0E80               	movlw	low _led_strip_colors
   435  003BB6  241F               	addwf	??_demoLEDs,w,c
   436  003BB8  6ED9               	movwf	fsr2l,c
   437  003BBA  0100               	movlb	0	; () banked
   438  003BBC  0E00               	movlw	high _led_strip_colors
   439  003BBE  2020               	addwfc	??_demoLEDs+1,w,c
   440  003BC0  6EDA               	movwf	fsr2h,c
   441  003BC2  0E00               	movlw	0
   442  003BC4  6EDE               	movwf	postinc2,c
   443  003BC6  0E00               	movlw	0
   444  003BC8  6EDE               	movwf	postinc2,c
   445  003BCA  0E00               	movlw	0
   446  003BCC  6EDE               	movwf	postinc2,c
   447  003BCE  0E00               	movlw	0
   448  003BD0  6EDD               	movwf	postdec2,c
   449  003BD2  52DD               	movf	postdec2,f,c
   450  003BD4  52DD               	movf	postdec2,f,c
   451                           
   452                           ; BSR set to: 0
   453  003BD6  4A21               	infsnz	demoLEDs@i,f,c
   454  003BD8  2A22               	incf	demoLEDs@i+1,f,c
   455  003BDA  D7DB               	goto	L2
   456  003BDC                     l951:
   457                           
   458                           ;led.c: 71: send_frame();
   459  003BDC  EC34  F01D         	call	_send_frame	;wreg free
   460                           
   461                           ;led.c: 74: led_strip_colors[0] = 0xFF0000;
   462  003BE0  0E00               	movlw	0
   463  003BE2  0100               	movlb	0	; () banked
   464  003BE4  0100               	movlb	0	; () banked
   465  003BE6  6F80               	movwf	_led_strip_colors& (0+255),b
   466  003BE8  0E00               	movlw	0
   467  003BEA  0100               	movlb	0	; () banked
   468  003BEC  6F81               	movwf	(_led_strip_colors+1)& (0+255),b
   469  003BEE  0EFF               	movlw	255
   470  003BF0  0100               	movlb	0	; () banked
   471  003BF2  6F82               	movwf	(_led_strip_colors+2)& (0+255),b
   472  003BF4  0E00               	movlw	0
   473  003BF6  0100               	movlb	0	; () banked
   474  003BF8  6F83               	movwf	(_led_strip_colors+3)& (0+255),b
   475                           
   476                           ; BSR set to: 0
   477                           ;led.c: 75: led_strip_colors[1] = 0x00FF00;
   478  003BFA  0E00               	movlw	0
   479  003BFC  0100               	movlb	0	; () banked
   480  003BFE  0100               	movlb	0	; () banked
   481  003C00  6F84               	movwf	(_led_strip_colors+4)& (0+255),b
   482  003C02  0EFF               	movlw	255
   483  003C04  0100               	movlb	0	; () banked
   484  003C06  6F85               	movwf	(_led_strip_colors+5)& (0+255),b
   485  003C08  0E00               	movlw	0
   486  003C0A  0100               	movlb	0	; () banked
   487  003C0C  6F86               	movwf	(_led_strip_colors+6)& (0+255),b
   488  003C0E  0E00               	movlw	0
   489  003C10  0100               	movlb	0	; () banked
   490  003C12  6F87               	movwf	(_led_strip_colors+7)& (0+255),b
   491                           
   492                           ; BSR set to: 0
   493                           ;led.c: 76: led_strip_colors[2] = 0x0000FF;
   494  003C14  0EFF               	movlw	255
   495  003C16  0100               	movlb	0	; () banked
   496  003C18  0100               	movlb	0	; () banked
   497  003C1A  6F88               	movwf	(_led_strip_colors+8)& (0+255),b
   498  003C1C  0E00               	movlw	0
   499  003C1E  0100               	movlb	0	; () banked
   500  003C20  6F89               	movwf	(_led_strip_colors+9)& (0+255),b
   501  003C22  0E00               	movlw	0
   502  003C24  0100               	movlb	0	; () banked
   503  003C26  6F8A               	movwf	(_led_strip_colors+10)& (0+255),b
   504  003C28  0E00               	movlw	0
   505  003C2A  0100               	movlb	0	; () banked
   506  003C2C  6F8B               	movwf	(_led_strip_colors+11)& (0+255),b
   507                           
   508                           ; BSR set to: 0
   509                           ;led.c: 77: led_strip_colors[3] = 0x00FFFF;
   510  003C2E  0EFF               	movlw	255
   511  003C30  0100               	movlb	0	; () banked
   512  003C32  0100               	movlb	0	; () banked
   513  003C34  6F8C               	movwf	(_led_strip_colors+12)& (0+255),b
   514  003C36  0EFF               	movlw	255
   515  003C38  0100               	movlb	0	; () banked
   516  003C3A  6F8D               	movwf	(_led_strip_colors+13)& (0+255),b
   517  003C3C  0E00               	movlw	0
   518  003C3E  0100               	movlb	0	; () banked
   519  003C40  6F8E               	movwf	(_led_strip_colors+14)& (0+255),b
   520  003C42  0E00               	movlw	0
   521  003C44  0100               	movlb	0	; () banked
   522  003C46  6F8F               	movwf	(_led_strip_colors+15)& (0+255),b
   523                           
   524                           ; BSR set to: 0
   525                           ;led.c: 78: led_strip_colors[4] = 0xFF00FF;
   526  003C48  0EFF               	movlw	255
   527  003C4A  0100               	movlb	0	; () banked
   528  003C4C  0100               	movlb	0	; () banked
   529  003C4E  6F90               	movwf	(_led_strip_colors+16)& (0+255),b
   530  003C50  0E00               	movlw	0
   531  003C52  0100               	movlb	0	; () banked
   532  003C54  6F91               	movwf	(_led_strip_colors+17)& (0+255),b
   533  003C56  0EFF               	movlw	255
   534  003C58  0100               	movlb	0	; () banked
   535  003C5A  6F92               	movwf	(_led_strip_colors+18)& (0+255),b
   536  003C5C  0E00               	movlw	0
   537  003C5E  0100               	movlb	0	; () banked
   538  003C60  6F93               	movwf	(_led_strip_colors+19)& (0+255),b
   539                           
   540                           ; BSR set to: 0
   541                           ;led.c: 79: led_strip_colors[5] = 0xFFFF00;
   542  003C62  0E00               	movlw	0
   543  003C64  0100               	movlb	0	; () banked
   544  003C66  0100               	movlb	0	; () banked
   545  003C68  6F94               	movwf	(_led_strip_colors+20)& (0+255),b
   546  003C6A  0EFF               	movlw	255
   547  003C6C  0100               	movlb	0	; () banked
   548  003C6E  6F95               	movwf	(_led_strip_colors+21)& (0+255),b
   549  003C70  0EFF               	movlw	255
   550  003C72  0100               	movlb	0	; () banked
   551  003C74  6F96               	movwf	(_led_strip_colors+22)& (0+255),b
   552  003C76  0E00               	movlw	0
   553  003C78  0100               	movlb	0	; () banked
   554  003C7A  6F97               	movwf	(_led_strip_colors+23)& (0+255),b
   555                           
   556                           ;led.c: 80: send_frame();
   557  003C7C  EC34  F01D         	call	_send_frame	;wreg free
   558                           
   559                           ;led.c: 82: for(i = 0 ; i < 1000 ; i++)
   560  003C80  0E00               	movlw	0
   561  003C82  6E22               	movwf	demoLEDs@i+1,c
   562  003C84  0E00               	movlw	0
   563  003C86  6E21               	movwf	demoLEDs@i,c
   564  003C88  0EE8               	movlw	232
   565  003C8A  5C21               	subwf	demoLEDs@i,w,c
   566  003C8C  0E03               	movlw	3
   567  003C8E  5822               	subwfb	demoLEDs@i+1,w,c
   568  003C90  B0D8               	btfsc	status,0,c
   569  003C92  D00B               	goto	l975
   570                           
   571                           ;led.c: 83: _delay((unsigned long)((5)*(20000000ULL/4000.0)));
   572  003C94  0E21               	movlw	33
   573  003C96  6E1F               	movwf	??_demoLEDs& (0+255),c
   574  003C98  0E76               	movlw	118
   575  003C9A                     u537:
   576  003C9A  2EE8               	decfsz	wreg,f,c
   577  003C9C  D7FE               	goto	u537
   578  003C9E  2E1F               	decfsz	??_demoLEDs& (0+255),f,c
   579  003CA0  D7FC               	goto	u537
   580  003CA2  D000               	nop2	
   581  003CA4  4A21               	infsnz	demoLEDs@i,f,c
   582  003CA6  2A22               	incf	demoLEDs@i+1,f,c
   583  003CA8  D7EF               	goto	L3
   584  003CAA                     l975:
   585                           
   586                           ;led.c: 85: for(i=0;i<32;i++) {
   587  003CAA  0E00               	movlw	0
   588  003CAC  6E22               	movwf	demoLEDs@i+1,c
   589  003CAE  0E00               	movlw	0
   590  003CB0  6E21               	movwf	demoLEDs@i,c
   591  003CB2  0E20               	movlw	32
   592  003CB4  5C21               	subwf	demoLEDs@i,w,c
   593  003CB6  0E00               	movlw	0
   594  003CB8  5822               	subwfb	demoLEDs@i+1,w,c
   595  003CBA  B0D8               	btfsc	status,0,c
   596  003CBC  D082               	goto	l997
   597                           
   598                           ;led.c: 86: if((i%3) == 0) {led_strip_colors[i] = 0xFF0000;}
   599  003CBE  C021  F001         	movff	demoLEDs@i,___lwmod@dividend
   600  003CC2  C022  F002         	movff	demoLEDs@i+1,___lwmod@dividend+1
   601  003CC6  0E00               	movlw	0
   602  003CC8  6E04               	movwf	___lwmod@divisor+1,c
   603  003CCA  0E03               	movlw	3
   604  003CCC  6E03               	movwf	___lwmod@divisor,c
   605  003CCE  EC10  F01C         	call	___lwmod	;wreg free
   606  003CD2  5002               	movf	?___lwmod+1,w,c
   607  003CD4  1001               	iorwf	?___lwmod,w,c
   608  003CD6  A4D8               	btfss	status,2,c
   609  003CD8  D01C               	goto	l985
   610  003CDA  C021  F01F         	movff	demoLEDs@i,??_demoLEDs
   611  003CDE  C022  F020         	movff	demoLEDs@i+1,??_demoLEDs+1
   612  003CE2  90D8               	bcf	status,0,c
   613  003CE4  361F               	rlcf	??_demoLEDs,f,c
   614  003CE6  3620               	rlcf	??_demoLEDs+1,f,c
   615  003CE8  90D8               	bcf	status,0,c
   616  003CEA  361F               	rlcf	??_demoLEDs,f,c
   617  003CEC  3620               	rlcf	??_demoLEDs+1,f,c
   618  003CEE  0100               	movlb	0	; () banked
   619  003CF0  0E80               	movlw	low _led_strip_colors
   620  003CF2  241F               	addwf	??_demoLEDs,w,c
   621  003CF4  6ED9               	movwf	fsr2l,c
   622  003CF6  0100               	movlb	0	; () banked
   623  003CF8  0E00               	movlw	high _led_strip_colors
   624  003CFA  2020               	addwfc	??_demoLEDs+1,w,c
   625  003CFC  6EDA               	movwf	fsr2h,c
   626  003CFE  0E00               	movlw	0
   627  003D00  6EDE               	movwf	postinc2,c
   628  003D02  0E00               	movlw	0
   629  003D04  6EDE               	movwf	postinc2,c
   630  003D06  0EFF               	movlw	255
   631  003D08  6EDE               	movwf	postinc2,c
   632  003D0A  0E00               	movlw	0
   633  003D0C  6EDD               	movwf	postdec2,c
   634  003D0E  52DD               	movf	postdec2,f,c
   635  003D10  52DD               	movf	postdec2,f,c
   636  003D12                     l985:
   637                           
   638                           ;led.c: 87: if((i%3) == 1) {led_strip_colors[i] = 0xFFFFFF;}
   639  003D12  C021  F001         	movff	demoLEDs@i,___lwmod@dividend
   640  003D16  C022  F002         	movff	demoLEDs@i+1,___lwmod@dividend+1
   641  003D1A  0E00               	movlw	0
   642  003D1C  6E04               	movwf	___lwmod@divisor+1,c
   643  003D1E  0E03               	movlw	3
   644  003D20  6E03               	movwf	___lwmod@divisor,c
   645  003D22  EC10  F01C         	call	___lwmod	;wreg free
   646  003D26  0401               	decf	?___lwmod,w,c
   647  003D28  1002               	iorwf	?___lwmod+1,w,c
   648  003D2A  A4D8               	btfss	status,2,c
   649  003D2C  D01C               	goto	l989
   650  003D2E  C021  F01F         	movff	demoLEDs@i,??_demoLEDs
   651  003D32  C022  F020         	movff	demoLEDs@i+1,??_demoLEDs+1
   652  003D36  90D8               	bcf	status,0,c
   653  003D38  361F               	rlcf	??_demoLEDs,f,c
   654  003D3A  3620               	rlcf	??_demoLEDs+1,f,c
   655  003D3C  90D8               	bcf	status,0,c
   656  003D3E  361F               	rlcf	??_demoLEDs,f,c
   657  003D40  3620               	rlcf	??_demoLEDs+1,f,c
   658  003D42  0100               	movlb	0	; () banked
   659  003D44  0E80               	movlw	low _led_strip_colors
   660  003D46  241F               	addwf	??_demoLEDs,w,c
   661  003D48  6ED9               	movwf	fsr2l,c
   662  003D4A  0100               	movlb	0	; () banked
   663  003D4C  0E00               	movlw	high _led_strip_colors
   664  003D4E  2020               	addwfc	??_demoLEDs+1,w,c
   665  003D50  6EDA               	movwf	fsr2h,c
   666  003D52  0EFF               	movlw	255
   667  003D54  6EDE               	movwf	postinc2,c
   668  003D56  0EFF               	movlw	255
   669  003D58  6EDE               	movwf	postinc2,c
   670  003D5A  0EFF               	movlw	255
   671  003D5C  6EDE               	movwf	postinc2,c
   672  003D5E  0E00               	movlw	0
   673  003D60  6EDD               	movwf	postdec2,c
   674  003D62  52DD               	movf	postdec2,f,c
   675  003D64  52DD               	movf	postdec2,f,c
   676  003D66                     l989:
   677                           
   678                           ;led.c: 88: if((i%3) == 2) {led_strip_colors[i] = 0x0000FF;}
   679  003D66  C021  F001         	movff	demoLEDs@i,___lwmod@dividend
   680  003D6A  C022  F002         	movff	demoLEDs@i+1,___lwmod@dividend+1
   681  003D6E  0E00               	movlw	0
   682  003D70  6E04               	movwf	___lwmod@divisor+1,c
   683  003D72  0E03               	movlw	3
   684  003D74  6E03               	movwf	___lwmod@divisor,c
   685  003D76  EC10  F01C         	call	___lwmod	;wreg free
   686  003D7A  5001               	movf	?___lwmod,w,c
   687  003D7C  0A02               	xorlw	2
   688  003D7E  1002               	iorwf	?___lwmod+1,w,c
   689  003D80  A4D8               	btfss	status,2,c
   690  003D82  D01C               	goto	l993
   691  003D84  C021  F01F         	movff	demoLEDs@i,??_demoLEDs
   692  003D88  C022  F020         	movff	demoLEDs@i+1,??_demoLEDs+1
   693  003D8C  90D8               	bcf	status,0,c
   694  003D8E  361F               	rlcf	??_demoLEDs,f,c
   695  003D90  3620               	rlcf	??_demoLEDs+1,f,c
   696  003D92  90D8               	bcf	status,0,c
   697  003D94  361F               	rlcf	??_demoLEDs,f,c
   698  003D96  3620               	rlcf	??_demoLEDs+1,f,c
   699  003D98  0100               	movlb	0	; () banked
   700  003D9A  0E80               	movlw	low _led_strip_colors
   701  003D9C  241F               	addwf	??_demoLEDs,w,c
   702  003D9E  6ED9               	movwf	fsr2l,c
   703  003DA0  0100               	movlb	0	; () banked
   704  003DA2  0E00               	movlw	high _led_strip_colors
   705  003DA4  2020               	addwfc	??_demoLEDs+1,w,c
   706  003DA6  6EDA               	movwf	fsr2h,c
   707  003DA8  0EFF               	movlw	255
   708  003DAA  6EDE               	movwf	postinc2,c
   709  003DAC  0E00               	movlw	0
   710  003DAE  6EDE               	movwf	postinc2,c
   711  003DB0  0E00               	movlw	0
   712  003DB2  6EDE               	movwf	postinc2,c
   713  003DB4  0E00               	movlw	0
   714  003DB6  6EDD               	movwf	postdec2,c
   715  003DB8  52DD               	movf	postdec2,f,c
   716  003DBA  52DD               	movf	postdec2,f,c
   717  003DBC                     l993:
   718  003DBC  4A21               	infsnz	demoLEDs@i,f,c
   719  003DBE  2A22               	incf	demoLEDs@i+1,f,c
   720  003DC0  D778               	goto	L4
   721  003DC2                     l997:
   722                           
   723                           ;led.c: 89: }
   724                           ;led.c: 90: send_frame();
   725  003DC2  EC34  F01D         	call	_send_frame	;wreg free
   726                           
   727                           ;led.c: 93: for(i = 0 ; i < 2000 ; i++)
   728  003DC6  0E00               	movlw	0
   729  003DC8  6E22               	movwf	demoLEDs@i+1,c
   730  003DCA  0E00               	movlw	0
   731  003DCC  6E21               	movwf	demoLEDs@i,c
   732  003DCE  0ED0               	movlw	208
   733  003DD0  5C21               	subwf	demoLEDs@i,w,c
   734  003DD2  0E07               	movlw	7
   735  003DD4  5822               	subwfb	demoLEDs@i+1,w,c
   736  003DD6  B0D8               	btfsc	status,0,c
   737  003DD8  D00B               	goto	l1009
   738                           
   739                           ;led.c: 94: _delay((unsigned long)((5)*(20000000ULL/4000.0)));
   740  003DDA  0E21               	movlw	33
   741  003DDC  6E1F               	movwf	??_demoLEDs& (0+255),c
   742  003DDE  0E76               	movlw	118
   743  003DE0                     u547:
   744  003DE0  2EE8               	decfsz	wreg,f,c
   745  003DE2  D7FE               	goto	u547
   746  003DE4  2E1F               	decfsz	??_demoLEDs& (0+255),f,c
   747  003DE6  D7FC               	goto	u547
   748  003DE8  D000               	nop2	
   749  003DEA  4A21               	infsnz	demoLEDs@i,f,c
   750  003DEC  2A22               	incf	demoLEDs@i+1,f,c
   751  003DEE  D7EF               	goto	L5
   752  003DF0                     l1009:
   753                           
   754                           ;led.c: 96: for(i=0;i<32;i++) {
   755  003DF0  0E00               	movlw	0
   756  003DF2  6E22               	movwf	demoLEDs@i+1,c
   757  003DF4  0E00               	movlw	0
   758  003DF6  6E21               	movwf	demoLEDs@i,c
   759  003DF8  0E20               	movlw	32
   760  003DFA  5C21               	subwf	demoLEDs@i,w,c
   761  003DFC  0E00               	movlw	0
   762  003DFE  5822               	subwfb	demoLEDs@i+1,w,c
   763  003E00  B0D8               	btfsc	status,0,c
   764  003E02  D03F               	goto	l1025
   765                           
   766                           ;led.c: 97: if((i%2) == 0) {led_strip_colors[i] = 0x00FF00;}
   767  003E04  B021               	btfsc	demoLEDs@i,0,c
   768  003E06  D01C               	goto	l1017
   769  003E08  C021  F01F         	movff	demoLEDs@i,??_demoLEDs
   770  003E0C  C022  F020         	movff	demoLEDs@i+1,??_demoLEDs+1
   771  003E10  90D8               	bcf	status,0,c
   772  003E12  361F               	rlcf	??_demoLEDs,f,c
   773  003E14  3620               	rlcf	??_demoLEDs+1,f,c
   774  003E16  90D8               	bcf	status,0,c
   775  003E18  361F               	rlcf	??_demoLEDs,f,c
   776  003E1A  3620               	rlcf	??_demoLEDs+1,f,c
   777  003E1C  0100               	movlb	0	; () banked
   778  003E1E  0E80               	movlw	low _led_strip_colors
   779  003E20  241F               	addwf	??_demoLEDs,w,c
   780  003E22  6ED9               	movwf	fsr2l,c
   781  003E24  0100               	movlb	0	; () banked
   782  003E26  0E00               	movlw	high _led_strip_colors
   783  003E28  2020               	addwfc	??_demoLEDs+1,w,c
   784  003E2A  6EDA               	movwf	fsr2h,c
   785  003E2C  0E00               	movlw	0
   786  003E2E  6EDE               	movwf	postinc2,c
   787  003E30  0EFF               	movlw	255
   788  003E32  6EDE               	movwf	postinc2,c
   789  003E34  0E00               	movlw	0
   790  003E36  6EDE               	movwf	postinc2,c
   791  003E38  0E00               	movlw	0
   792  003E3A  6EDD               	movwf	postdec2,c
   793  003E3C  52DD               	movf	postdec2,f,c
   794  003E3E  52DD               	movf	postdec2,f,c
   795  003E40                     l1017:
   796                           
   797                           ;led.c: 98: if((i%2) == 1) {led_strip_colors[i] = 0xFFFFFF;}
   798  003E40  A021               	btfss	demoLEDs@i,0,c
   799  003E42  D01C               	goto	l1021
   800  003E44  C021  F01F         	movff	demoLEDs@i,??_demoLEDs
   801  003E48  C022  F020         	movff	demoLEDs@i+1,??_demoLEDs+1
   802  003E4C  90D8               	bcf	status,0,c
   803  003E4E  361F               	rlcf	??_demoLEDs,f,c
   804  003E50  3620               	rlcf	??_demoLEDs+1,f,c
   805  003E52  90D8               	bcf	status,0,c
   806  003E54  361F               	rlcf	??_demoLEDs,f,c
   807  003E56  3620               	rlcf	??_demoLEDs+1,f,c
   808  003E58  0100               	movlb	0	; () banked
   809  003E5A  0E80               	movlw	low _led_strip_colors
   810  003E5C  241F               	addwf	??_demoLEDs,w,c
   811  003E5E  6ED9               	movwf	fsr2l,c
   812  003E60  0100               	movlb	0	; () banked
   813  003E62  0E00               	movlw	high _led_strip_colors
   814  003E64  2020               	addwfc	??_demoLEDs+1,w,c
   815  003E66  6EDA               	movwf	fsr2h,c
   816  003E68  0EFF               	movlw	255
   817  003E6A  6EDE               	movwf	postinc2,c
   818  003E6C  0EFF               	movlw	255
   819  003E6E  6EDE               	movwf	postinc2,c
   820  003E70  0EFF               	movlw	255
   821  003E72  6EDE               	movwf	postinc2,c
   822  003E74  0E00               	movlw	0
   823  003E76  6EDD               	movwf	postdec2,c
   824  003E78  52DD               	movf	postdec2,f,c
   825  003E7A  52DD               	movf	postdec2,f,c
   826  003E7C                     l1021:
   827  003E7C  4A21               	infsnz	demoLEDs@i,f,c
   828  003E7E  2A22               	incf	demoLEDs@i+1,f,c
   829  003E80  D7BB               	goto	L6
   830  003E82                     l1025:
   831                           
   832                           ;led.c: 99: }
   833                           ;led.c: 100: send_frame();
   834  003E82  EC34  F01D         	call	_send_frame	;wreg free
   835                           
   836                           ;led.c: 102: for(i = 0 ; i < 2000 ; i++)
   837  003E86  0E00               	movlw	0
   838  003E88  6E22               	movwf	demoLEDs@i+1,c
   839  003E8A  0E00               	movlw	0
   840  003E8C  6E21               	movwf	demoLEDs@i,c
   841  003E8E  0ED0               	movlw	208
   842  003E90  5C21               	subwf	demoLEDs@i,w,c
   843  003E92  0E07               	movlw	7
   844  003E94  5822               	subwfb	demoLEDs@i+1,w,c
   845  003E96  B0D8               	btfsc	status,0,c
   846  003E98  D00B               	goto	l1037
   847                           
   848                           ;led.c: 103: _delay((unsigned long)((5)*(20000000ULL/4000.0)));
   849  003E9A  0E21               	movlw	33
   850  003E9C  6E1F               	movwf	??_demoLEDs& (0+255),c
   851  003E9E  0E76               	movlw	118
   852  003EA0                     u557:
   853  003EA0  2EE8               	decfsz	wreg,f,c
   854  003EA2  D7FE               	goto	u557
   855  003EA4  2E1F               	decfsz	??_demoLEDs& (0+255),f,c
   856  003EA6  D7FC               	goto	u557
   857  003EA8  D000               	nop2	
   858  003EAA  4A21               	infsnz	demoLEDs@i,f,c
   859  003EAC  2A22               	incf	demoLEDs@i+1,f,c
   860  003EAE  D7EF               	goto	L7
   861  003EB0                     l1037:
   862                           
   863                           ;led.c: 105: for(i=0;i<32;i++) {
   864  003EB0  0E00               	movlw	0
   865  003EB2  6E22               	movwf	demoLEDs@i+1,c
   866  003EB4  0E00               	movlw	0
   867  003EB6  6E21               	movwf	demoLEDs@i,c
   868  003EB8  0E20               	movlw	32
   869  003EBA  5C21               	subwf	demoLEDs@i,w,c
   870  003EBC  0E00               	movlw	0
   871  003EBE  5822               	subwfb	demoLEDs@i+1,w,c
   872  003EC0  B0D8               	btfsc	status,0,c
   873  003EC2  D03F               	goto	l1053
   874                           
   875                           ;led.c: 106: if((i%2) == 0) {led_strip_colors[i] = 0x0000FF;}
   876  003EC4  B021               	btfsc	demoLEDs@i,0,c
   877  003EC6  D01C               	goto	l1045
   878  003EC8  C021  F01F         	movff	demoLEDs@i,??_demoLEDs
   879  003ECC  C022  F020         	movff	demoLEDs@i+1,??_demoLEDs+1
   880  003ED0  90D8               	bcf	status,0,c
   881  003ED2  361F               	rlcf	??_demoLEDs,f,c
   882  003ED4  3620               	rlcf	??_demoLEDs+1,f,c
   883  003ED6  90D8               	bcf	status,0,c
   884  003ED8  361F               	rlcf	??_demoLEDs,f,c
   885  003EDA  3620               	rlcf	??_demoLEDs+1,f,c
   886  003EDC  0100               	movlb	0	; () banked
   887  003EDE  0E80               	movlw	low _led_strip_colors
   888  003EE0  241F               	addwf	??_demoLEDs,w,c
   889  003EE2  6ED9               	movwf	fsr2l,c
   890  003EE4  0100               	movlb	0	; () banked
   891  003EE6  0E00               	movlw	high _led_strip_colors
   892  003EE8  2020               	addwfc	??_demoLEDs+1,w,c
   893  003EEA  6EDA               	movwf	fsr2h,c
   894  003EEC  0EFF               	movlw	255
   895  003EEE  6EDE               	movwf	postinc2,c
   896  003EF0  0E00               	movlw	0
   897  003EF2  6EDE               	movwf	postinc2,c
   898  003EF4  0E00               	movlw	0
   899  003EF6  6EDE               	movwf	postinc2,c
   900  003EF8  0E00               	movlw	0
   901  003EFA  6EDD               	movwf	postdec2,c
   902  003EFC  52DD               	movf	postdec2,f,c
   903  003EFE  52DD               	movf	postdec2,f,c
   904  003F00                     l1045:
   905                           
   906                           ;led.c: 107: if((i%2) == 1) {led_strip_colors[i] = 0xFFFFFF;}
   907  003F00  A021               	btfss	demoLEDs@i,0,c
   908  003F02  D01C               	goto	l1049
   909  003F04  C021  F01F         	movff	demoLEDs@i,??_demoLEDs
   910  003F08  C022  F020         	movff	demoLEDs@i+1,??_demoLEDs+1
   911  003F0C  90D8               	bcf	status,0,c
   912  003F0E  361F               	rlcf	??_demoLEDs,f,c
   913  003F10  3620               	rlcf	??_demoLEDs+1,f,c
   914  003F12  90D8               	bcf	status,0,c
   915  003F14  361F               	rlcf	??_demoLEDs,f,c
   916  003F16  3620               	rlcf	??_demoLEDs+1,f,c
   917  003F18  0100               	movlb	0	; () banked
   918  003F1A  0E80               	movlw	low _led_strip_colors
   919  003F1C  241F               	addwf	??_demoLEDs,w,c
   920  003F1E  6ED9               	movwf	fsr2l,c
   921  003F20  0100               	movlb	0	; () banked
   922  003F22  0E00               	movlw	high _led_strip_colors
   923  003F24  2020               	addwfc	??_demoLEDs+1,w,c
   924  003F26  6EDA               	movwf	fsr2h,c
   925  003F28  0EFF               	movlw	255
   926  003F2A  6EDE               	movwf	postinc2,c
   927  003F2C  0EFF               	movlw	255
   928  003F2E  6EDE               	movwf	postinc2,c
   929  003F30  0EFF               	movlw	255
   930  003F32  6EDE               	movwf	postinc2,c
   931  003F34  0E00               	movlw	0
   932  003F36  6EDD               	movwf	postdec2,c
   933  003F38  52DD               	movf	postdec2,f,c
   934  003F3A  52DD               	movf	postdec2,f,c
   935  003F3C                     l1049:
   936  003F3C  4A21               	infsnz	demoLEDs@i,f,c
   937  003F3E  2A22               	incf	demoLEDs@i+1,f,c
   938  003F40  D7BB               	goto	L8
   939  003F42                     l1053:
   940                           
   941                           ;led.c: 108: }
   942                           ;led.c: 109: send_frame();
   943  003F42  EC34  F01D         	call	_send_frame	;wreg free
   944                           
   945                           ;led.c: 111: for(i = 0 ; i < 2000 ; i++)
   946  003F46  0E00               	movlw	0
   947  003F48  6E22               	movwf	demoLEDs@i+1,c
   948  003F4A  0E00               	movlw	0
   949  003F4C  6E21               	movwf	demoLEDs@i,c
   950  003F4E  0ED0               	movlw	208
   951  003F50  5C21               	subwf	demoLEDs@i,w,c
   952  003F52  0E07               	movlw	7
   953  003F54  5822               	subwfb	demoLEDs@i+1,w,c
   954  003F56  B0D8               	btfsc	status,0,c
   955  003F58  D00B               	goto	l1065
   956                           
   957                           ;led.c: 112: _delay((unsigned long)((5)*(20000000ULL/4000.0)));
   958  003F5A  0E21               	movlw	33
   959  003F5C  6E1F               	movwf	??_demoLEDs& (0+255),c
   960  003F5E  0E76               	movlw	118
   961  003F60                     u567:
   962  003F60  2EE8               	decfsz	wreg,f,c
   963  003F62  D7FE               	goto	u567
   964  003F64  2E1F               	decfsz	??_demoLEDs& (0+255),f,c
   965  003F66  D7FC               	goto	u567
   966  003F68  D000               	nop2	
   967  003F6A  4A21               	infsnz	demoLEDs@i,f,c
   968  003F6C  2A22               	incf	demoLEDs@i+1,f,c
   969  003F6E  D7EF               	goto	L9
   970  003F70                     l1065:
   971                           
   972                           ;led.c: 114: for(i = 0 ; i < 32 ; i++) {led_strip_colors[i] = 0;}
   973  003F70  0E00               	movlw	0
   974  003F72  6E22               	movwf	demoLEDs@i+1,c
   975  003F74  0E00               	movlw	0
   976  003F76  6E21               	movwf	demoLEDs@i,c
   977  003F78  0E20               	movlw	32
   978  003F7A  5C21               	subwf	demoLEDs@i,w,c
   979  003F7C  0E00               	movlw	0
   980  003F7E  5822               	subwfb	demoLEDs@i+1,w,c
   981  003F80  B0D8               	btfsc	status,0,c
   982  003F82  D01F               	goto	l1077
   983  003F84  C021  F01F         	movff	demoLEDs@i,??_demoLEDs
   984  003F88  C022  F020         	movff	demoLEDs@i+1,??_demoLEDs+1
   985  003F8C  90D8               	bcf	status,0,c
   986  003F8E  361F               	rlcf	??_demoLEDs,f,c
   987  003F90  3620               	rlcf	??_demoLEDs+1,f,c
   988  003F92  90D8               	bcf	status,0,c
   989  003F94  361F               	rlcf	??_demoLEDs,f,c
   990  003F96  3620               	rlcf	??_demoLEDs+1,f,c
   991  003F98  0100               	movlb	0	; () banked
   992  003F9A  0E80               	movlw	low _led_strip_colors
   993  003F9C  241F               	addwf	??_demoLEDs,w,c
   994  003F9E  6ED9               	movwf	fsr2l,c
   995  003FA0  0100               	movlb	0	; () banked
   996  003FA2  0E00               	movlw	high _led_strip_colors
   997  003FA4  2020               	addwfc	??_demoLEDs+1,w,c
   998  003FA6  6EDA               	movwf	fsr2h,c
   999  003FA8  0E00               	movlw	0
  1000  003FAA  6EDE               	movwf	postinc2,c
  1001  003FAC  0E00               	movlw	0
  1002  003FAE  6EDE               	movwf	postinc2,c
  1003  003FB0  0E00               	movlw	0
  1004  003FB2  6EDE               	movwf	postinc2,c
  1005  003FB4  0E00               	movlw	0
  1006  003FB6  6EDD               	movwf	postdec2,c
  1007  003FB8  52DD               	movf	postdec2,f,c
  1008  003FBA  52DD               	movf	postdec2,f,c
  1009                           
  1010                           ; BSR set to: 0
  1011  003FBC  4A21               	infsnz	demoLEDs@i,f,c
  1012  003FBE  2A22               	incf	demoLEDs@i+1,f,c
  1013  003FC0  D7DB               	goto	L10
  1014  003FC2                     l1077:
  1015                           
  1016                           ;led.c: 115: send_frame();
  1017  003FC2  EC34  F01D         	call	_send_frame	;wreg free
  1018  003FC6                     l1079:
  1019                           
  1020                           ;led.c: 118: addRandom();
  1021  003FC6  ECBA  F01C         	call	_addRandom	;wreg free
  1022                           
  1023                           ;led.c: 119: send_frame();
  1024  003FCA  EC34  F01D         	call	_send_frame	;wreg free
  1025                           
  1026                           ;led.c: 120: for(i = 0 ; i < 20 ; i++)
  1027  003FCE  0E00               	movlw	0
  1028  003FD0  6E22               	movwf	demoLEDs@i+1,c
  1029  003FD2  0E00               	movlw	0
  1030  003FD4  6E21               	movwf	demoLEDs@i,c
  1031  003FD6  0E14               	movlw	20
  1032  003FD8  5C21               	subwf	demoLEDs@i,w,c
  1033  003FDA  0E00               	movlw	0
  1034  003FDC  5822               	subwfb	demoLEDs@i+1,w,c
  1035  003FDE  B0D8               	btfsc	status,0,c
  1036  003FE0  D7F2               	goto	l1079
  1037                           
  1038                           ;led.c: 121: _delay((unsigned long)((5)*(20000000ULL/4000.0)));
  1039  003FE2  0E21               	movlw	33
  1040  003FE4  6E1F               	movwf	??_demoLEDs& (0+255),c
  1041  003FE6  0E76               	movlw	118
  1042  003FE8                     u577:
  1043  003FE8  2EE8               	decfsz	wreg,f,c
  1044  003FEA  D7FE               	goto	u577
  1045  003FEC  2E1F               	decfsz	??_demoLEDs& (0+255),f,c
  1046  003FEE  D7FC               	goto	u577
  1047  003FF0  D000               	nop2	
  1048  003FF2  4A21               	infsnz	demoLEDs@i,f,c
  1049  003FF4  2A22               	incf	demoLEDs@i+1,f,c
  1050  003FF6  D7EF               	goto	L11
  1051  003FF8                     __end_of_demoLEDs:
  1052                           	opt stack 0
  1053                           postinc0	equ	0xFEE
  1054                           wreg	equ	0xFE8
  1055                           postinc2	equ	0xFDE
  1056                           postdec2	equ	0xFDD
  1057                           fsr2h	equ	0xFDA
  1058                           fsr2l	equ	0xFD9
  1059                           status	equ	0xFD8
  1060                           
  1061 ;; *************** function _send_frame *****************
  1062 ;; Defined at:
  1063 ;;		line 33 in file "led.c"
  1064 ;; Parameters:    Size  Location     Type
  1065 ;;		None
  1066 ;; Auto vars:     Size  Location     Type
  1067 ;;  i               2   20[COMRAM] unsigned int 
  1068 ;;  blue            1   19[COMRAM] unsigned char 
  1069 ;;  green           1   18[COMRAM] unsigned char 
  1070 ;;  red             1   17[COMRAM] unsigned char 
  1071 ;; Return value:  Size  Location     Type
  1072 ;;		None               void
  1073 ;; Registers used:
  1074 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1075 ;; Tracked objects:
  1076 ;;		On entry : 0/0
  1077 ;;		On exit  : 0/0
  1078 ;;		Unchanged: 0/0
  1079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1080 ;;      Params:         0       0       0       0       0
  1081 ;;      Locals:         5       0       0       0       0
  1082 ;;      Temps:          6       0       0       0       0
  1083 ;;      Totals:        11       0       0       0       0
  1084 ;;Total ram usage:       11 bytes
  1085 ;; Hardware stack levels used:    1
  1086 ;; Hardware stack levels required when called:    2
  1087 ;; This function calls:
  1088 ;;		_WriteSPI1
  1089 ;;		_write_latch
  1090 ;; This function is called by:
  1091 ;;		_demoLEDs
  1092 ;; This function uses a non-reentrant model
  1093 ;;
  1094                           
  1095                           	psect	text3
  1096  003A68                     __ptext3:
  1097                           	opt stack 0
  1098  003A68                     _send_frame:
  1099                           	opt stack 27
  1100                           
  1101                           ;led.c: 34: uint16_t i;
  1102                           ;led.c: 35: uint8_t red,green,blue;
  1103                           ;led.c: 37: for(i=0;i<32;i++) {
  1104                           
  1105                           ;incstack = 0
  1106  003A68  0E00               	movlw	0
  1107  003A6A  6E16               	movwf	send_frame@i+1,c
  1108  003A6C  0E00               	movlw	0
  1109  003A6E  6E15               	movwf	send_frame@i,c
  1110  003A70  0E20               	movlw	32
  1111  003A72  5C15               	subwf	send_frame@i,w,c
  1112  003A74  0E00               	movlw	0
  1113  003A76  5816               	subwfb	send_frame@i+1,w,c
  1114  003A78  B0D8               	btfsc	status,0,c
  1115  003A7A  D06B               	goto	l901
  1116                           
  1117                           ;led.c: 38: blue = led_strip_colors[i] & 0xFF;
  1118  003A7C  C015  F00C         	movff	send_frame@i,??_send_frame
  1119  003A80  C016  F00D         	movff	send_frame@i+1,??_send_frame+1
  1120  003A84  90D8               	bcf	status,0,c
  1121  003A86  360C               	rlcf	??_send_frame,f,c
  1122  003A88  360D               	rlcf	??_send_frame+1,f,c
  1123  003A8A  90D8               	bcf	status,0,c
  1124  003A8C  360C               	rlcf	??_send_frame,f,c
  1125  003A8E  360D               	rlcf	??_send_frame+1,f,c
  1126  003A90  0100               	movlb	0	; () banked
  1127  003A92  0E80               	movlw	low _led_strip_colors
  1128  003A94  240C               	addwf	??_send_frame,w,c
  1129  003A96  6ED9               	movwf	fsr2l,c
  1130  003A98  0100               	movlb	0	; () banked
  1131  003A9A  0E00               	movlw	high _led_strip_colors
  1132  003A9C  200D               	addwfc	??_send_frame+1,w,c
  1133  003A9E  6EDA               	movwf	fsr2h,c
  1134  003AA0  50DF               	movf	indf2,w,c
  1135  003AA2  6E14               	movwf	send_frame@blue,c
  1136                           
  1137                           ;led.c: 39: green = (led_strip_colors[i] >> 8) & 0xFF;
  1138  003AA4  C015  F00C         	movff	send_frame@i,??_send_frame
  1139  003AA8  C016  F00D         	movff	send_frame@i+1,??_send_frame+1
  1140  003AAC  90D8               	bcf	status,0,c
  1141  003AAE  360C               	rlcf	??_send_frame,f,c
  1142  003AB0  360D               	rlcf	??_send_frame+1,f,c
  1143  003AB2  90D8               	bcf	status,0,c
  1144  003AB4  360C               	rlcf	??_send_frame,f,c
  1145  003AB6  360D               	rlcf	??_send_frame+1,f,c
  1146  003AB8  0100               	movlb	0	; () banked
  1147  003ABA  0E80               	movlw	low _led_strip_colors
  1148  003ABC  240C               	addwf	??_send_frame,w,c
  1149  003ABE  6ED9               	movwf	fsr2l,c
  1150  003AC0  0100               	movlb	0	; () banked
  1151  003AC2  0E00               	movlw	high _led_strip_colors
  1152  003AC4  200D               	addwfc	??_send_frame+1,w,c
  1153  003AC6  6EDA               	movwf	fsr2h,c
  1154  003AC8  CFDE F00E          	movff	postinc2,??_send_frame+2
  1155  003ACC  CFDE F00F          	movff	postinc2,??_send_frame+3
  1156  003AD0  CFDE F010          	movff	postinc2,??_send_frame+4
  1157  003AD4  CFDE F011          	movff	postinc2,??_send_frame+5
  1158  003AD8  C00F  F00E         	movff	??_send_frame+3,??_send_frame+2
  1159  003ADC  C010  F00F         	movff	??_send_frame+4,??_send_frame+3
  1160  003AE0  C011  F010         	movff	??_send_frame+5,??_send_frame+4
  1161  003AE4  6A11               	clrf	??_send_frame+5,c
  1162  003AE6  500E               	movf	??_send_frame+2,w,c
  1163  003AE8  6E13               	movwf	send_frame@green,c
  1164                           
  1165                           ;led.c: 40: red = (led_strip_colors[i] >> 16) & 0xFF;
  1166  003AEA  C015  F00C         	movff	send_frame@i,??_send_frame
  1167  003AEE  C016  F00D         	movff	send_frame@i+1,??_send_frame+1
  1168  003AF2  90D8               	bcf	status,0,c
  1169  003AF4  360C               	rlcf	??_send_frame,f,c
  1170  003AF6  360D               	rlcf	??_send_frame+1,f,c
  1171  003AF8  90D8               	bcf	status,0,c
  1172  003AFA  360C               	rlcf	??_send_frame,f,c
  1173  003AFC  360D               	rlcf	??_send_frame+1,f,c
  1174  003AFE  0100               	movlb	0	; () banked
  1175  003B00  0E80               	movlw	low _led_strip_colors
  1176  003B02  240C               	addwf	??_send_frame,w,c
  1177  003B04  6ED9               	movwf	fsr2l,c
  1178  003B06  0100               	movlb	0	; () banked
  1179  003B08  0E00               	movlw	high _led_strip_colors
  1180  003B0A  200D               	addwfc	??_send_frame+1,w,c
  1181  003B0C  6EDA               	movwf	fsr2h,c
  1182  003B0E  CFDE F00E          	movff	postinc2,??_send_frame+2
  1183  003B12  CFDE F00F          	movff	postinc2,??_send_frame+3
  1184  003B16  CFDE F010          	movff	postinc2,??_send_frame+4
  1185  003B1A  CFDE F011          	movff	postinc2,??_send_frame+5
  1186  003B1E  0E11               	movlw	17
  1187  003B20  D005               	goto	u170
  1188  003B22                     u175:
  1189  003B22  90D8               	bcf	status,0,c
  1190  003B24  3211               	rrcf	??_send_frame+5,f,c
  1191  003B26  3210               	rrcf	??_send_frame+4,f,c
  1192  003B28  320F               	rrcf	??_send_frame+3,f,c
  1193  003B2A  320E               	rrcf	??_send_frame+2,f,c
  1194  003B2C                     u170:
  1195  003B2C  2EE8               	decfsz	wreg,f,c
  1196  003B2E  D7F9               	goto	u175
  1197  003B30  500E               	movf	??_send_frame+2,w,c
  1198  003B32  6E12               	movwf	send_frame@red,c
  1199                           
  1200                           ; BSR set to: 0
  1201                           ;led.c: 41: WriteSPI1((green|0x80));
  1202  003B34  5013               	movf	send_frame@green,w,c
  1203  003B36  0980               	iorlw	128
  1204  003B38  ECC9  F01B         	call	_WriteSPI1
  1205                           
  1206                           ;led.c: 42: WriteSPI1((red|0x80));
  1207  003B3C  5012               	movf	send_frame@red,w,c
  1208  003B3E  0980               	iorlw	128
  1209  003B40  ECC9  F01B         	call	_WriteSPI1
  1210                           
  1211                           ;led.c: 43: WriteSPI1((blue|0x80));
  1212  003B44  5014               	movf	send_frame@blue,w,c
  1213  003B46  0980               	iorlw	128
  1214  003B48  ECC9  F01B         	call	_WriteSPI1
  1215  003B4C  4A15               	infsnz	send_frame@i,f,c
  1216  003B4E  2A16               	incf	send_frame@i+1,f,c
  1217  003B50  D78F               	goto	L12
  1218  003B52                     l901:
  1219                           
  1220                           ;led.c: 44: }
  1221                           ;led.c: 45: write_latch(32);
  1222  003B52  0E00               	movlw	0
  1223  003B54  6E08               	movwf	write_latch@len+1,c
  1224  003B56  0E20               	movlw	32
  1225  003B58  6E07               	movwf	write_latch@len,c
  1226  003B5A  EC33  F01C         	call	_write_latch	;wreg free
  1227  003B5E  0012               	return	
  1228  003B60                     __end_of_send_frame:
  1229                           	opt stack 0
  1230                           postinc0	equ	0xFEE
  1231                           wreg	equ	0xFE8
  1232                           indf2	equ	0xFDF
  1233                           postinc2	equ	0xFDE
  1234                           postdec2	equ	0xFDD
  1235                           fsr2h	equ	0xFDA
  1236                           fsr2l	equ	0xFD9
  1237                           status	equ	0xFD8
  1238                           
  1239 ;; *************** function _write_latch *****************
  1240 ;; Defined at:
  1241 ;;		line 22 in file "led.c"
  1242 ;; Parameters:    Size  Location     Type
  1243 ;;  len             2    6[COMRAM] unsigned int 
  1244 ;; Auto vars:     Size  Location     Type
  1245 ;;		None
  1246 ;; Return value:  Size  Location     Type
  1247 ;;		None               void
  1248 ;; Registers used:
  1249 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1250 ;; Tracked objects:
  1251 ;;		On entry : 0/0
  1252 ;;		On exit  : 0/0
  1253 ;;		Unchanged: 0/0
  1254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1255 ;;      Params:         2       0       0       0       0
  1256 ;;      Locals:         0       0       0       0       0
  1257 ;;      Temps:          3       0       0       0       0
  1258 ;;      Totals:         5       0       0       0       0
  1259 ;;Total ram usage:        5 bytes
  1260 ;; Hardware stack levels used:    1
  1261 ;; Hardware stack levels required when called:    1
  1262 ;; This function calls:
  1263 ;;		_WriteSPI1
  1264 ;;		___wmul
  1265 ;; This function is called by:
  1266 ;;		_send_frame
  1267 ;; This function uses a non-reentrant model
  1268 ;;
  1269                           
  1270                           	psect	text4
  1271  003866                     __ptext4:
  1272                           	opt stack 0
  1273  003866                     _write_latch:
  1274                           	opt stack 27
  1275                           
  1276                           ;led.c: 25: len = ((len + 63) / 64) * 3;
  1277                           
  1278                           ;incstack = 0
  1279  003866  0E3F               	movlw	63
  1280  003868  2407               	addwf	write_latch@len,w,c
  1281  00386A  6E09               	movwf	??_write_latch& (0+255),c
  1282  00386C  0E00               	movlw	0
  1283  00386E  2008               	addwfc	write_latch@len+1,w,c
  1284  003870  6E0A               	movwf	(??_write_latch+1)& (0+255),c
  1285  003872  0E06               	movlw	6
  1286  003874  6E0B               	movwf	(??_write_latch+2)& (0+255),c
  1287  003876                     u135:
  1288  003876  90D8               	bcf	status,0,c
  1289  003878  320A               	rrcf	??_write_latch+1,f,c
  1290  00387A  3209               	rrcf	??_write_latch,f,c
  1291  00387C  2E0B               	decfsz	(??_write_latch+2)& (0+255),f,c
  1292  00387E  D7FB               	goto	u135
  1293  003880  C009  F001         	movff	??_write_latch,___wmul@multiplier
  1294  003884  C00A  F002         	movff	??_write_latch+1,___wmul@multiplier+1
  1295  003888  0E00               	movlw	0
  1296  00388A  6E04               	movwf	___wmul@multiplicand+1,c
  1297  00388C  0E03               	movlw	3
  1298  00388E  6E03               	movwf	___wmul@multiplicand,c
  1299  003890  ECF3  F01B         	call	___wmul	;wreg free
  1300  003894  C001  F007         	movff	?___wmul,write_latch@len
  1301  003898  C002  F008         	movff	?___wmul+1,write_latch@len+1
  1302                           
  1303                           ;led.c: 27: while(len>0) {
  1304  00389C  D006               	goto	l873
  1305  00389E                     l869:
  1306                           
  1307                           ;led.c: 28: WriteSPI1(0x00);
  1308  00389E  0E00               	movlw	0
  1309  0038A0  ECC9  F01B         	call	_WriteSPI1
  1310                           
  1311                           ;led.c: 29: len--;
  1312  0038A4  0607               	decf	write_latch@len,f,c
  1313  0038A6  A0D8               	btfss	status,0,c
  1314  0038A8  0608               	decf	write_latch@len+1,f,c
  1315  0038AA                     l873:
  1316  0038AA  5008               	movf	write_latch@len+1,w,c
  1317  0038AC  1007               	iorwf	write_latch@len,w,c
  1318  0038AE  B4D8               	btfsc	status,2,c
  1319  0038B0  0012               	return	
  1320  0038B2  D7F5               	goto	l869
  1321  0038B4                     __end_of_write_latch:
  1322                           	opt stack 0
  1323                           postinc0	equ	0xFEE
  1324                           wreg	equ	0xFE8
  1325                           indf2	equ	0xFDF
  1326                           postinc2	equ	0xFDE
  1327                           postdec2	equ	0xFDD
  1328                           fsr2h	equ	0xFDA
  1329                           fsr2l	equ	0xFD9
  1330                           status	equ	0xFD8
  1331                           
  1332 ;; *************** function ___wmul *****************
  1333 ;; Defined at:
  1334 ;;		line 4 in file "/opt/microchip/xc8/v1.30/sources/common/wmul.c"
  1335 ;; Parameters:    Size  Location     Type
  1336 ;;  multiplier      2    0[COMRAM] unsigned int 
  1337 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1338 ;; Auto vars:     Size  Location     Type
  1339 ;;  product         2    4[COMRAM] unsigned int 
  1340 ;; Return value:  Size  Location     Type
  1341 ;;                  2    0[COMRAM] unsigned int 
  1342 ;; Registers used:
  1343 ;;		wreg, status,2, status,0, prodl, prodh
  1344 ;; Tracked objects:
  1345 ;;		On entry : 0/0
  1346 ;;		On exit  : 0/0
  1347 ;;		Unchanged: 0/0
  1348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1349 ;;      Params:         4       0       0       0       0
  1350 ;;      Locals:         2       0       0       0       0
  1351 ;;      Temps:          0       0       0       0       0
  1352 ;;      Totals:         6       0       0       0       0
  1353 ;;Total ram usage:        6 bytes
  1354 ;; Hardware stack levels used:    1
  1355 ;; This function calls:
  1356 ;;		Nothing
  1357 ;; This function is called by:
  1358 ;;		_write_latch
  1359 ;; This function uses a non-reentrant model
  1360 ;;
  1361                           
  1362                           	psect	text5
  1363  0037E6                     __ptext5:
  1364                           	opt stack 0
  1365  0037E6                     ___wmul:
  1366                           	opt stack 27
  1367                           
  1368                           ;incstack = 0
  1369  0037E6  5001               	movf	___wmul@multiplier,w,c
  1370  0037E8  0203               	mulwf	___wmul@multiplicand,c
  1371  0037EA  CFF3 F005          	movff	prodl,___wmul@product
  1372  0037EE  CFF4 F006          	movff	prodh,___wmul@product+1
  1373  0037F2  5001               	movf	___wmul@multiplier,w,c
  1374  0037F4  0204               	mulwf	___wmul@multiplicand+1,c
  1375  0037F6  CFF3 FFF4          	movff	prodl,prodh
  1376  0037FA  6AF3               	clrf	prodl,c
  1377  0037FC  50F3               	movf	prodl,w,c
  1378  0037FE  2605               	addwf	___wmul@product,f,c
  1379  003800  50F4               	movf	prodh,w,c
  1380  003802  2206               	addwfc	___wmul@product+1,f,c
  1381  003804  5002               	movf	___wmul@multiplier+1,w,c
  1382  003806  0203               	mulwf	___wmul@multiplicand,c
  1383  003808  CFF3 FFF4          	movff	prodl,prodh
  1384  00380C  6AF3               	clrf	prodl,c
  1385  00380E  50F3               	movf	prodl,w,c
  1386  003810  2605               	addwf	___wmul@product,f,c
  1387  003812  50F4               	movf	prodh,w,c
  1388  003814  2206               	addwfc	___wmul@product+1,f,c
  1389  003816  C005  F001         	movff	___wmul@product,?___wmul
  1390  00381A  C006  F002         	movff	___wmul@product+1,?___wmul+1
  1391  00381E  0012               	return	
  1392  003820                     __end_of___wmul:
  1393                           	opt stack 0
  1394                           prodh	equ	0xFF4
  1395                           prodl	equ	0xFF3
  1396                           postinc0	equ	0xFEE
  1397                           wreg	equ	0xFE8
  1398                           indf2	equ	0xFDF
  1399                           postinc2	equ	0xFDE
  1400                           postdec2	equ	0xFDD
  1401                           fsr2h	equ	0xFDA
  1402                           fsr2l	equ	0xFD9
  1403                           status	equ	0xFD8
  1404                           
  1405 ;; *************** function _WriteSPI1 *****************
  1406 ;; Defined at:
  1407 ;;		line 13 in file "/opt/microchip/xc8/v1.30/sources/pic18/plib/SPI/spi1writ.c"
  1408 ;; Parameters:    Size  Location     Type
  1409 ;;  data_out        1    wreg     unsigned char 
  1410 ;; Auto vars:     Size  Location     Type
  1411 ;;  data_out        1    1[COMRAM] unsigned char 
  1412 ;;  TempVar         1    0[COMRAM] unsigned char 
  1413 ;; Return value:  Size  Location     Type
  1414 ;;                  1    wreg      char 
  1415 ;; Registers used:
  1416 ;;		wreg
  1417 ;; Tracked objects:
  1418 ;;		On entry : 0/0
  1419 ;;		On exit  : 0/0
  1420 ;;		Unchanged: 0/0
  1421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1422 ;;      Params:         0       0       0       0       0
  1423 ;;      Locals:         2       0       0       0       0
  1424 ;;      Temps:          0       0       0       0       0
  1425 ;;      Totals:         2       0       0       0       0
  1426 ;;Total ram usage:        2 bytes
  1427 ;; Hardware stack levels used:    1
  1428 ;; This function calls:
  1429 ;;		Nothing
  1430 ;; This function is called by:
  1431 ;;		_write_latch
  1432 ;;		_send_frame
  1433 ;; This function uses a non-reentrant model
  1434 ;;
  1435                           
  1436                           	psect	text6
  1437  003792                     __ptext6:
  1438                           	opt stack 0
  1439  003792                     _WriteSPI1:
  1440                           	opt stack 27
  1441                           
  1442                           ;incstack = 0
  1443                           ;WriteSPI1@data_out stored from wreg
  1444  003792  CFE8 F002          	movff	wreg,WriteSPI1@data_out
  1445  003796  CFC9 F001          	movff	4041,WriteSPI1@TempVar	;volatile
  1446  00379A  969E               	bcf	3998,3,c	;volatile
  1447  00379C  9EC6               	bcf	4038,7,c	;volatile
  1448  00379E  C002  FFC9         	movff	WriteSPI1@data_out,4041	;volatile
  1449  0037A2  BEC6               	btfsc	4038,7,c	;volatile
  1450  0037A4  0012               	return	
  1451  0037A6                     l130:
  1452  0037A6  B69E               	btfsc	3998,3,c	;volatile
  1453                           
  1454                           ;	Return value of _WriteSPI1 is never used
  1455  0037A8  0012               	return	
  1456  0037AA  D7FD               	goto	l130
  1457  0037AC                     __end_of_WriteSPI1:
  1458                           	opt stack 0
  1459                           prodh	equ	0xFF4
  1460                           prodl	equ	0xFF3
  1461                           postinc0	equ	0xFEE
  1462                           wreg	equ	0xFE8
  1463                           indf2	equ	0xFDF
  1464                           postinc2	equ	0xFDE
  1465                           postdec2	equ	0xFDD
  1466                           fsr2h	equ	0xFDA
  1467                           fsr2l	equ	0xFD9
  1468                           status	equ	0xFD8
  1469                           
  1470 ;; *************** function _addRandom *****************
  1471 ;; Defined at:
  1472 ;;		line 48 in file "led.c"
  1473 ;; Parameters:    Size  Location     Type
  1474 ;;		None
  1475 ;; Auto vars:     Size  Location     Type
  1476 ;;  new_color       4   24[COMRAM] unsigned long 
  1477 ;;  x               2   28[COMRAM] unsigned int 
  1478 ;; Return value:  Size  Location     Type
  1479 ;;		None               void
  1480 ;; Registers used:
  1481 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1482 ;; Tracked objects:
  1483 ;;		On entry : 0/0
  1484 ;;		On exit  : 0/0
  1485 ;;		Unchanged: 0/0
  1486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1487 ;;      Params:         0       0       0       0       0
  1488 ;;      Locals:         6       0       0       0       0
  1489 ;;      Temps:          6       0       0       0       0
  1490 ;;      Totals:        12       0       0       0       0
  1491 ;;Total ram usage:       12 bytes
  1492 ;; Hardware stack levels used:    1
  1493 ;; Hardware stack levels required when called:    2
  1494 ;; This function calls:
  1495 ;;		_rand
  1496 ;; This function is called by:
  1497 ;;		_demoLEDs
  1498 ;; This function uses a non-reentrant model
  1499 ;;
  1500                           
  1501                           	psect	text7
  1502  003974                     __ptext7:
  1503                           	opt stack 0
  1504  003974                     _addRandom:
  1505                           	opt stack 27
  1506                           
  1507                           ;led.c: 49: uint16_t x;
  1508                           ;led.c: 50: uint32_t new_color = 0;
  1509                           
  1510                           ;incstack = 0
  1511  003974  0E00               	movlw	0
  1512  003976  6E19               	movwf	addRandom@new_color,c
  1513  003978  0E00               	movlw	0
  1514  00397A  6E1A               	movwf	addRandom@new_color+1,c
  1515  00397C  0E00               	movlw	0
  1516  00397E  6E1B               	movwf	addRandom@new_color+2,c
  1517  003980  0E00               	movlw	0
  1518  003982  6E1C               	movwf	addRandom@new_color+3,c
  1519                           
  1520                           ;led.c: 53: for(x = (32 - 1) ; x > 0 ; x--)
  1521  003984  0E00               	movlw	0
  1522  003986  6E1E               	movwf	addRandom@x+1,c
  1523  003988  0E1F               	movlw	31
  1524  00398A  6E1D               	movwf	addRandom@x,c
  1525  00398C  501E               	movf	addRandom@x+1,w,c
  1526  00398E  101D               	iorwf	addRandom@x,w,c
  1527  003990  B4D8               	btfsc	status,2,c
  1528  003992  D03A               	goto	l915
  1529                           
  1530                           ;led.c: 54: led_strip_colors[x] = led_strip_colors[x - 1];
  1531  003994  0EFC               	movlw	252
  1532  003996  6E13               	movwf	??_addRandom& (0+255),c
  1533  003998  0EFF               	movlw	255
  1534  00399A  6E14               	movwf	(??_addRandom+1)& (0+255),c
  1535  00399C  C01D  F015         	movff	addRandom@x,??_addRandom+2
  1536  0039A0  C01E  F016         	movff	addRandom@x+1,??_addRandom+3
  1537  0039A4  90D8               	bcf	status,0,c
  1538  0039A6  3615               	rlcf	??_addRandom+2,f,c
  1539  0039A8  3616               	rlcf	??_addRandom+3,f,c
  1540  0039AA  90D8               	bcf	status,0,c
  1541  0039AC  3615               	rlcf	??_addRandom+2,f,c
  1542  0039AE  3616               	rlcf	??_addRandom+3,f,c
  1543  0039B0  5013               	movf	??_addRandom,w,c
  1544  0039B2  2615               	addwf	??_addRandom+2,f,c
  1545  0039B4  5014               	movf	??_addRandom+1,w,c
  1546  0039B6  2216               	addwfc	??_addRandom+3,f,c
  1547  0039B8  0100               	movlb	0	; () banked
  1548  0039BA  0E80               	movlw	low _led_strip_colors
  1549  0039BC  2415               	addwf	??_addRandom+2,w,c
  1550  0039BE  6ED9               	movwf	fsr2l,c
  1551  0039C0  0100               	movlb	0	; () banked
  1552  0039C2  0E00               	movlw	high _led_strip_colors
  1553  0039C4  2016               	addwfc	??_addRandom+3,w,c
  1554  0039C6  6EDA               	movwf	fsr2h,c
  1555  0039C8  C01D  F017         	movff	addRandom@x,??_addRandom+4
  1556  0039CC  C01E  F018         	movff	addRandom@x+1,??_addRandom+5
  1557  0039D0  90D8               	bcf	status,0,c
  1558  0039D2  3617               	rlcf	??_addRandom+4,f,c
  1559  0039D4  3618               	rlcf	??_addRandom+5,f,c
  1560  0039D6  90D8               	bcf	status,0,c
  1561  0039D8  3617               	rlcf	??_addRandom+4,f,c
  1562  0039DA  3618               	rlcf	??_addRandom+5,f,c
  1563  0039DC  0100               	movlb	0	; () banked
  1564  0039DE  0E80               	movlw	low _led_strip_colors
  1565  0039E0  2417               	addwf	??_addRandom+4,w,c
  1566  0039E2  6EE1               	movwf	fsr1l,c
  1567  0039E4  0100               	movlb	0	; () banked
  1568  0039E6  0E00               	movlw	high _led_strip_colors
  1569  0039E8  2018               	addwfc	??_addRandom+5,w,c
  1570  0039EA  6EE2               	movwf	fsr1h,c
  1571  0039EC  CFDE FFE6          	movff	postinc2,postinc1
  1572  0039F0  CFDE FFE6          	movff	postinc2,postinc1
  1573  0039F4  CFDE FFE6          	movff	postinc2,postinc1
  1574  0039F8  CFDD FFE5          	movff	postdec2,postdec1
  1575  0039FC  52E5               	movf	postdec1,f,c
  1576  0039FE  52E5               	movf	postdec1,f,c
  1577                           
  1578                           ; BSR set to: 0
  1579  003A00  061D               	decf	addRandom@x,f,c
  1580  003A02  A0D8               	btfss	status,0,c
  1581  003A04  061E               	decf	addRandom@x+1,f,c
  1582  003A06  D7C2               	goto	L13
  1583  003A08                     l915:
  1584                           
  1585                           ;led.c: 57: for(x = 0 ; x < 3 ; x++){
  1586  003A08  0E00               	movlw	0
  1587  003A0A  6E1E               	movwf	addRandom@x+1,c
  1588  003A0C  0E00               	movlw	0
  1589  003A0E  6E1D               	movwf	addRandom@x,c
  1590  003A10  0E03               	movlw	3
  1591  003A12  5C1D               	subwf	addRandom@x,w,c
  1592  003A14  0E00               	movlw	0
  1593  003A16  581E               	subwfb	addRandom@x+1,w,c
  1594  003A18  B0D8               	btfsc	status,0,c
  1595  003A1A  D01D               	goto	l61
  1596                           
  1597                           ;led.c: 58: new_color <<= 8;
  1598  003A1C  C01B  F01C         	movff	addRandom@new_color+2,addRandom@new_color+3
  1599  003A20  C01A  F01B         	movff	addRandom@new_color+1,addRandom@new_color+2
  1600  003A24  C019  F01A         	movff	addRandom@new_color,addRandom@new_color+1
  1601  003A28  6A19               	clrf	addRandom@new_color,c
  1602                           
  1603                           ;led.c: 59: new_color |= rand();
  1604  003A2A  EC85  F01C         	call	_rand	;wreg free
  1605  003A2E  C00D  F013         	movff	?_rand,??_addRandom
  1606  003A32  C00E  F014         	movff	?_rand+1,??_addRandom+1
  1607  003A36  0E00               	movlw	0
  1608  003A38  BE14               	btfsc	(??_addRandom+1)& (0+255),7,c
  1609  003A3A  0EFF               	movlw	255
  1610  003A3C  6E15               	movwf	(??_addRandom+2)& (0+255),c
  1611  003A3E  6E16               	movwf	(??_addRandom+3)& (0+255),c
  1612  003A40  5013               	movf	??_addRandom,w,c
  1613  003A42  1219               	iorwf	addRandom@new_color,f,c
  1614  003A44  5014               	movf	??_addRandom+1,w,c
  1615  003A46  121A               	iorwf	addRandom@new_color+1,f,c
  1616  003A48  5015               	movf	??_addRandom+2,w,c
  1617  003A4A  121B               	iorwf	addRandom@new_color+2,f,c
  1618  003A4C  5016               	movf	??_addRandom+3,w,c
  1619  003A4E  121C               	iorwf	addRandom@new_color+3,f,c
  1620  003A50  4A1D               	infsnz	addRandom@x,f,c
  1621  003A52  2A1E               	incf	addRandom@x+1,f,c
  1622  003A54  D7DD               	goto	L14
  1623  003A56                     l61:
  1624                           
  1625                           ;led.c: 60: }
  1626                           ;led.c: 61: led_strip_colors[0] = new_color;
  1627  003A56  C019  F080         	movff	addRandom@new_color,_led_strip_colors
  1628  003A5A  C01A  F081         	movff	addRandom@new_color+1,_led_strip_colors+1
  1629  003A5E  C01B  F082         	movff	addRandom@new_color+2,_led_strip_colors+2
  1630  003A62  C01C  F083         	movff	addRandom@new_color+3,_led_strip_colors+3
  1631  003A66  0012               	return	
  1632  003A68                     __end_of_addRandom:
  1633                           	opt stack 0
  1634                           prodh	equ	0xFF4
  1635                           prodl	equ	0xFF3
  1636                           postinc0	equ	0xFEE
  1637                           wreg	equ	0xFE8
  1638                           postinc1	equ	0xFE6
  1639                           postdec1	equ	0xFE5
  1640                           fsr1h	equ	0xFE2
  1641                           fsr1l	equ	0xFE1
  1642                           indf2	equ	0xFDF
  1643                           postinc2	equ	0xFDE
  1644                           postdec2	equ	0xFDD
  1645                           fsr2h	equ	0xFDA
  1646                           fsr2l	equ	0xFD9
  1647                           status	equ	0xFD8
  1648                           
  1649 ;; *************** function _rand *****************
  1650 ;; Defined at:
  1651 ;;		line 13 in file "/opt/microchip/xc8/v1.30/sources/common/rand.c"
  1652 ;; Parameters:    Size  Location     Type
  1653 ;;		None
  1654 ;; Auto vars:     Size  Location     Type
  1655 ;;		None
  1656 ;; Return value:  Size  Location     Type
  1657 ;;                  2   12[COMRAM] int 
  1658 ;; Registers used:
  1659 ;;		wreg, status,2, status,0, cstack
  1660 ;; Tracked objects:
  1661 ;;		On entry : 0/0
  1662 ;;		On exit  : 0/0
  1663 ;;		Unchanged: 0/0
  1664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1665 ;;      Params:         2       0       0       0       0
  1666 ;;      Locals:         0       0       0       0       0
  1667 ;;      Temps:          4       0       0       0       0
  1668 ;;      Totals:         6       0       0       0       0
  1669 ;;Total ram usage:        6 bytes
  1670 ;; Hardware stack levels used:    1
  1671 ;; Hardware stack levels required when called:    1
  1672 ;; This function calls:
  1673 ;;		___lmul
  1674 ;;		_srand
  1675 ;; This function is called by:
  1676 ;;		_addRandom
  1677 ;; This function uses a non-reentrant model
  1678 ;;
  1679                           
  1680                           	psect	text8
  1681  00390A                     __ptext8:
  1682                           	opt stack 0
  1683  00390A                     _rand:
  1684                           	opt stack 27
  1685                           
  1686                           ;incstack = 0
  1687  00390A  662C               	tstfsz	_randf,c
  1688  00390C  D006               	goto	l879
  1689  00390E  0E00               	movlw	0
  1690  003910  6E02               	movwf	srand@x+1,c
  1691  003912  0E01               	movlw	1
  1692  003914  6E01               	movwf	srand@x,c
  1693  003916  ECBE  F01B         	call	_srand	;wreg free
  1694  00391A                     l879:
  1695  00391A  C028  F001         	movff	_randx,___lmul@multiplier
  1696  00391E  C029  F002         	movff	_randx+1,___lmul@multiplier+1
  1697  003922  C02A  F003         	movff	_randx+2,___lmul@multiplier+2
  1698  003926  C02B  F004         	movff	_randx+3,___lmul@multiplier+3
  1699  00392A  0E6D               	movlw	109
  1700  00392C  6E05               	movwf	___lmul@multiplicand,c
  1701  00392E  0E4E               	movlw	78
  1702  003930  6E06               	movwf	___lmul@multiplicand+1,c
  1703  003932  0EC6               	movlw	198
  1704  003934  6E07               	movwf	___lmul@multiplicand+2,c
  1705  003936  0E41               	movlw	65
  1706  003938  6E08               	movwf	___lmul@multiplicand+3,c
  1707  00393A  EC5A  F01C         	call	___lmul	;wreg free
  1708  00393E  C001  F00F         	movff	?___lmul,??_rand
  1709  003942  C002  F010         	movff	?___lmul+1,??_rand+1
  1710  003946  C003  F011         	movff	?___lmul+2,??_rand+2
  1711  00394A  C004  F012         	movff	?___lmul+3,??_rand+3
  1712  00394E  0E39               	movlw	57
  1713  003950  240F               	addwf	??_rand,w,c
  1714  003952  6E28               	movwf	_randx,c
  1715  003954  0E30               	movlw	48
  1716  003956  2010               	addwfc	??_rand+1,w,c
  1717  003958  6E29               	movwf	_randx+1,c
  1718  00395A  0E00               	movlw	0
  1719  00395C  2011               	addwfc	??_rand+2,w,c
  1720  00395E  6E2A               	movwf	_randx+2,c
  1721  003960  0E00               	movlw	0
  1722  003962  2012               	addwfc	??_rand+3,w,c
  1723  003964  6E2B               	movwf	_randx+3,c
  1724  003966  0EFF               	movlw	255
  1725  003968  142A               	andwf	(_randx+2)& (0+255),w,c
  1726  00396A  6E0D               	movwf	?_rand,c
  1727  00396C  0E7F               	movlw	127
  1728  00396E  142B               	andwf	(_randx+3)& (0+255),w,c
  1729  003970  6E0E               	movwf	?_rand+1,c
  1730  003972  0012               	return	
  1731  003974                     __end_of_rand:
  1732                           	opt stack 0
  1733                           prodh	equ	0xFF4
  1734                           prodl	equ	0xFF3
  1735                           postinc0	equ	0xFEE
  1736                           wreg	equ	0xFE8
  1737                           postinc1	equ	0xFE6
  1738                           postdec1	equ	0xFE5
  1739                           fsr1h	equ	0xFE2
  1740                           fsr1l	equ	0xFE1
  1741                           indf2	equ	0xFDF
  1742                           postinc2	equ	0xFDE
  1743                           postdec2	equ	0xFDD
  1744                           fsr2h	equ	0xFDA
  1745                           fsr2l	equ	0xFD9
  1746                           status	equ	0xFD8
  1747                           
  1748 ;; *************** function _srand *****************
  1749 ;; Defined at:
  1750 ;;		line 7 in file "/opt/microchip/xc8/v1.30/sources/common/rand.c"
  1751 ;; Parameters:    Size  Location     Type
  1752 ;;  x               2    0[COMRAM] unsigned int 
  1753 ;; Auto vars:     Size  Location     Type
  1754 ;;		None
  1755 ;; Return value:  Size  Location     Type
  1756 ;;		None               void
  1757 ;; Registers used:
  1758 ;;		status,2
  1759 ;; Tracked objects:
  1760 ;;		On entry : 0/0
  1761 ;;		On exit  : 0/0
  1762 ;;		Unchanged: 0/0
  1763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1764 ;;      Params:         2       0       0       0       0
  1765 ;;      Locals:         0       0       0       0       0
  1766 ;;      Temps:          1       0       0       0       0
  1767 ;;      Totals:         3       0       0       0       0
  1768 ;;Total ram usage:        3 bytes
  1769 ;; Hardware stack levels used:    1
  1770 ;; This function calls:
  1771 ;;		Nothing
  1772 ;; This function is called by:
  1773 ;;		_rand
  1774 ;; This function uses a non-reentrant model
  1775 ;;
  1776                           
  1777                           	psect	text9
  1778  00377C                     __ptext9:
  1779                           	opt stack 0
  1780  00377C                     _srand:
  1781                           	opt stack 27
  1782                           
  1783                           ;incstack = 0
  1784  00377C  C001  F028         	movff	srand@x,_randx
  1785  003780  C002  F029         	movff	srand@x+1,_randx+1
  1786  003784  6A2A               	clrf	_randx+2,c
  1787  003786  6A2B               	clrf	_randx+3,c
  1788  003788  6E03               	movwf	??_srand& (0+255),c
  1789  00378A  0E01               	movlw	1
  1790  00378C  6E2C               	movwf	_randf,c
  1791  00378E  5003               	movf	??_srand& (0+255),w,c
  1792  003790  0012               	return	
  1793  003792                     __end_of_srand:
  1794                           	opt stack 0
  1795                           prodh	equ	0xFF4
  1796                           prodl	equ	0xFF3
  1797                           postinc0	equ	0xFEE
  1798                           wreg	equ	0xFE8
  1799                           postinc1	equ	0xFE6
  1800                           postdec1	equ	0xFE5
  1801                           fsr1h	equ	0xFE2
  1802                           fsr1l	equ	0xFE1
  1803                           indf2	equ	0xFDF
  1804                           postinc2	equ	0xFDE
  1805                           postdec2	equ	0xFDD
  1806                           fsr2h	equ	0xFDA
  1807                           fsr2l	equ	0xFD9
  1808                           status	equ	0xFD8
  1809                           
  1810 ;; *************** function ___lmul *****************
  1811 ;; Defined at:
  1812 ;;		line 2 in file "/opt/microchip/xc8/v1.30/sources/common/lmul.c"
  1813 ;; Parameters:    Size  Location     Type
  1814 ;;  multiplier      4    0[COMRAM] unsigned long 
  1815 ;;  multiplicand    4    4[COMRAM] unsigned long 
  1816 ;; Auto vars:     Size  Location     Type
  1817 ;;  product         4    8[COMRAM] unsigned long 
  1818 ;; Return value:  Size  Location     Type
  1819 ;;                  4    0[COMRAM] unsigned long 
  1820 ;; Registers used:
  1821 ;;		wreg, status,2, status,0
  1822 ;; Tracked objects:
  1823 ;;		On entry : 0/0
  1824 ;;		On exit  : 0/0
  1825 ;;		Unchanged: 0/0
  1826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1827 ;;      Params:         8       0       0       0       0
  1828 ;;      Locals:         4       0       0       0       0
  1829 ;;      Temps:          0       0       0       0       0
  1830 ;;      Totals:        12       0       0       0       0
  1831 ;;Total ram usage:       12 bytes
  1832 ;; Hardware stack levels used:    1
  1833 ;; This function calls:
  1834 ;;		Nothing
  1835 ;; This function is called by:
  1836 ;;		_rand
  1837 ;; This function uses a non-reentrant model
  1838 ;;
  1839                           
  1840                           	psect	text10
  1841  0038B4                     __ptext10:
  1842                           	opt stack 0
  1843  0038B4                     ___lmul:
  1844                           	opt stack 27
  1845                           
  1846                           ;incstack = 0
  1847  0038B4  0E00               	movlw	0
  1848  0038B6  6E09               	movwf	___lmul@product,c
  1849  0038B8  0E00               	movlw	0
  1850  0038BA  6E0A               	movwf	___lmul@product+1,c
  1851  0038BC  0E00               	movlw	0
  1852  0038BE  6E0B               	movwf	___lmul@product+2,c
  1853  0038C0  0E00               	movlw	0
  1854  0038C2  6E0C               	movwf	___lmul@product+3,c
  1855  0038C4                     l835:
  1856  0038C4  A001               	btfss	___lmul@multiplier,0,c
  1857  0038C6  D008               	goto	l839
  1858  0038C8  5005               	movf	___lmul@multiplicand,w,c
  1859  0038CA  2609               	addwf	___lmul@product,f,c
  1860  0038CC  5006               	movf	___lmul@multiplicand+1,w,c
  1861  0038CE  220A               	addwfc	___lmul@product+1,f,c
  1862  0038D0  5007               	movf	___lmul@multiplicand+2,w,c
  1863  0038D2  220B               	addwfc	___lmul@product+2,f,c
  1864  0038D4  5008               	movf	___lmul@multiplicand+3,w,c
  1865  0038D6  220C               	addwfc	___lmul@product+3,f,c
  1866  0038D8                     l839:
  1867  0038D8  90D8               	bcf	status,0,c
  1868  0038DA  3605               	rlcf	___lmul@multiplicand,f,c
  1869  0038DC  3606               	rlcf	___lmul@multiplicand+1,f,c
  1870  0038DE  3607               	rlcf	___lmul@multiplicand+2,f,c
  1871  0038E0  3608               	rlcf	___lmul@multiplicand+3,f,c
  1872  0038E2  90D8               	bcf	status,0,c
  1873  0038E4  3204               	rrcf	___lmul@multiplier+3,f,c
  1874  0038E6  3203               	rrcf	___lmul@multiplier+2,f,c
  1875  0038E8  3202               	rrcf	___lmul@multiplier+1,f,c
  1876  0038EA  3201               	rrcf	___lmul@multiplier,f,c
  1877  0038EC  5004               	movf	___lmul@multiplier+3,w,c
  1878  0038EE  1001               	iorwf	___lmul@multiplier,w,c
  1879  0038F0  1002               	iorwf	___lmul@multiplier+1,w,c
  1880  0038F2  1003               	iorwf	___lmul@multiplier+2,w,c
  1881  0038F4  A4D8               	btfss	status,2,c
  1882  0038F6  D7E6               	goto	l835
  1883  0038F8  C009  F001         	movff	___lmul@product,?___lmul
  1884  0038FC  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  1885  003900  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  1886  003904  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  1887  003908  0012               	return	
  1888  00390A                     __end_of___lmul:
  1889                           	opt stack 0
  1890                           prodh	equ	0xFF4
  1891                           prodl	equ	0xFF3
  1892                           postinc0	equ	0xFEE
  1893                           wreg	equ	0xFE8
  1894                           postinc1	equ	0xFE6
  1895                           postdec1	equ	0xFE5
  1896                           fsr1h	equ	0xFE2
  1897                           fsr1l	equ	0xFE1
  1898                           indf2	equ	0xFDF
  1899                           postinc2	equ	0xFDE
  1900                           postdec2	equ	0xFDD
  1901                           fsr2h	equ	0xFDA
  1902                           fsr2l	equ	0xFD9
  1903                           status	equ	0xFD8
  1904                           
  1905 ;; *************** function ___lwmod *****************
  1906 ;; Defined at:
  1907 ;;		line 8 in file "/opt/microchip/xc8/v1.30/sources/common/lwmod.c"
  1908 ;; Parameters:    Size  Location     Type
  1909 ;;  dividend        2    0[COMRAM] unsigned int 
  1910 ;;  divisor         2    2[COMRAM] unsigned int 
  1911 ;; Auto vars:     Size  Location     Type
  1912 ;;  counter         1    5[COMRAM] unsigned char 
  1913 ;; Return value:  Size  Location     Type
  1914 ;;                  2    0[COMRAM] unsigned int 
  1915 ;; Registers used:
  1916 ;;		wreg, status,2, status,0
  1917 ;; Tracked objects:
  1918 ;;		On entry : 0/0
  1919 ;;		On exit  : 0/0
  1920 ;;		Unchanged: 0/0
  1921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1922 ;;      Params:         4       0       0       0       0
  1923 ;;      Locals:         1       0       0       0       0
  1924 ;;      Temps:          1       0       0       0       0
  1925 ;;      Totals:         6       0       0       0       0
  1926 ;;Total ram usage:        6 bytes
  1927 ;; Hardware stack levels used:    1
  1928 ;; This function calls:
  1929 ;;		Nothing
  1930 ;; This function is called by:
  1931 ;;		_demoLEDs
  1932 ;; This function uses a non-reentrant model
  1933 ;;
  1934                           
  1935                           	psect	text11
  1936  003820                     __ptext11:
  1937                           	opt stack 0
  1938  003820                     ___lwmod:
  1939                           	opt stack 29
  1940                           
  1941                           ;incstack = 0
  1942  003820  5004               	movf	___lwmod@divisor+1,w,c
  1943  003822  1003               	iorwf	___lwmod@divisor,w,c
  1944  003824  B4D8               	btfsc	status,2,c
  1945  003826  D01A               	goto	l648
  1946  003828  6E05               	movwf	??___lwmod& (0+255),c
  1947  00382A  0E01               	movlw	1
  1948  00382C  6E06               	movwf	___lwmod@counter,c
  1949  00382E  5005               	movf	??___lwmod& (0+255),w,c
  1950  003830  D004               	goto	l849
  1951  003832                     l847:
  1952  003832  90D8               	bcf	status,0,c
  1953  003834  3603               	rlcf	___lwmod@divisor,f,c
  1954  003836  3604               	rlcf	___lwmod@divisor+1,f,c
  1955  003838  2A06               	incf	___lwmod@counter,f,c
  1956  00383A                     l849:
  1957  00383A  AE04               	btfss	___lwmod@divisor+1,7,c
  1958  00383C  D7FA               	goto	l847
  1959  00383E                     l851:
  1960  00383E  5003               	movf	___lwmod@divisor,w,c
  1961  003840  5C01               	subwf	___lwmod@dividend,w,c
  1962  003842  5004               	movf	___lwmod@divisor+1,w,c
  1963  003844  5802               	subwfb	___lwmod@dividend+1,w,c
  1964  003846  A0D8               	btfss	status,0,c
  1965  003848  D004               	goto	l855
  1966  00384A  5003               	movf	___lwmod@divisor,w,c
  1967  00384C  5E01               	subwf	___lwmod@dividend,f,c
  1968  00384E  5004               	movf	___lwmod@divisor+1,w,c
  1969  003850  5A02               	subwfb	___lwmod@dividend+1,f,c
  1970  003852                     l855:
  1971  003852  90D8               	bcf	status,0,c
  1972  003854  3204               	rrcf	___lwmod@divisor+1,f,c
  1973  003856  3203               	rrcf	___lwmod@divisor,f,c
  1974  003858  2E06               	decfsz	___lwmod@counter,f,c
  1975  00385A  D7F1               	goto	l851
  1976  00385C                     l648:
  1977  00385C  C001  F001         	movff	___lwmod@dividend,?___lwmod
  1978  003860  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  1979  003864  0012               	return	
  1980  003866                     __end_of___lwmod:
  1981                           	opt stack 0
  1982  0000                     prodh	equ	0xFF4
  1983                           prodl	equ	0xFF3
  1984                           postinc0	equ	0xFEE
  1985                           wreg	equ	0xFE8
  1986                           postinc1	equ	0xFE6
  1987                           postdec1	equ	0xFE5
  1988                           fsr1h	equ	0xFE2
  1989                           fsr1l	equ	0xFE1
  1990                           indf2	equ	0xFDF
  1991                           postinc2	equ	0xFDE
  1992                           postdec2	equ	0xFDD
  1993                           fsr2h	equ	0xFDA
  1994                           fsr2l	equ	0xFD9
  1995                           status	equ	0xFD8
  1996                           prodh	equ	0xFF4
  1997                           prodl	equ	0xFF3
  1998                           postinc0	equ	0xFEE
  1999                           wreg	equ	0xFE8
  2000                           postinc1	equ	0xFE6
  2001                           postdec1	equ	0xFE5
  2002                           fsr1h	equ	0xFE2
  2003                           fsr1l	equ	0xFE1
  2004                           indf2	equ	0xFDF
  2005                           postinc2	equ	0xFDE
  2006                           postdec2	equ	0xFDD
  2007                           fsr2h	equ	0xFDA
  2008                           fsr2l	equ	0xFD9
  2009                           status	equ	0xFD8
  2010                           
  2011                           	psect	rparam
  2012  0000                     prodh	equ	0xFF4
  2013                           prodl	equ	0xFF3
  2014                           postinc0	equ	0xFEE
  2015                           wreg	equ	0xFE8
  2016                           postinc1	equ	0xFE6
  2017                           postdec1	equ	0xFE5
  2018                           fsr1h	equ	0xFE2
  2019                           fsr1l	equ	0xFE1
  2020                           indf2	equ	0xFDF
  2021                           postinc2	equ	0xFDE
  2022                           postdec2	equ	0xFDD
  2023                           fsr2h	equ	0xFDA
  2024                           fsr2l	equ	0xFD9
  2025                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         133
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     39      44
    BANK0           128      0     128
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_demoLEDs
    _demoLEDs->_addRandom
    _send_frame->_write_latch
    _write_latch->___wmul
    _addRandom->_rand
    _rand->___lmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     0      5    1600
                                             34 COMRAM     5     0      5
                           _demoLEDs
                           _setupSPI
 ---------------------------------------------------------------------------------
 (1) _setupSPI                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _demoLEDs                                             4     4      0    1600
                                             30 COMRAM     4     4      0
                            ___lwmod
                          _addRandom
                         _send_frame
 ---------------------------------------------------------------------------------
 (2) _send_frame                                          11    11      0     387
                                             11 COMRAM    11    11      0
                          _WriteSPI1
                        _write_latch
 ---------------------------------------------------------------------------------
 (3) _write_latch                                          5     3      2     252
                                              6 COMRAM     5     3      2
                          _WriteSPI1
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     173
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _WriteSPI1                                            2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _addRandom                                           12    12      0     334
                                             18 COMRAM    12    12      0
                               _rand
 ---------------------------------------------------------------------------------
 (3) _rand                                                 6     4      2     229
                                             12 COMRAM     6     4      2
                             ___lmul
                              _srand
 ---------------------------------------------------------------------------------
 (4) _srand                                                3     1      2      49
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     180
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     309
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _demoLEDs
     ___lwmod
     _addRandom
       _rand
         ___lmul
         _srand
     _send_frame
       _WriteSPI1
       _write_latch
         _WriteSPI1
         ___wmul
   _setupSPI

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0      80       4      100.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     27      2C       1       34.6%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      AC      11        0.0%
DATA                 0      0      AC      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Tue May  6 04:21:33 2014

            _SSPSTATbits 000FC7                       l61 3A56      ___wmul@multiplicand 0003  
           __CFG_CP0$OFF 000000                      l130 37A6                      l901 3B52  
                    l648 385C                      l851 383E                      l835 38C4  
                    l915 3A08                      l855 3852                      l847 3832  
                    l839 38D8                      l951 3BDC                      l849 383A  
                    l873 38AA                      l939 3B8A                      l869 389E  
                    l879 391A                      l975 3CAA                      l993 3DBC  
                    l985 3D12                      l989 3D66                      l997 3DC2  
                    u135 3876                      u170 3B2C                      u175 3B22  
                    u527 3B7A                      u537 3C9A                      u547 3DE0  
                    u557 3EA0                      u567 3F60                      u577 3FE8  
         send_frame@blue 0014                      wreg 000FE8             __CFG_IESO$ON 000000  
           __CFG_FOSC$EC 000000                     l1021 3E7C                     l1017 3E40  
                   l1025 3E82                     l1009 3DF0                     l1045 3F00  
                   l1053 3F42                     l1037 3EB0                     l1065 3F70  
                   l1049 3F3C                     l1077 3FC2                     l1079 3FC6  
                   l1097 37E0                     _LATA 000F89                     _LATB 000F8A  
                   _LATC 000F8B            __CFG_FCMEN$ON 000000                     _main 37C8  
                   _rand 390A                     fsr1l 000FE1                     indf2 000FDF  
                   fsr2l 000FD9                     prodh 000FF4                     prodl 000FF3  
                   start 0000          send_frame@green 0013            __CFG_FOSC2$ON 000000  
                  ?_main 0023                    ?_rand 000D          __end_of___lwmod 3866  
                  _PORTB 000F81                    _PORTC 000F82                    _TRISB 000F93  
    ___lmul@multiplicand 0005              _write_latch 3866           write_latch@len 0007  
                  _randf 002C                    _randx 0028                    _srand 377C  
                  status 000FD8          __initialization 37AC             __end_of_main 37E6  
           __end_of_rand 3974                   ??_main 0028                   ??_rand 000F  
          __activetblptr 000000                   _ADCON1 000FC1                   ?_srand 0001  
         __CFG_WDTEN$OFF 000000                   _SSPBUF 000FC9         __end_of_demoLEDs 3FF8  
         __CFG_XINST$OFF 000000                   ___lmul 38B4                   ___wmul 37E6  
         __CFG_STVREN$ON 000000                ??___lwmod 0005                   clear_0 37B2  
       __end_of_setupSPI 377C                   srand@x 0001       __size_of_addRandom 00F4  
             __accesstop 0080  __end_of__initialization 37C2       __size_of_WriteSPI1 001A  
         __pcstackCOMRAM 0001            __end_of_srand 3792               addRandom@x 001D  
                ??_srand 0003               __pbssBANK0 0080         WriteSPI1@TempVar 0001  
                ?___lmul 0001                  ?___wmul 0001           ___lmul@product 0009  
      __end_of_addRandom 3A68        __end_of_WriteSPI1 37AC                ?_demoLEDs 0001  
           ?_write_latch 0007                  _SSP1BUF 000FC9                  _SSPCON1 000FC6  
                _SSPSTAT 000FC7              send_frame@i 0015                  __Hparam 0000  
                __Lparam 0000                ?_setupSPI 0001          __size_of___lmul 0056  
        __size_of___wmul 003A                  ___lwmod 3820                  __pcinit 37AC  
                __ramtop 0400                  __ptext0 37C8                  __ptext1 376C  
                __ptext2 3B60                  __ptext3 3A68                  __ptext4 3866  
                __ptext5 37E6                  __ptext6 3792                  __ptext7 3974  
                __ptext8 390A                  __ptext9 377C               ??_demoLEDs 001F  
   end_of_initialization 37C2               _send_frame 3A68         _led_strip_colors 0080  
             ??_setupSPI 0001                  postdec1 000FE5                  postdec2 000FDD  
                postinc0 000FEE                  postinc1 000FE6                  postinc2 000FDE  
              _TRISCbits 000F94            send_frame@red 0012           __end_of___lmul 390A  
         __end_of___wmul 3820      start_initialization 37AC     __size_of_write_latch 004E  
            ?_send_frame 0001                 ??___lmul 0009                 ??___wmul 0005  
            __pbssCOMRAM 0028                _addRandom 3974                _WriteSPI1 3792  
      __size_of_demoLEDs 0498      __CFG_CCP2MX$DEFAULT 000000        WriteSPI1@data_out 0002  
               ?___lwmod 0001        __size_of_setupSPI 0010      __size_of_send_frame 00F8  
             ?_addRandom 0001               ?_WriteSPI1 0001                demoLEDs@i 0021  
         __size_of_srand 0016           ___wmul@product 0005                 _PIR1bits 000F9E  
       __CFG_WDTPS$32768 000000                 _SSP1CON1 000FC6        ___wmul@multiplier 0001  
     addRandom@new_color 0019        ___lmul@multiplier 0001                 __Hrparam 0000  
               __Lrparam 0000         __size_of___lwmod 0046                 _demoLEDs 3B60  
            ??_addRandom 0013              ??_WriteSPI1 0001                 __ptext10 38B4  
               __ptext11 3820             _SSP1CON1bits 000FC6             ??_send_frame 000C  
          __size_of_main 001E            __size_of_rand 006A                 _setupSPI 376C  
               main@argc 0023                 main@argv 0025       __end_of_send_frame 3B60  
          ??_write_latch 0009         ___lwmod@dividend 0001          ___lwmod@divisor 0003  
        ___lwmod@counter 0006      __end_of_write_latch 38B4  
