

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Sat Jul 12 05:45:57 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F24J10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    16  0000                     _ADCON0	set	4034
    17  0000                     _ADCON1	set	4033
    18  0000                     _ADCON2	set	4032
    19  0000                     _ADRESH	set	4036
    20  0000                     _ADRESL	set	4035
    21  0000                     _PIR1bits	set	3998
    22  0000                     _PORTA	set	3968
    23  0000                     _PORTB	set	3969
    24  0000                     _PORTC	set	3970
    25  0000                     _SSP1BUF	set	4041
    26  0000                     _SSP1CON1	set	4038
    27  0000                     _SSP1CON1bits	set	4038
    28  0000                     _SSPBUF	set	4041
    29  0000                     _SSPCON1	set	4038
    30  0000                     _SSPSTAT	set	4039
    31  0000                     _T0CON	set	4053
    32  0000                     _TMR0H	set	4055
    33  0000                     _TMR0L	set	4054
    34  0000                     _TRISA	set	3986
    35  0000                     _TRISB	set	3987
    36  0000                     _TRISBbits	set	3987
    37  0000                     _TRISC	set	3988
    38  0000                     _TRISCbits	set	3988
    39  0000                     _GODONE	set	32273
    40  0000                     _SSPIF	set	31987
    41  0000                     _TMR0IF	set	32658
    42                           
    43 ;;
    44 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
    45 ;;
    46 ;; *************** function _main *****************
    47 ;; Defined at:
    48 ;;		line 45 in file "main.c"
    49 ;; Parameters:    Size  Location     Type
    50 ;;		None
    51 ;; Auto vars:     Size  Location     Type
    52 ;;  total           4   25[COMRAM] long 
    53 ;;  stepNumber      2   62[COMRAM] int 
    54 ;;  PWMcount        2   59[COMRAM] int 
    55 ;;  currentStep     2   57[COMRAM] int 
    56 ;;  midPWM          2   53[COMRAM] int 
    57 ;;  tickCounter     2   50[COMRAM] int 
    58 ;;  sequenceRepe    2   48[COMRAM] int 
    59 ;;  highPWM         2   46[COMRAM] int 
    60 ;;  lowPWM          2   44[COMRAM] int 
    61 ;;  currentGainL    2   42[COMRAM] int 
    62 ;;  clapCounter     2   40[COMRAM] int 
    63 ;;  average         2   38[COMRAM] int 
    64 ;;  highLevel       2   35[COMRAM] int 
    65 ;;  soundDetecte    2   33[COMRAM] int 
    66 ;;  fadeCounter     2   31[COMRAM] int 
    67 ;;  sampleCount     2   29[COMRAM] int 
    68 ;;  mainLevel       2   23[COMRAM] int 
    69 ;;  lowLevel        2   21[COMRAM] int 
    70 ;;  midLevel        2   19[COMRAM] int 
    71 ;;  sequenceNumb    1   61[COMRAM] unsigned char 
    72 ;;  brightness      1   56[COMRAM] unsigned char 
    73 ;;  patternNumbe    1   55[COMRAM] unsigned char 
    74 ;;  mode            1   52[COMRAM] unsigned char 
    75 ;;  soundFlag       1   37[COMRAM] unsigned char 
    76 ;; Return value:  Size  Location     Type
    77 ;;		None               void
    78 ;; Registers used:
    79 ;;		wreg, status,2, status,0, prodl, cstack
    80 ;; Tracked objects:
    81 ;;		On entry : 0/0
    82 ;;		On exit  : 0/0
    83 ;;		Unchanged: 0/0
    84 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
    85 ;;      Params:         0       0       0       0       0
    86 ;;      Locals:        45       0       0       0       0
    87 ;;      Temps:          4       0       0       0       0
    88 ;;      Totals:        49       0       0       0       0
    89 ;;Total ram usage:       49 bytes
    90 ;; Hardware stack levels required when called:    1
    91 ;; This function calls:
    92 ;;		___aldiv
    93 ;;		_readMyADC
    94 ;;		_setGainLevel
    95 ;;		_setupSPI
    96 ;; This function is called by:
    97 ;;		Startup code after reset
    98 ;; This function uses a non-reentrant model
    99 ;;
   100                           
   101                           	psect	text0
   102  00347A                     __ptext0:
   103                           	opt stack 0
   104  00347A                     _main:
   105                           	opt stack 30
   106                           
   107                           ;main.c: 49: ADCON1 = 0x0B;
   108                           
   109                           ;incstack = 0
   110  00347A  0E0B               	movlw	11
   111  00347C  6EC1               	movwf	4033,c	;volatile
   112                           
   113                           ;main.c: 52: ADCON2 = 0xB5;
   114  00347E  0EB5               	movlw	181
   115  003480  6EC0               	movwf	4032,c	;volatile
   116                           
   117                           ;main.c: 55: TRISA = 0x0F;
   118  003482  0E0F               	movlw	15
   119  003484  6E92               	movwf	3986,c	;volatile
   120                           
   121                           ;main.c: 56: TRISB = 0x00;
   122  003486  0E00               	movlw	0
   123  003488  6E93               	movwf	3987,c	;volatile
   124                           
   125                           ;main.c: 57: TRISC = 0x00;
   126  00348A  0E00               	movlw	0
   127  00348C  6E94               	movwf	3988,c	;volatile
   128                           
   129                           ;main.c: 64: PORTA = 0x00;
   130  00348E  0E00               	movlw	0
   131  003490  6E80               	movwf	3968,c	;volatile
   132                           
   133                           ;main.c: 65: PORTB = 0x00;
   134  003492  0E00               	movlw	0
   135  003494  6E81               	movwf	3969,c	;volatile
   136                           
   137                           ;main.c: 66: PORTC = 0x00;
   138  003496  0E00               	movlw	0
   139  003498  6E82               	movwf	3970,c	;volatile
   140                           
   141                           ;main.c: 73: setupSPI();
   142  00349A  EC68  F019         	call	_setupSPI	;wreg free
   143                           
   144                           ;main.c: 76: int highLevel = 0;
   145  00349E  0E00               	movlw	0
   146  0034A0  6E25               	movwf	main@highLevel+1,c
   147  0034A2  0E00               	movlw	0
   148  0034A4  6E24               	movwf	main@highLevel,c
   149                           
   150                           ;main.c: 77: int midLevel = 0;
   151  0034A6  0E00               	movlw	0
   152  0034A8  6E15               	movwf	main@midLevel+1,c
   153  0034AA  0E00               	movlw	0
   154  0034AC  6E14               	movwf	main@midLevel,c
   155                           
   156                           ;main.c: 78: int lowLevel = 0;
   157  0034AE  0E00               	movlw	0
   158  0034B0  6E17               	movwf	main@lowLevel+1,c
   159  0034B2  0E00               	movlw	0
   160  0034B4  6E16               	movwf	main@lowLevel,c
   161                           
   162                           ;main.c: 79: int mainLevel = 0;
   163  0034B6  0E00               	movlw	0
   164  0034B8  6E19               	movwf	main@mainLevel+1,c
   165  0034BA  0E00               	movlw	0
   166  0034BC  6E18               	movwf	main@mainLevel,c
   167                           
   168                           ;main.c: 92: TMR0IF = 0;
   169  0034BE  94F2               	bcf	intcon,2,c	;volatile
   170                           
   171                           ;main.c: 93: TMR0H = 0xF9;
   172  0034C0  0EF9               	movlw	249
   173  0034C2  6ED7               	movwf	4055,c	;volatile
   174                           
   175                           ;main.c: 94: TMR0L = 0xE4;
   176  0034C4  0EE4               	movlw	228
   177  0034C6  6ED6               	movwf	4054,c	;volatile
   178                           
   179                           ;main.c: 96: T0CON = 0x84;
   180  0034C8  0E84               	movlw	132
   181  0034CA  6ED5               	movwf	4053,c	;volatile
   182                           
   183                           ;main.c: 99: int currentGainLevel = 80;
   184  0034CC  0E00               	movlw	0
   185  0034CE  6E2C               	movwf	main@currentGainLevel+1,c
   186  0034D0  0E50               	movlw	80
   187  0034D2  6E2B               	movwf	main@currentGainLevel,c
   188                           
   189                           ;main.c: 100: setGainLevel(currentGainLevel);
   190  0034D4  502B               	movf	main@currentGainLevel,w,c
   191  0034D6  EC81  F019         	call	_setGainLevel
   192                           
   193                           ;main.c: 103: int sampleCount = 0;
   194  0034DA  0E00               	movlw	0
   195  0034DC  6E1F               	movwf	main@sampleCount+1,c
   196  0034DE  0E00               	movlw	0
   197  0034E0  6E1E               	movwf	main@sampleCount,c
   198                           
   199                           ;main.c: 104: long total = 0;
   200  0034E2  0E00               	movlw	0
   201  0034E4  6E1A               	movwf	main@total,c
   202  0034E6  0E00               	movlw	0
   203  0034E8  6E1B               	movwf	main@total+1,c
   204  0034EA  0E00               	movlw	0
   205  0034EC  6E1C               	movwf	main@total+2,c
   206  0034EE  0E00               	movlw	0
   207  0034F0  6E1D               	movwf	main@total+3,c
   208                           
   209                           ;main.c: 105: int average = 0;
   210  0034F2  0E00               	movlw	0
   211  0034F4  6E28               	movwf	main@average+1,c
   212  0034F6  0E00               	movlw	0
   213  0034F8  6E27               	movwf	main@average,c
   214                           
   215                           ;main.c: 108: int PWMcount = 0;
   216  0034FA  0E00               	movlw	0
   217  0034FC  6E3D               	movwf	main@PWMcount+1,c
   218  0034FE  0E00               	movlw	0
   219  003500  6E3C               	movwf	main@PWMcount,c
   220                           
   221                           ;main.c: 109: int lowPWM = 0;
   222  003502  0E00               	movlw	0
   223  003504  6E2E               	movwf	main@lowPWM+1,c
   224  003506  0E00               	movlw	0
   225  003508  6E2D               	movwf	main@lowPWM,c
   226                           
   227                           ;main.c: 110: int midPWM = 0;
   228  00350A  0E00               	movlw	0
   229  00350C  6E37               	movwf	main@midPWM+1,c
   230  00350E  0E00               	movlw	0
   231  003510  6E36               	movwf	main@midPWM,c
   232                           
   233                           ;main.c: 111: int highPWM = 0;
   234  003512  0E00               	movlw	0
   235  003514  6E30               	movwf	main@highPWM+1,c
   236  003516  0E00               	movlw	0
   237  003518  6E2F               	movwf	main@highPWM,c
   238                           
   239                           ;main.c: 112: int fadeCounter = 0;
   240  00351A  0E00               	movlw	0
   241  00351C  6E21               	movwf	main@fadeCounter+1,c
   242  00351E  0E00               	movlw	0
   243  003520  6E20               	movwf	main@fadeCounter,c
   244                           
   245                           ;main.c: 115: unsigned char mode = 0;
   246  003522  6E10               	movwf	??_main& (0+255),c
   247  003524  0E00               	movlw	0
   248  003526  6E35               	movwf	main@mode,c
   249  003528  5010               	movf	??_main& (0+255),w,c
   250                           
   251                           ;main.c: 118: int tickCounter = 0;
   252  00352A  0E00               	movlw	0
   253  00352C  6E34               	movwf	main@tickCounter+1,c
   254  00352E  0E00               	movlw	0
   255  003530  6E33               	movwf	main@tickCounter,c
   256                           
   257                           ;main.c: 121: unsigned char patternNumber = 0;
   258  003532  6E10               	movwf	??_main& (0+255),c
   259  003534  0E00               	movlw	0
   260  003536  6E38               	movwf	main@patternNumber,c
   261  003538  5010               	movf	??_main& (0+255),w,c
   262                           
   263                           ;main.c: 122: unsigned char sequenceNumber = 0;
   264  00353A  6E10               	movwf	??_main& (0+255),c
   265  00353C  0E00               	movlw	0
   266  00353E  6E3E               	movwf	main@sequenceNumber,c
   267  003540  5010               	movf	??_main& (0+255),w,c
   268                           
   269                           ;main.c: 123: int stepNumber = 0;
   270  003542  0E00               	movlw	0
   271  003544  6E40               	movwf	main@stepNumber+1,c
   272  003546  0E00               	movlw	0
   273  003548  6E3F               	movwf	main@stepNumber,c
   274                           
   275                           ;main.c: 124: int currentStep = 0;
   276  00354A  0E00               	movlw	0
   277  00354C  6E3B               	movwf	main@currentStep+1,c
   278  00354E  0E00               	movlw	0
   279  003550  6E3A               	movwf	main@currentStep,c
   280                           
   281                           ;main.c: 125: unsigned char brightness = 0;
   282  003552  6E10               	movwf	??_main& (0+255),c
   283  003554  0E00               	movlw	0
   284  003556  6E39               	movwf	main@brightness,c
   285  003558  5010               	movf	??_main& (0+255),w,c
   286                           
   287                           ;main.c: 126: int sequenceRepeats = 0;
   288  00355A  0E00               	movlw	0
   289  00355C  6E32               	movwf	main@sequenceRepeats+1,c
   290  00355E  0E00               	movlw	0
   291  003560  6E31               	movwf	main@sequenceRepeats,c
   292                           
   293                           ;main.c: 129: int soundDetectedCount = 0;
   294  003562  0E00               	movlw	0
   295  003564  6E23               	movwf	main@soundDetectedCount+1,c
   296  003566  0E00               	movlw	0
   297  003568  6E22               	movwf	main@soundDetectedCount,c
   298                           
   299                           ;main.c: 130: unsigned char soundFlag = 0;
   300  00356A  6E10               	movwf	??_main& (0+255),c
   301  00356C  0E00               	movlw	0
   302  00356E  6E26               	movwf	main@soundFlag,c
   303  003570  5010               	movf	??_main& (0+255),w,c
   304                           
   305                           ;main.c: 131: int clapCounter = 0;
   306  003572  0E00               	movlw	0
   307  003574  6E2A               	movwf	main@clapCounter+1,c
   308  003576  0E00               	movlw	0
   309  003578  6E29               	movwf	main@clapCounter,c
   310  00357A                     l1314:
   311                           
   312                           ;main.c: 134: {
   313                           ;main.c: 140: if (TMR0IF == 1)
   314  00357A  A4F2               	btfss	intcon,2,c	;volatile
   315  00357C  D013               	goto	l1324
   316                           
   317                           ;main.c: 141: {
   318                           ;main.c: 142: tickCounter++;
   319  00357E  4A33               	infsnz	main@tickCounter,f,c
   320  003580  2A34               	incf	main@tickCounter+1,f,c
   321                           
   322                           ;main.c: 143: if (tickCounter > 1000) tickCounter = 0;
   323  003582  5034               	movf	main@tickCounter+1,w,c
   324  003584  0A80               	xorlw	128
   325  003586  0F7D               	addlw	-131
   326  003588  0EE9               	movlw	233
   327  00358A  B4D8               	btfsc	status,2,c
   328  00358C  5C33               	subwf	main@tickCounter,w,c
   329  00358E  A0D8               	btfss	status,0,c
   330  003590  D004               	goto	l45
   331  003592  0E00               	movlw	0
   332  003594  6E34               	movwf	main@tickCounter+1,c
   333  003596  0E00               	movlw	0
   334  003598  6E33               	movwf	main@tickCounter,c
   335  00359A                     l45:
   336                           
   337                           ;main.c: 146: TMR0H = 0xF9;
   338  00359A  0EF9               	movlw	249
   339  00359C  6ED7               	movwf	4055,c	;volatile
   340                           
   341                           ;main.c: 147: TMR0L = 0xE4;
   342  00359E  0EE4               	movlw	228
   343  0035A0  6ED6               	movwf	4054,c	;volatile
   344                           
   345                           ;main.c: 148: TMR0IF = 0;
   346  0035A2  94F2               	bcf	intcon,2,c	;volatile
   347  0035A4                     l1324:
   348                           
   349                           ;main.c: 149: }
   350                           ;main.c: 152: highLevel = readMyADC(0);
   351  0035A4  0E00               	movlw	0
   352  0035A6  EC94  F019         	call	_readMyADC
   353  0035AA  C001  F024         	movff	?_readMyADC,main@highLevel
   354  0035AE  C002  F025         	movff	?_readMyADC+1,main@highLevel+1
   355                           
   356                           ;main.c: 183: {
   357                           ;main.c: 184: if (mode != 1)
   358                           
   359                           ;main.c: 179: }
   360                           ;main.c: 180: }
   361                           ;main.c: 182: if (0 == 0 && 0 == 0)
   362                           
   363                           ;main.c: 178: sequenceRepeats = 0;
   364                           
   365                           ;main.c: 177: brightness = 0;
   366                           
   367                           ;main.c: 176: currentStep = 0;
   368                           
   369                           ;main.c: 175: stepNumber = 0;
   370                           
   371                           ;main.c: 174: sequenceNumber = 0;
   372                           
   373                           ;main.c: 173: patternNumber = 0;
   374                           
   375                           ;main.c: 170: TRISBbits.RB2 = 0;
   376                           
   377                           ;main.c: 169: TRISBbits.RB1 = 0;
   378                           
   379                           ;main.c: 168: TRISBbits.RB0 = 0;
   380                           
   381                           ;main.c: 167: TRISBbits.RB5 = 0;
   382                           
   383                           ;main.c: 166: TRISBbits.RB4 = 0;
   384                           
   385                           ;main.c: 165: TRISBbits.RB3 = 0;
   386                           
   387                           ;main.c: 161: {
   388                           ;main.c: 162: mode = 0;
   389                           
   390                           ;main.c: 159: {
   391                           ;main.c: 160: if (mode != 0)
   392                           
   393                           ;main.c: 158: if (0 == 1 && 0 == 0)
   394  0035B2  0435               	decf	main@mode,w,c
   395  0035B4  B4D8               	btfsc	status,2,c
   396  0035B6  D00A               	goto	l1380
   397                           
   398                           ;main.c: 185: {
   399                           ;main.c: 186: mode = 1;
   400  0035B8  6E10               	movwf	??_main& (0+255),c
   401  0035BA  0E01               	movlw	1
   402  0035BC  6E35               	movwf	main@mode,c
   403  0035BE  5010               	movf	??_main& (0+255),w,c
   404                           
   405                           ;main.c: 189: TRISBbits.RB3 = 0;
   406  0035C0  9693               	bcf	3987,3,c	;volatile
   407                           
   408                           ;main.c: 190: TRISBbits.RB4 = 0;
   409  0035C2  9893               	bcf	3987,4,c	;volatile
   410                           
   411                           ;main.c: 191: TRISBbits.RB5 = 0;
   412  0035C4  9A93               	bcf	3987,5,c	;volatile
   413                           
   414                           ;main.c: 192: TRISBbits.RB0 = 0;
   415  0035C6  9093               	bcf	3987,0,c	;volatile
   416                           
   417                           ;main.c: 193: TRISBbits.RB1 = 0;
   418  0035C8  9293               	bcf	3987,1,c	;volatile
   419                           
   420                           ;main.c: 194: TRISBbits.RB2 = 0;
   421  0035CA  9493               	bcf	3987,2,c	;volatile
   422  0035CC                     l1380:
   423                           
   424                           ;main.c: 211: }
   425                           ;main.c: 212: }
   426                           ;main.c: 215: total += mainLevel;
   427  0035CC  C018  F010         	movff	main@mainLevel,??_main
   428  0035D0  C019  F011         	movff	main@mainLevel+1,??_main+1
   429  0035D4  0E00               	movlw	0
   430  0035D6  BE11               	btfsc	(??_main+1)& (0+255),7,c
   431  0035D8  0EFF               	movlw	255
   432  0035DA  6E12               	movwf	(??_main+2)& (0+255),c
   433  0035DC  6E13               	movwf	(??_main+3)& (0+255),c
   434  0035DE  5010               	movf	??_main,w,c
   435  0035E0  261A               	addwf	main@total,f,c
   436  0035E2  5011               	movf	??_main+1,w,c
   437  0035E4  221B               	addwfc	main@total+1,f,c
   438  0035E6  5012               	movf	??_main+2,w,c
   439  0035E8  221C               	addwfc	main@total+2,f,c
   440  0035EA  5013               	movf	??_main+3,w,c
   441  0035EC  221D               	addwfc	main@total+3,f,c
   442                           
   443                           ;main.c: 216: sampleCount++;
   444  0035EE  4A1E               	infsnz	main@sampleCount,f,c
   445  0035F0  2A1F               	incf	main@sampleCount+1,f,c
   446                           
   447                           ;main.c: 218: if (sampleCount == 200)
   448  0035F2  501E               	movf	main@sampleCount,w,c
   449  0035F4  0AC8               	xorlw	200
   450  0035F6  101F               	iorwf	main@sampleCount+1,w,c
   451  0035F8  A4D8               	btfss	status,2,c
   452  0035FA  D075               	goto	l1412
   453                           
   454                           ;main.c: 219: {
   455                           ;main.c: 220: average = total / sampleCount;
   456  0035FC  C01A  F001         	movff	main@total,___aldiv@dividend
   457  003600  C01B  F002         	movff	main@total+1,___aldiv@dividend+1
   458  003604  C01C  F003         	movff	main@total+2,___aldiv@dividend+2
   459  003608  C01D  F004         	movff	main@total+3,___aldiv@dividend+3
   460  00360C  C01E  F005         	movff	main@sampleCount,___aldiv@divisor
   461  003610  C01F  F006         	movff	main@sampleCount+1,___aldiv@divisor+1
   462  003614  0E00               	movlw	0
   463  003616  BE06               	btfsc	___aldiv@divisor+1,7,c
   464  003618  0EFF               	movlw	-1
   465  00361A  6E07               	movwf	___aldiv@divisor+2,c
   466  00361C  6E08               	movwf	___aldiv@divisor+3,c
   467  00361E  ECB9  F019         	call	___aldiv	;wreg free
   468  003622  C001  F010         	movff	?___aldiv,??_main
   469  003626  C002  F011         	movff	?___aldiv+1,??_main+1
   470  00362A  C003  F012         	movff	?___aldiv+2,??_main+2
   471  00362E  C004  F013         	movff	?___aldiv+3,??_main+3
   472  003632  C010  F027         	movff	??_main,main@average
   473  003636  C011  F028         	movff	??_main+1,main@average+1
   474                           
   475                           ;main.c: 223: if (currentGainLevel <= 250 && currentGainLevel >= 10)
   476  00363A  502C               	movf	main@currentGainLevel+1,w,c
   477  00363C  0A80               	xorlw	128
   478  00363E  6EF3               	movwf	prodl,c
   479  003640  0E80               	movlw	128
   480  003642  5CF3               	subwf	prodl,w,c
   481  003644  0EFB               	movlw	251
   482  003646  B4D8               	btfsc	status,2,c
   483  003648  5C2B               	subwf	main@currentGainLevel,w,c
   484  00364A  B0D8               	btfsc	status,0,c
   485  00364C  D023               	goto	l1398
   486  00364E  502C               	movf	main@currentGainLevel+1,w,c
   487  003650  0A80               	xorlw	128
   488  003652  0F80               	addlw	-128
   489  003654  0E0A               	movlw	10
   490  003656  B4D8               	btfsc	status,2,c
   491  003658  5C2B               	subwf	main@currentGainLevel,w,c
   492  00365A  A0D8               	btfss	status,0,c
   493  00365C  D01B               	goto	l1398
   494                           
   495                           ;main.c: 224: {
   496                           ;main.c: 225: if (average < 100) currentGainLevel += 4;
   497  00365E  5028               	movf	main@average+1,w,c
   498  003660  0A80               	xorlw	128
   499  003662  6EF3               	movwf	prodl,c
   500  003664  0E80               	movlw	128
   501  003666  5CF3               	subwf	prodl,w,c
   502  003668  0E64               	movlw	100
   503  00366A  B4D8               	btfsc	status,2,c
   504  00366C  5C27               	subwf	main@average,w,c
   505  00366E  B0D8               	btfsc	status,0,c
   506  003670  D004               	goto	l54
   507  003672  0E04               	movlw	4
   508  003674  262B               	addwf	main@currentGainLevel,f,c
   509  003676  0E00               	movlw	0
   510  003678  222C               	addwfc	main@currentGainLevel+1,f,c
   511  00367A                     l54:
   512                           
   513                           ;main.c: 226: if (average > 100) currentGainLevel -= 4;
   514  00367A  5028               	movf	main@average+1,w,c
   515  00367C  0A80               	xorlw	128
   516  00367E  0F80               	addlw	-128
   517  003680  0E65               	movlw	101
   518  003682  B4D8               	btfsc	status,2,c
   519  003684  5C27               	subwf	main@average,w,c
   520  003686  A0D8               	btfss	status,0,c
   521  003688  D01F               	goto	l1406
   522  00368A  0EFC               	movlw	252
   523  00368C  262B               	addwf	main@currentGainLevel,f,c
   524  00368E  0EFF               	movlw	255
   525  003690  222C               	addwfc	main@currentGainLevel+1,f,c
   526  003692  D01A               	goto	l1406
   527  003694                     l1398:
   528                           
   529                           ;main.c: 228: else
   530                           ;main.c: 229: {
   531                           ;main.c: 230: if (currentGainLevel < 10) currentGainLevel = 10 + 1;
   532  003694  502C               	movf	main@currentGainLevel+1,w,c
   533  003696  0A80               	xorlw	128
   534  003698  6EF3               	movwf	prodl,c
   535  00369A  0E80               	movlw	128
   536  00369C  5CF3               	subwf	prodl,w,c
   537  00369E  0E0A               	movlw	10
   538  0036A0  B4D8               	btfsc	status,2,c
   539  0036A2  5C2B               	subwf	main@currentGainLevel,w,c
   540  0036A4  B0D8               	btfsc	status,0,c
   541  0036A6  D004               	goto	l1402
   542  0036A8  0E00               	movlw	0
   543  0036AA  6E2C               	movwf	main@currentGainLevel+1,c
   544  0036AC  0E0B               	movlw	11
   545  0036AE  6E2B               	movwf	main@currentGainLevel,c
   546  0036B0                     l1402:
   547                           
   548                           ;main.c: 231: if (currentGainLevel > 250) currentGainLevel = 250 - 1;
   549  0036B0  502C               	movf	main@currentGainLevel+1,w,c
   550  0036B2  0A80               	xorlw	128
   551  0036B4  0F80               	addlw	-128
   552  0036B6  0EFB               	movlw	251
   553  0036B8  B4D8               	btfsc	status,2,c
   554  0036BA  5C2B               	subwf	main@currentGainLevel,w,c
   555  0036BC  A0D8               	btfss	status,0,c
   556  0036BE  D004               	goto	l1406
   557  0036C0  0E00               	movlw	0
   558  0036C2  6E2C               	movwf	main@currentGainLevel+1,c
   559  0036C4  0EF9               	movlw	249
   560  0036C6  6E2B               	movwf	main@currentGainLevel,c
   561  0036C8                     l1406:
   562                           
   563                           ;main.c: 232: }
   564                           ;main.c: 234: setGainLevel(currentGainLevel);
   565  0036C8  502B               	movf	main@currentGainLevel,w,c
   566  0036CA  EC81  F019         	call	_setGainLevel
   567                           
   568                           ;main.c: 236: sampleCount = 0;
   569  0036CE  0E00               	movlw	0
   570  0036D0  6E1F               	movwf	main@sampleCount+1,c
   571  0036D2  0E00               	movlw	0
   572  0036D4  6E1E               	movwf	main@sampleCount,c
   573                           
   574                           ;main.c: 237: total = 0;
   575  0036D6  0E00               	movlw	0
   576  0036D8  6E1A               	movwf	main@total,c
   577  0036DA  0E00               	movlw	0
   578  0036DC  6E1B               	movwf	main@total+1,c
   579  0036DE  0E00               	movlw	0
   580  0036E0  6E1C               	movwf	main@total+2,c
   581  0036E2  0E00               	movlw	0
   582  0036E4  6E1D               	movwf	main@total+3,c
   583  0036E6                     l1412:
   584                           
   585                           ;main.c: 238: }
   586                           ;main.c: 242: if (mode == 1)
   587  0036E6  0435               	decf	main@mode,w,c
   588  0036E8  A4D8               	btfss	status,2,c
   589  0036EA  D04C               	goto	l1450
   590                           
   591                           ;main.c: 243: {
   592                           ;main.c: 244: if (soundFlag == 0)
   593  0036EC  6626               	tstfsz	main@soundFlag,c
   594  0036EE  D01A               	goto	l1428
   595                           
   596                           ;main.c: 245: {
   597                           ;main.c: 246: if (average >= 80) soundDetectedCount++; else soundDetectedCount = 0;
   598  0036F0  5028               	movf	main@average+1,w,c
   599  0036F2  0A80               	xorlw	128
   600  0036F4  0F80               	addlw	-128
   601  0036F6  0E50               	movlw	80
   602  0036F8  B4D8               	btfsc	status,2,c
   603  0036FA  5C27               	subwf	main@average,w,c
   604  0036FC  A0D8               	btfss	status,0,c
   605  0036FE  D003               	goto	l1420
   606  003700  4A22               	infsnz	main@soundDetectedCount,f,c
   607  003702  2A23               	incf	main@soundDetectedCount+1,f,c
   608  003704  D004               	goto	l1422
   609  003706                     l1420:
   610  003706  0E00               	movlw	0
   611  003708  6E23               	movwf	main@soundDetectedCount+1,c
   612  00370A  0E00               	movlw	0
   613  00370C  6E22               	movwf	main@soundDetectedCount,c
   614  00370E                     l1422:
   615                           
   616                           ;main.c: 247: if (soundDetectedCount > 1500)
   617  00370E  5023               	movf	main@soundDetectedCount+1,w,c
   618  003710  0A80               	xorlw	128
   619  003712  0F7B               	addlw	-133
   620  003714  0EDD               	movlw	221
   621  003716  B4D8               	btfsc	status,2,c
   622  003718  5C22               	subwf	main@soundDetectedCount,w,c
   623  00371A  A0D8               	btfss	status,0,c
   624  00371C  D024               	goto	l1440
   625                           
   626                           ;main.c: 248: {
   627                           ;main.c: 249: soundFlag = 1;
   628  00371E  6E10               	movwf	??_main& (0+255),c
   629  003720  0E01               	movlw	1
   630  003722  D01B               	goto	L1
   631  003724                     l1428:
   632                           
   633                           ;main.c: 253: else
   634                           ;main.c: 254: {
   635                           ;main.c: 255: if (average < 50) soundDetectedCount++; else soundDetectedCount = 0;
   636  003724  5028               	movf	main@average+1,w,c
   637  003726  0A80               	xorlw	128
   638  003728  6EF3               	movwf	prodl,c
   639  00372A  0E80               	movlw	128
   640  00372C  5CF3               	subwf	prodl,w,c
   641  00372E  0E32               	movlw	50
   642  003730  B4D8               	btfsc	status,2,c
   643  003732  5C27               	subwf	main@average,w,c
   644  003734  B0D8               	btfsc	status,0,c
   645  003736  D003               	goto	l1432
   646  003738  4A22               	infsnz	main@soundDetectedCount,f,c
   647  00373A  2A23               	incf	main@soundDetectedCount+1,f,c
   648  00373C  D004               	goto	l1434
   649  00373E                     l1432:
   650  00373E  0E00               	movlw	0
   651  003740  6E23               	movwf	main@soundDetectedCount+1,c
   652  003742  0E00               	movlw	0
   653  003744  6E22               	movwf	main@soundDetectedCount,c
   654  003746                     l1434:
   655                           
   656                           ;main.c: 256: if (soundDetectedCount > 10000)
   657  003746  5023               	movf	main@soundDetectedCount+1,w,c
   658  003748  0A80               	xorlw	128
   659  00374A  0F59               	addlw	-167
   660  00374C  0E11               	movlw	17
   661  00374E  B4D8               	btfsc	status,2,c
   662  003750  5C22               	subwf	main@soundDetectedCount,w,c
   663  003752  A0D8               	btfss	status,0,c
   664  003754  D008               	goto	l1440
   665                           
   666                           ;main.c: 257: {
   667                           ;main.c: 258: soundFlag = 0;
   668  003756  6E10               	movwf	??_main& (0+255),c
   669  003758  0E00               	movlw	0
   670  00375A                     L1:
   671  00375A  6E26               	movwf	main@soundFlag,c
   672  00375C  5010               	movf	??_main& (0+255),w,c
   673                           
   674                           ;main.c: 259: soundDetectedCount = 0;
   675  00375E  0E00               	movlw	0
   676  003760  6E23               	movwf	main@soundDetectedCount+1,c
   677  003762  0E00               	movlw	0
   678  003764  6E22               	movwf	main@soundDetectedCount,c
   679  003766                     l1440:
   680                           
   681                           ;main.c: 260: }
   682                           ;main.c: 261: }
   683                           ;main.c: 263: if (soundFlag == 0) TRISBbits.RB3 = 1; else TRISBbits.RB3 = 0;
   684  003766  6626               	tstfsz	main@soundFlag,c
   685  003768  D002               	goto	l68
   686  00376A  8693               	bsf	3987,3,c	;volatile
   687  00376C  D001               	goto	l1444
   688  00376E                     l68:
   689  00376E  9693               	bcf	3987,3,c	;volatile
   690  003770                     l1444:
   691                           
   692                           ;main.c: 266: if (soundFlag == 1) mode = 2; else mode = 0;
   693  003770  0426               	decf	main@soundFlag,w,c
   694  003772  A4D8               	btfss	status,2,c
   695  003774  D003               	goto	l1448
   696  003776  6E10               	movwf	??_main& (0+255),c
   697  003778  0E02               	movlw	2
   698  00377A  D002               	goto	L2
   699  00377C                     l1448:
   700  00377C  6E10               	movwf	??_main& (0+255),c
   701  00377E  0E00               	movlw	0
   702  003780                     L2:
   703  003780  6E35               	movwf	main@mode,c
   704  003782  5010               	movf	??_main& (0+255),w,c
   705  003784                     l1450:
   706                           
   707                           ;main.c: 267: }
   708                           ;main.c: 270: if (mode == 0)
   709  003784  6635               	tstfsz	main@mode,c
   710  003786  D37D               	goto	l1856
   711                           
   712                           ;main.c: 271: {
   713                           ;main.c: 273: if ((highLevel > 600) && (clapCounter == 0))
   714  003788  5025               	movf	main@highLevel+1,w,c
   715  00378A  0A80               	xorlw	128
   716  00378C  0F7E               	addlw	-130
   717  00378E  0E59               	movlw	89
   718  003790  B4D8               	btfsc	status,2,c
   719  003792  5C24               	subwf	main@highLevel,w,c
   720  003794  A0D8               	btfss	status,0,c
   721  003796  D008               	goto	l1458
   722  003798  502A               	movf	main@clapCounter+1,w,c
   723  00379A  1029               	iorwf	main@clapCounter,w,c
   724  00379C  A4D8               	btfss	status,2,c
   725  00379E  D004               	goto	l1458
   726                           
   727                           ;main.c: 274: {
   728                           ;main.c: 275: clapCounter = 1;
   729  0037A0  0E00               	movlw	0
   730  0037A2  6E2A               	movwf	main@clapCounter+1,c
   731  0037A4  0E01               	movlw	1
   732  0037A6  6E29               	movwf	main@clapCounter,c
   733  0037A8                     l1458:
   734                           
   735                           ;main.c: 276: }
   736                           ;main.c: 278: if (clapCounter > 0) clapCounter++;
   737  0037A8  502A               	movf	main@clapCounter+1,w,c
   738  0037AA  0A80               	xorlw	128
   739  0037AC  0F80               	addlw	-128
   740  0037AE  0E01               	movlw	1
   741  0037B0  B4D8               	btfsc	status,2,c
   742  0037B2  5C29               	subwf	main@clapCounter,w,c
   743  0037B4  A0D8               	btfss	status,0,c
   744  0037B6  D002               	goto	l1462
   745  0037B8  4A29               	infsnz	main@clapCounter,f,c
   746  0037BA  2A2A               	incf	main@clapCounter+1,f,c
   747  0037BC                     l1462:
   748                           
   749                           ;main.c: 279: if (clapCounter > 1000)
   750  0037BC  502A               	movf	main@clapCounter+1,w,c
   751  0037BE  0A80               	xorlw	128
   752  0037C0  0F7D               	addlw	-131
   753  0037C2  0EE9               	movlw	233
   754  0037C4  B4D8               	btfsc	status,2,c
   755  0037C6  5C29               	subwf	main@clapCounter,w,c
   756  0037C8  A0D8               	btfss	status,0,c
   757  0037CA  D02F               	goto	l1486
   758                           
   759                           ;main.c: 280: {
   760                           ;main.c: 281: if (highLevel < 600)
   761  0037CC  5025               	movf	main@highLevel+1,w,c
   762  0037CE  0A80               	xorlw	128
   763  0037D0  6EF3               	movwf	prodl,c
   764  0037D2  0E82               	movlw	130
   765  0037D4  5CF3               	subwf	prodl,w,c
   766  0037D6  0E58               	movlw	88
   767  0037D8  B4D8               	btfsc	status,2,c
   768  0037DA  5C24               	subwf	main@highLevel,w,c
   769  0037DC  B0D8               	btfsc	status,0,c
   770  0037DE  D021               	goto	l1484
   771                           
   772                           ;main.c: 282: {
   773                           ;main.c: 284: clapCounter = 0;
   774  0037E0  0E00               	movlw	0
   775  0037E2  6E2A               	movwf	main@clapCounter+1,c
   776  0037E4  0E00               	movlw	0
   777  0037E6  6E29               	movwf	main@clapCounter,c
   778                           
   779                           ;main.c: 285: patternNumber++;
   780  0037E8  2A38               	incf	main@patternNumber,f,c
   781                           
   782                           ;main.c: 286: sequenceNumber = 0;
   783  0037EA  6E10               	movwf	??_main& (0+255),c
   784  0037EC  0E00               	movlw	0
   785  0037EE  6E3E               	movwf	main@sequenceNumber,c
   786  0037F0  5010               	movf	??_main& (0+255),w,c
   787                           
   788                           ;main.c: 287: stepNumber = 0;
   789  0037F2  0E00               	movlw	0
   790  0037F4  6E40               	movwf	main@stepNumber+1,c
   791  0037F6  0E00               	movlw	0
   792  0037F8  6E3F               	movwf	main@stepNumber,c
   793                           
   794                           ;main.c: 288: currentStep = 0;
   795  0037FA  0E00               	movlw	0
   796  0037FC  6E3B               	movwf	main@currentStep+1,c
   797  0037FE  0E00               	movlw	0
   798  003800  6E3A               	movwf	main@currentStep,c
   799                           
   800                           ;main.c: 289: brightness = 0;
   801  003802  6E10               	movwf	??_main& (0+255),c
   802  003804  0E00               	movlw	0
   803  003806  6E39               	movwf	main@brightness,c
   804  003808  5010               	movf	??_main& (0+255),w,c
   805                           
   806                           ;main.c: 290: sequenceRepeats = 0;
   807  00380A  0E00               	movlw	0
   808  00380C  6E32               	movwf	main@sequenceRepeats+1,c
   809  00380E  0E00               	movlw	0
   810  003810  6E31               	movwf	main@sequenceRepeats,c
   811                           
   812                           ;main.c: 291: if (patternNumber > 4) patternNumber = 0;
   813  003812  0E04               	movlw	4
   814  003814  6438               	cpfsgt	main@patternNumber,c
   815  003816  D009               	goto	l1486
   816  003818  6E10               	movwf	??_main& (0+255),c
   817  00381A  0E00               	movlw	0
   818  00381C  6E38               	movwf	main@patternNumber,c
   819  00381E  5010               	movf	??_main& (0+255),w,c
   820  003820  D004               	goto	l1486
   821  003822                     l1484:
   822                           
   823                           ;main.c: 293: else clapCounter = 1;
   824  003822  0E00               	movlw	0
   825  003824  6E2A               	movwf	main@clapCounter+1,c
   826  003826  0E01               	movlw	1
   827  003828  6E29               	movwf	main@clapCounter,c
   828  00382A                     l1486:
   829                           
   830                           ;main.c: 294: }
   831                           ;main.c: 296: if (clapCounter > 0) TRISBbits.RB5 = 1; else TRISBbits.RB5 = 0;
   832  00382A  502A               	movf	main@clapCounter+1,w,c
   833  00382C  0A80               	xorlw	128
   834  00382E  0F80               	addlw	-128
   835  003830  0E01               	movlw	1
   836  003832  B4D8               	btfsc	status,2,c
   837  003834  5C29               	subwf	main@clapCounter,w,c
   838  003836  A0D8               	btfss	status,0,c
   839  003838  D002               	goto	l79
   840  00383A  8A93               	bsf	3987,5,c	;volatile
   841  00383C  D001               	goto	l80
   842  00383E                     l79:
   843  00383E  9A93               	bcf	3987,5,c	;volatile
   844  003840                     l80:
   845                           
   846                           ;main.c: 299: if (patternNumber == 0)
   847  003840  6638               	tstfsz	main@patternNumber,c
   848  003842  D0CF               	goto	l1582
   849                           
   850                           ;main.c: 300: {
   851                           ;main.c: 301: if (sequenceNumber == 0)
   852  003844  663E               	tstfsz	main@sequenceNumber,c
   853  003846  D01E               	goto	l1504
   854                           
   855                           ;main.c: 302: {
   856                           ;main.c: 303: if (currentStep != stepNumber)
   857  003848  5040               	movf	main@stepNumber+1,w,c
   858  00384A  183B               	xorwf	main@currentStep+1,w,c
   859  00384C  E102               	bnz	u785
   860  00384E  503F               	movf	main@stepNumber,w,c
   861  003850  183A               	xorwf	main@currentStep,w,c
   862  003852                     u785:
   863  003852  B4D8               	btfsc	status,2,c
   864  003854  D013               	goto	l1502
   865                           
   866                           ;main.c: 304: {
   867                           ;main.c: 305: currentStep = stepNumber;
   868  003856  C03F  F03A         	movff	main@stepNumber,main@currentStep
   869  00385A  C040  F03B         	movff	main@stepNumber+1,main@currentStep+1
   870                           
   871                           ;main.c: 306: if (currentStep < 16) brightness += 2; else brightness -= 2;
   872  00385E  503B               	movf	main@currentStep+1,w,c
   873  003860  0A80               	xorlw	128
   874  003862  6EF3               	movwf	prodl,c
   875  003864  0E80               	movlw	128
   876  003866  5CF3               	subwf	prodl,w,c
   877  003868  0E10               	movlw	16
   878  00386A  B4D8               	btfsc	status,2,c
   879  00386C  5C3A               	subwf	main@currentStep,w,c
   880  00386E  B0D8               	btfsc	status,0,c
   881  003870  D003               	goto	l1500
   882  003872  0E02               	movlw	2
   883  003874  2639               	addwf	main@brightness,f,c
   884  003876  D002               	goto	l1502
   885  003878                     l1500:
   886  003878  0E02               	movlw	2
   887  00387A  5E39               	subwf	main@brightness,f,c
   888  00387C                     l1502:
   889                           
   890                           ;main.c: 307: }
   891                           ;main.c: 308: highPWM = brightness;
   892  00387C  C039  F02F         	movff	main@brightness,main@highPWM
   893  003880  6A30               	clrf	main@highPWM+1,c
   894                           
   895                           ;main.c: 309: } else highPWM = 0;
   896  003882  D004               	goto	l1506
   897  003884                     l1504:
   898  003884  0E00               	movlw	0
   899  003886  6E30               	movwf	main@highPWM+1,c
   900  003888  0E00               	movlw	0
   901  00388A  6E2F               	movwf	main@highPWM,c
   902  00388C                     l1506:
   903                           
   904                           ;main.c: 311: if (sequenceNumber == 1)
   905  00388C  043E               	decf	main@sequenceNumber,w,c
   906  00388E  A4D8               	btfss	status,2,c
   907  003890  D01E               	goto	l1520
   908                           
   909                           ;main.c: 312: {
   910                           ;main.c: 313: if (currentStep != stepNumber)
   911  003892  5040               	movf	main@stepNumber+1,w,c
   912  003894  183B               	xorwf	main@currentStep+1,w,c
   913  003896  E102               	bnz	u815
   914  003898  503F               	movf	main@stepNumber,w,c
   915  00389A  183A               	xorwf	main@currentStep,w,c
   916  00389C                     u815:
   917  00389C  B4D8               	btfsc	status,2,c
   918  00389E  D013               	goto	l1518
   919                           
   920                           ;main.c: 314: {
   921                           ;main.c: 315: currentStep = stepNumber;
   922  0038A0  C03F  F03A         	movff	main@stepNumber,main@currentStep
   923  0038A4  C040  F03B         	movff	main@stepNumber+1,main@currentStep+1
   924                           
   925                           ;main.c: 317: if (currentStep < 16) brightness += 2; else brightness -= 2;
   926  0038A8  503B               	movf	main@currentStep+1,w,c
   927  0038AA  0A80               	xorlw	128
   928  0038AC  6EF3               	movwf	prodl,c
   929  0038AE  0E80               	movlw	128
   930  0038B0  5CF3               	subwf	prodl,w,c
   931  0038B2  0E10               	movlw	16
   932  0038B4  B4D8               	btfsc	status,2,c
   933  0038B6  5C3A               	subwf	main@currentStep,w,c
   934  0038B8  B0D8               	btfsc	status,0,c
   935  0038BA  D003               	goto	l1516
   936  0038BC  0E02               	movlw	2
   937  0038BE  2639               	addwf	main@brightness,f,c
   938  0038C0  D002               	goto	l1518
   939  0038C2                     l1516:
   940  0038C2  0E02               	movlw	2
   941  0038C4  5E39               	subwf	main@brightness,f,c
   942  0038C6                     l1518:
   943                           
   944                           ;main.c: 318: }
   945                           ;main.c: 319: midPWM = brightness;
   946  0038C6  C039  F036         	movff	main@brightness,main@midPWM
   947  0038CA  6A37               	clrf	main@midPWM+1,c
   948                           
   949                           ;main.c: 320: } else if (sequenceNumber != 3) midPWM = 0;
   950  0038CC  D008               	goto	l1524
   951  0038CE                     l1520:
   952  0038CE  503E               	movf	main@sequenceNumber,w,c
   953  0038D0  0A03               	xorlw	3
   954  0038D2  B4D8               	btfsc	status,2,c
   955  0038D4  D004               	goto	l1524
   956  0038D6  0E00               	movlw	0
   957  0038D8  6E37               	movwf	main@midPWM+1,c
   958  0038DA  0E00               	movlw	0
   959  0038DC  6E36               	movwf	main@midPWM,c
   960  0038DE                     l1524:
   961                           
   962                           ;main.c: 322: if (sequenceNumber == 2)
   963  0038DE  503E               	movf	main@sequenceNumber,w,c
   964  0038E0  0A02               	xorlw	2
   965  0038E2  A4D8               	btfss	status,2,c
   966  0038E4  D01E               	goto	l1538
   967                           
   968                           ;main.c: 323: {
   969                           ;main.c: 324: if (currentStep != stepNumber)
   970  0038E6  5040               	movf	main@stepNumber+1,w,c
   971  0038E8  183B               	xorwf	main@currentStep+1,w,c
   972  0038EA  E102               	bnz	u855
   973  0038EC  503F               	movf	main@stepNumber,w,c
   974  0038EE  183A               	xorwf	main@currentStep,w,c
   975  0038F0                     u855:
   976  0038F0  B4D8               	btfsc	status,2,c
   977  0038F2  D013               	goto	l1536
   978                           
   979                           ;main.c: 325: {
   980                           ;main.c: 326: currentStep = stepNumber;
   981  0038F4  C03F  F03A         	movff	main@stepNumber,main@currentStep
   982  0038F8  C040  F03B         	movff	main@stepNumber+1,main@currentStep+1
   983                           
   984                           ;main.c: 327: if (currentStep < 16) brightness += 2; else brightness -= 2;
   985  0038FC  503B               	movf	main@currentStep+1,w,c
   986  0038FE  0A80               	xorlw	128
   987  003900  6EF3               	movwf	prodl,c
   988  003902  0E80               	movlw	128
   989  003904  5CF3               	subwf	prodl,w,c
   990  003906  0E10               	movlw	16
   991  003908  B4D8               	btfsc	status,2,c
   992  00390A  5C3A               	subwf	main@currentStep,w,c
   993  00390C  B0D8               	btfsc	status,0,c
   994  00390E  D003               	goto	l1534
   995  003910  0E02               	movlw	2
   996  003912  2639               	addwf	main@brightness,f,c
   997  003914  D002               	goto	l1536
   998  003916                     l1534:
   999  003916  0E02               	movlw	2
  1000  003918  5E39               	subwf	main@brightness,f,c
  1001  00391A                     l1536:
  1002                           
  1003                           ;main.c: 328: }
  1004                           ;main.c: 329: lowPWM = brightness;
  1005  00391A  C039  F02D         	movff	main@brightness,main@lowPWM
  1006  00391E  6A2E               	clrf	main@lowPWM+1,c
  1007                           
  1008                           ;main.c: 330: } else lowPWM = 0;
  1009  003920  D004               	goto	l1540
  1010  003922                     l1538:
  1011  003922  0E00               	movlw	0
  1012  003924  6E2E               	movwf	main@lowPWM+1,c
  1013  003926  0E00               	movlw	0
  1014  003928  6E2D               	movwf	main@lowPWM,c
  1015  00392A                     l1540:
  1016                           
  1017                           ;main.c: 332: if (sequenceNumber == 3)
  1018  00392A  503E               	movf	main@sequenceNumber,w,c
  1019  00392C  0A03               	xorlw	3
  1020  00392E  A4D8               	btfss	status,2,c
  1021  003930  D01E               	goto	l1554
  1022                           
  1023                           ;main.c: 333: {
  1024                           ;main.c: 334: if (currentStep != stepNumber)
  1025  003932  5040               	movf	main@stepNumber+1,w,c
  1026  003934  183B               	xorwf	main@currentStep+1,w,c
  1027  003936  E102               	bnz	u885
  1028  003938  503F               	movf	main@stepNumber,w,c
  1029  00393A  183A               	xorwf	main@currentStep,w,c
  1030  00393C                     u885:
  1031  00393C  B4D8               	btfsc	status,2,c
  1032  00393E  D013               	goto	l1552
  1033                           
  1034                           ;main.c: 335: {
  1035                           ;main.c: 336: currentStep = stepNumber;
  1036  003940  C03F  F03A         	movff	main@stepNumber,main@currentStep
  1037  003944  C040  F03B         	movff	main@stepNumber+1,main@currentStep+1
  1038                           
  1039                           ;main.c: 338: if (currentStep < 16) brightness += 2; else brightness -= 2;
  1040  003948  503B               	movf	main@currentStep+1,w,c
  1041  00394A  0A80               	xorlw	128
  1042  00394C  6EF3               	movwf	prodl,c
  1043  00394E  0E80               	movlw	128
  1044  003950  5CF3               	subwf	prodl,w,c
  1045  003952  0E10               	movlw	16
  1046  003954  B4D8               	btfsc	status,2,c
  1047  003956  5C3A               	subwf	main@currentStep,w,c
  1048  003958  B0D8               	btfsc	status,0,c
  1049  00395A  D003               	goto	l1550
  1050  00395C  0E02               	movlw	2
  1051  00395E  2639               	addwf	main@brightness,f,c
  1052  003960  D002               	goto	l1552
  1053  003962                     l1550:
  1054  003962  0E02               	movlw	2
  1055  003964  5E39               	subwf	main@brightness,f,c
  1056  003966                     l1552:
  1057                           
  1058                           ;main.c: 339: }
  1059                           ;main.c: 340: midPWM = brightness;
  1060  003966  C039  F036         	movff	main@brightness,main@midPWM
  1061  00396A  6A37               	clrf	main@midPWM+1,c
  1062                           
  1063                           ;main.c: 341: } else if (sequenceNumber != 1) midPWM = 0;
  1064  00396C  D007               	goto	l1558
  1065  00396E                     l1554:
  1066  00396E  043E               	decf	main@sequenceNumber,w,c
  1067  003970  B4D8               	btfsc	status,2,c
  1068  003972  D004               	goto	l1558
  1069  003974  0E00               	movlw	0
  1070  003976  6E37               	movwf	main@midPWM+1,c
  1071  003978  0E00               	movlw	0
  1072  00397A  6E36               	movwf	main@midPWM,c
  1073  00397C                     l1558:
  1074                           
  1075                           ;main.c: 343: if (tickCounter > 6)
  1076  00397C  5034               	movf	main@tickCounter+1,w,c
  1077  00397E  0A80               	xorlw	128
  1078  003980  0F80               	addlw	-128
  1079  003982  0E07               	movlw	7
  1080  003984  B4D8               	btfsc	status,2,c
  1081  003986  5C33               	subwf	main@tickCounter,w,c
  1082  003988  A0D8               	btfss	status,0,c
  1083  00398A  D02B               	goto	l1582
  1084                           
  1085                           ;main.c: 344: {
  1086                           ;main.c: 345: stepNumber++;
  1087  00398C  4A3F               	infsnz	main@stepNumber,f,c
  1088  00398E  2A40               	incf	main@stepNumber+1,f,c
  1089                           
  1090                           ;main.c: 346: tickCounter = 0;
  1091  003990  0E00               	movlw	0
  1092  003992  6E34               	movwf	main@tickCounter+1,c
  1093  003994  0E00               	movlw	0
  1094  003996  6E33               	movwf	main@tickCounter,c
  1095                           
  1096                           ;main.c: 348: if (stepNumber == 31)
  1097  003998  503F               	movf	main@stepNumber,w,c
  1098  00399A  0A1F               	xorlw	31
  1099  00399C  1040               	iorwf	main@stepNumber+1,w,c
  1100  00399E  A4D8               	btfss	status,2,c
  1101  0039A0  D020               	goto	l1582
  1102                           
  1103                           ;main.c: 349: {
  1104                           ;main.c: 350: stepNumber = 0;
  1105  0039A2  0E00               	movlw	0
  1106  0039A4  6E40               	movwf	main@stepNumber+1,c
  1107  0039A6  0E00               	movlw	0
  1108  0039A8  6E3F               	movwf	main@stepNumber,c
  1109                           
  1110                           ;main.c: 351: sequenceNumber++;
  1111  0039AA  2A3E               	incf	main@sequenceNumber,f,c
  1112                           
  1113                           ;main.c: 352: brightness = 0;
  1114  0039AC  6E10               	movwf	??_main& (0+255),c
  1115  0039AE  0E00               	movlw	0
  1116  0039B0  6E39               	movwf	main@brightness,c
  1117  0039B2  5010               	movf	??_main& (0+255),w,c
  1118                           
  1119                           ;main.c: 354: if (sequenceNumber == 4)
  1120  0039B4  503E               	movf	main@sequenceNumber,w,c
  1121  0039B6  0A04               	xorlw	4
  1122  0039B8  A4D8               	btfss	status,2,c
  1123  0039BA  D013               	goto	l1582
  1124                           
  1125                           ;main.c: 355: {
  1126                           ;main.c: 356: sequenceNumber = 0;
  1127  0039BC  6E10               	movwf	??_main& (0+255),c
  1128  0039BE  0E00               	movlw	0
  1129  0039C0  6E3E               	movwf	main@sequenceNumber,c
  1130  0039C2  5010               	movf	??_main& (0+255),w,c
  1131                           
  1132                           ;main.c: 357: sequenceRepeats++;
  1133  0039C4  4A31               	infsnz	main@sequenceRepeats,f,c
  1134  0039C6  2A32               	incf	main@sequenceRepeats+1,f,c
  1135                           
  1136                           ;main.c: 358: if (sequenceRepeats > 10)
  1137  0039C8  5032               	movf	main@sequenceRepeats+1,w,c
  1138  0039CA  0A80               	xorlw	128
  1139  0039CC  0F80               	addlw	-128
  1140  0039CE  0E0B               	movlw	11
  1141  0039D0  B4D8               	btfsc	status,2,c
  1142  0039D2  5C31               	subwf	main@sequenceRepeats,w,c
  1143  0039D4  A0D8               	btfss	status,0,c
  1144  0039D6  D005               	goto	l1582
  1145                           
  1146                           ;main.c: 359: {
  1147                           ;main.c: 360: sequenceRepeats = 0;
  1148  0039D8  0E00               	movlw	0
  1149  0039DA  6E32               	movwf	main@sequenceRepeats+1,c
  1150  0039DC  0E00               	movlw	0
  1151  0039DE  6E31               	movwf	main@sequenceRepeats,c
  1152                           
  1153                           ;main.c: 361: patternNumber++;
  1154  0039E0  2A38               	incf	main@patternNumber,f,c
  1155  0039E2                     l1582:
  1156                           
  1157                           ;main.c: 362: }
  1158                           ;main.c: 363: }
  1159                           ;main.c: 364: }
  1160                           ;main.c: 365: }
  1161                           ;main.c: 366: }
  1162                           ;main.c: 369: if (patternNumber == 1)
  1163  0039E2  0438               	decf	main@patternNumber,w,c
  1164  0039E4  A4D8               	btfss	status,2,c
  1165  0039E6  D03F               	goto	l1610
  1166                           
  1167                           ;main.c: 370: {
  1168                           ;main.c: 371: highPWM = 31;
  1169  0039E8  0E00               	movlw	0
  1170  0039EA  6E30               	movwf	main@highPWM+1,c
  1171  0039EC  0E1F               	movlw	31
  1172  0039EE  6E2F               	movwf	main@highPWM,c
  1173                           
  1174                           ;main.c: 372: midPWM = 31;
  1175  0039F0  0E00               	movlw	0
  1176  0039F2  6E37               	movwf	main@midPWM+1,c
  1177  0039F4  0E1F               	movlw	31
  1178  0039F6  6E36               	movwf	main@midPWM,c
  1179                           
  1180                           ;main.c: 373: lowPWM = 31;
  1181  0039F8  0E00               	movlw	0
  1182  0039FA  6E2E               	movwf	main@lowPWM+1,c
  1183  0039FC  0E1F               	movlw	31
  1184  0039FE  6E2D               	movwf	main@lowPWM,c
  1185                           
  1186                           ;main.c: 375: if (tickCounter > 8)
  1187  003A00  5034               	movf	main@tickCounter+1,w,c
  1188  003A02  0A80               	xorlw	128
  1189  003A04  0F80               	addlw	-128
  1190  003A06  0E09               	movlw	9
  1191  003A08  B4D8               	btfsc	status,2,c
  1192  003A0A  5C33               	subwf	main@tickCounter,w,c
  1193  003A0C  A0D8               	btfss	status,0,c
  1194  003A0E  D02B               	goto	l1610
  1195                           
  1196                           ;main.c: 376: {
  1197                           ;main.c: 377: stepNumber++;
  1198  003A10  4A3F               	infsnz	main@stepNumber,f,c
  1199  003A12  2A40               	incf	main@stepNumber+1,f,c
  1200                           
  1201                           ;main.c: 378: tickCounter = 0;
  1202  003A14  0E00               	movlw	0
  1203  003A16  6E34               	movwf	main@tickCounter+1,c
  1204  003A18  0E00               	movlw	0
  1205  003A1A  6E33               	movwf	main@tickCounter,c
  1206                           
  1207                           ;main.c: 380: if (stepNumber == 3)
  1208  003A1C  503F               	movf	main@stepNumber,w,c
  1209  003A1E  0A03               	xorlw	3
  1210  003A20  1040               	iorwf	main@stepNumber+1,w,c
  1211  003A22  A4D8               	btfss	status,2,c
  1212  003A24  D020               	goto	l1610
  1213                           
  1214                           ;main.c: 381: {
  1215                           ;main.c: 382: stepNumber = 0;
  1216  003A26  0E00               	movlw	0
  1217  003A28  6E40               	movwf	main@stepNumber+1,c
  1218  003A2A  0E00               	movlw	0
  1219  003A2C  6E3F               	movwf	main@stepNumber,c
  1220                           
  1221                           ;main.c: 383: sequenceNumber++;
  1222  003A2E  2A3E               	incf	main@sequenceNumber,f,c
  1223                           
  1224                           ;main.c: 384: brightness = 0;
  1225  003A30  6E10               	movwf	??_main& (0+255),c
  1226  003A32  0E00               	movlw	0
  1227  003A34  6E39               	movwf	main@brightness,c
  1228  003A36  5010               	movf	??_main& (0+255),w,c
  1229                           
  1230                           ;main.c: 386: if (sequenceNumber == 5)
  1231  003A38  503E               	movf	main@sequenceNumber,w,c
  1232  003A3A  0A05               	xorlw	5
  1233  003A3C  A4D8               	btfss	status,2,c
  1234  003A3E  D013               	goto	l1610
  1235                           
  1236                           ;main.c: 387: {
  1237                           ;main.c: 388: sequenceNumber = 0;
  1238  003A40  6E10               	movwf	??_main& (0+255),c
  1239  003A42  0E00               	movlw	0
  1240  003A44  6E3E               	movwf	main@sequenceNumber,c
  1241  003A46  5010               	movf	??_main& (0+255),w,c
  1242                           
  1243                           ;main.c: 389: sequenceRepeats++;
  1244  003A48  4A31               	infsnz	main@sequenceRepeats,f,c
  1245  003A4A  2A32               	incf	main@sequenceRepeats+1,f,c
  1246                           
  1247                           ;main.c: 390: if (sequenceRepeats > 40)
  1248  003A4C  5032               	movf	main@sequenceRepeats+1,w,c
  1249  003A4E  0A80               	xorlw	128
  1250  003A50  0F80               	addlw	-128
  1251  003A52  0E29               	movlw	41
  1252  003A54  B4D8               	btfsc	status,2,c
  1253  003A56  5C31               	subwf	main@sequenceRepeats,w,c
  1254  003A58  A0D8               	btfss	status,0,c
  1255  003A5A  D005               	goto	l1610
  1256                           
  1257                           ;main.c: 391: {
  1258                           ;main.c: 392: sequenceRepeats = 0;
  1259  003A5C  0E00               	movlw	0
  1260  003A5E  6E32               	movwf	main@sequenceRepeats+1,c
  1261  003A60  0E00               	movlw	0
  1262  003A62  6E31               	movwf	main@sequenceRepeats,c
  1263                           
  1264                           ;main.c: 393: patternNumber++;
  1265  003A64  2A38               	incf	main@patternNumber,f,c
  1266  003A66                     l1610:
  1267                           
  1268                           ;main.c: 394: }
  1269                           ;main.c: 395: }
  1270                           ;main.c: 396: }
  1271                           ;main.c: 397: }
  1272                           ;main.c: 398: }
  1273                           ;main.c: 401: if (patternNumber == 2)
  1274  003A66  5038               	movf	main@patternNumber,w,c
  1275  003A68  0A02               	xorlw	2
  1276  003A6A  A4D8               	btfss	status,2,c
  1277  003A6C  D100               	goto	l1736
  1278                           
  1279                           ;main.c: 402: {
  1280                           ;main.c: 403: if (sequenceNumber == 0)
  1281  003A6E  663E               	tstfsz	main@sequenceNumber,c
  1282  003A70  D025               	goto	l1632
  1283                           
  1284                           ;main.c: 404: {
  1285                           ;main.c: 405: if (stepNumber == 0) highPWM = 31; else highPWM = 0;
  1286  003A72  5040               	movf	main@stepNumber+1,w,c
  1287  003A74  103F               	iorwf	main@stepNumber,w,c
  1288  003A76  A4D8               	btfss	status,2,c
  1289  003A78  D004               	goto	l1618
  1290  003A7A  0E00               	movlw	0
  1291  003A7C  6E30               	movwf	main@highPWM+1,c
  1292  003A7E  0E1F               	movlw	31
  1293  003A80  D003               	goto	L3
  1294  003A82                     l1618:
  1295  003A82  0E00               	movlw	0
  1296  003A84  6E30               	movwf	main@highPWM+1,c
  1297  003A86  0E00               	movlw	0
  1298  003A88                     L3:
  1299  003A88  6E2F               	movwf	main@highPWM,c
  1300                           
  1301                           ;main.c: 406: if (stepNumber == 1) midPWM = 31; else midPWM = 0;
  1302  003A8A  043F               	decf	main@stepNumber,w,c
  1303  003A8C  1040               	iorwf	main@stepNumber+1,w,c
  1304  003A8E  A4D8               	btfss	status,2,c
  1305  003A90  D004               	goto	l1624
  1306  003A92  0E00               	movlw	0
  1307  003A94  6E37               	movwf	main@midPWM+1,c
  1308  003A96  0E1F               	movlw	31
  1309  003A98  D003               	goto	L4
  1310  003A9A                     l1624:
  1311  003A9A  0E00               	movlw	0
  1312  003A9C  6E37               	movwf	main@midPWM+1,c
  1313  003A9E  0E00               	movlw	0
  1314  003AA0                     L4:
  1315  003AA0  6E36               	movwf	main@midPWM,c
  1316                           
  1317                           ;main.c: 407: if (stepNumber == 2) lowPWM = 31; else lowPWM = 0;
  1318  003AA2  503F               	movf	main@stepNumber,w,c
  1319  003AA4  0A02               	xorlw	2
  1320  003AA6  1040               	iorwf	main@stepNumber+1,w,c
  1321  003AA8  A4D8               	btfss	status,2,c
  1322  003AAA  D004               	goto	l1630
  1323  003AAC  0E00               	movlw	0
  1324  003AAE  6E2E               	movwf	main@lowPWM+1,c
  1325  003AB0  0E1F               	movlw	31
  1326  003AB2  D003               	goto	L5
  1327  003AB4                     l1630:
  1328  003AB4  0E00               	movlw	0
  1329  003AB6  6E2E               	movwf	main@lowPWM+1,c
  1330  003AB8  0E00               	movlw	0
  1331  003ABA                     L5:
  1332  003ABA  6E2D               	movwf	main@lowPWM,c
  1333  003ABC                     l1632:
  1334                           
  1335                           ;main.c: 408: }
  1336                           ;main.c: 410: if (sequenceNumber == 1)
  1337  003ABC  043E               	decf	main@sequenceNumber,w,c
  1338  003ABE  A4D8               	btfss	status,2,c
  1339  003AC0  D025               	goto	l1652
  1340                           
  1341                           ;main.c: 411: {
  1342                           ;main.c: 412: if (stepNumber == 0) highPWM = 31; else highPWM = 0;
  1343  003AC2  5040               	movf	main@stepNumber+1,w,c
  1344  003AC4  103F               	iorwf	main@stepNumber,w,c
  1345  003AC6  A4D8               	btfss	status,2,c
  1346  003AC8  D004               	goto	l1638
  1347  003ACA  0E00               	movlw	0
  1348  003ACC  6E30               	movwf	main@highPWM+1,c
  1349  003ACE  0E1F               	movlw	31
  1350  003AD0  D003               	goto	L6
  1351  003AD2                     l1638:
  1352  003AD2  0E00               	movlw	0
  1353  003AD4  6E30               	movwf	main@highPWM+1,c
  1354  003AD6  0E00               	movlw	0
  1355  003AD8                     L6:
  1356  003AD8  6E2F               	movwf	main@highPWM,c
  1357                           
  1358                           ;main.c: 413: if (stepNumber == 1) lowPWM = 31; else lowPWM = 0;
  1359  003ADA  043F               	decf	main@stepNumber,w,c
  1360  003ADC  1040               	iorwf	main@stepNumber+1,w,c
  1361  003ADE  A4D8               	btfss	status,2,c
  1362  003AE0  D004               	goto	l1644
  1363  003AE2  0E00               	movlw	0
  1364  003AE4  6E2E               	movwf	main@lowPWM+1,c
  1365  003AE6  0E1F               	movlw	31
  1366  003AE8  D003               	goto	L7
  1367  003AEA                     l1644:
  1368  003AEA  0E00               	movlw	0
  1369  003AEC  6E2E               	movwf	main@lowPWM+1,c
  1370  003AEE  0E00               	movlw	0
  1371  003AF0                     L7:
  1372  003AF0  6E2D               	movwf	main@lowPWM,c
  1373                           
  1374                           ;main.c: 414: if (stepNumber == 2) midPWM = 31; else midPWM = 0;
  1375  003AF2  503F               	movf	main@stepNumber,w,c
  1376  003AF4  0A02               	xorlw	2
  1377  003AF6  1040               	iorwf	main@stepNumber+1,w,c
  1378  003AF8  A4D8               	btfss	status,2,c
  1379  003AFA  D004               	goto	l1650
  1380  003AFC  0E00               	movlw	0
  1381  003AFE  6E37               	movwf	main@midPWM+1,c
  1382  003B00  0E1F               	movlw	31
  1383  003B02  D003               	goto	L8
  1384  003B04                     l1650:
  1385  003B04  0E00               	movlw	0
  1386  003B06  6E37               	movwf	main@midPWM+1,c
  1387  003B08  0E00               	movlw	0
  1388  003B0A                     L8:
  1389  003B0A  6E36               	movwf	main@midPWM,c
  1390  003B0C                     l1652:
  1391                           
  1392                           ;main.c: 415: }
  1393                           ;main.c: 417: if (sequenceNumber == 2)
  1394  003B0C  503E               	movf	main@sequenceNumber,w,c
  1395  003B0E  0A02               	xorlw	2
  1396  003B10  A4D8               	btfss	status,2,c
  1397  003B12  D025               	goto	l1672
  1398                           
  1399                           ;main.c: 418: {
  1400                           ;main.c: 419: if (stepNumber == 0) lowPWM = 31; else lowPWM = 0;
  1401  003B14  5040               	movf	main@stepNumber+1,w,c
  1402  003B16  103F               	iorwf	main@stepNumber,w,c
  1403  003B18  A4D8               	btfss	status,2,c
  1404  003B1A  D004               	goto	l1658
  1405  003B1C  0E00               	movlw	0
  1406  003B1E  6E2E               	movwf	main@lowPWM+1,c
  1407  003B20  0E1F               	movlw	31
  1408  003B22  D003               	goto	L9
  1409  003B24                     l1658:
  1410  003B24  0E00               	movlw	0
  1411  003B26  6E2E               	movwf	main@lowPWM+1,c
  1412  003B28  0E00               	movlw	0
  1413  003B2A                     L9:
  1414  003B2A  6E2D               	movwf	main@lowPWM,c
  1415                           
  1416                           ;main.c: 420: if (stepNumber == 1) highPWM = 31; else highPWM = 0;
  1417  003B2C  043F               	decf	main@stepNumber,w,c
  1418  003B2E  1040               	iorwf	main@stepNumber+1,w,c
  1419  003B30  A4D8               	btfss	status,2,c
  1420  003B32  D004               	goto	l1664
  1421  003B34  0E00               	movlw	0
  1422  003B36  6E30               	movwf	main@highPWM+1,c
  1423  003B38  0E1F               	movlw	31
  1424  003B3A  D003               	goto	L10
  1425  003B3C                     l1664:
  1426  003B3C  0E00               	movlw	0
  1427  003B3E  6E30               	movwf	main@highPWM+1,c
  1428  003B40  0E00               	movlw	0
  1429  003B42                     L10:
  1430  003B42  6E2F               	movwf	main@highPWM,c
  1431                           
  1432                           ;main.c: 421: if (stepNumber == 2) midPWM = 31; else midPWM = 0;
  1433  003B44  503F               	movf	main@stepNumber,w,c
  1434  003B46  0A02               	xorlw	2
  1435  003B48  1040               	iorwf	main@stepNumber+1,w,c
  1436  003B4A  A4D8               	btfss	status,2,c
  1437  003B4C  D004               	goto	l1670
  1438  003B4E  0E00               	movlw	0
  1439  003B50  6E37               	movwf	main@midPWM+1,c
  1440  003B52  0E1F               	movlw	31
  1441  003B54  D003               	goto	L11
  1442  003B56                     l1670:
  1443  003B56  0E00               	movlw	0
  1444  003B58  6E37               	movwf	main@midPWM+1,c
  1445  003B5A  0E00               	movlw	0
  1446  003B5C                     L11:
  1447  003B5C  6E36               	movwf	main@midPWM,c
  1448  003B5E                     l1672:
  1449                           
  1450                           ;main.c: 422: }
  1451                           ;main.c: 424: if (sequenceNumber == 3)
  1452  003B5E  503E               	movf	main@sequenceNumber,w,c
  1453  003B60  0A03               	xorlw	3
  1454  003B62  A4D8               	btfss	status,2,c
  1455  003B64  D028               	goto	l1692
  1456                           
  1457                           ;main.c: 425: {
  1458                           ;main.c: 426: if (stepNumber == 0) lowPWM = 31; else highPWM = 0;
  1459  003B66  5040               	movf	main@stepNumber+1,w,c
  1460  003B68  103F               	iorwf	main@stepNumber,w,c
  1461  003B6A  A4D8               	btfss	status,2,c
  1462  003B6C  D005               	goto	l1678
  1463  003B6E  0E00               	movlw	0
  1464  003B70  6E2E               	movwf	main@lowPWM+1,c
  1465  003B72  0E1F               	movlw	31
  1466  003B74  6E2D               	movwf	main@lowPWM,c
  1467  003B76  D004               	goto	l1680
  1468  003B78                     l1678:
  1469  003B78  0E00               	movlw	0
  1470  003B7A  6E30               	movwf	main@highPWM+1,c
  1471  003B7C  0E00               	movlw	0
  1472  003B7E  6E2F               	movwf	main@highPWM,c
  1473  003B80                     l1680:
  1474                           
  1475                           ;main.c: 427: if (stepNumber == 1) midPWM = 31; else lowPWM = 0;
  1476  003B80  043F               	decf	main@stepNumber,w,c
  1477  003B82  1040               	iorwf	main@stepNumber+1,w,c
  1478  003B84  A4D8               	btfss	status,2,c
  1479  003B86  D005               	goto	l1684
  1480  003B88  0E00               	movlw	0
  1481  003B8A  6E37               	movwf	main@midPWM+1,c
  1482  003B8C  0E1F               	movlw	31
  1483  003B8E  6E36               	movwf	main@midPWM,c
  1484  003B90  D004               	goto	l1686
  1485  003B92                     l1684:
  1486  003B92  0E00               	movlw	0
  1487  003B94  6E2E               	movwf	main@lowPWM+1,c
  1488  003B96  0E00               	movlw	0
  1489  003B98  6E2D               	movwf	main@lowPWM,c
  1490  003B9A                     l1686:
  1491                           
  1492                           ;main.c: 428: if (stepNumber == 2) highPWM = 31; else midPWM = 0;
  1493  003B9A  503F               	movf	main@stepNumber,w,c
  1494  003B9C  0A02               	xorlw	2
  1495  003B9E  1040               	iorwf	main@stepNumber+1,w,c
  1496  003BA0  A4D8               	btfss	status,2,c
  1497  003BA2  D005               	goto	l1690
  1498  003BA4  0E00               	movlw	0
  1499  003BA6  6E30               	movwf	main@highPWM+1,c
  1500  003BA8  0E1F               	movlw	31
  1501  003BAA  6E2F               	movwf	main@highPWM,c
  1502  003BAC  D004               	goto	l1692
  1503  003BAE                     l1690:
  1504  003BAE  0E00               	movlw	0
  1505  003BB0  6E37               	movwf	main@midPWM+1,c
  1506  003BB2  0E00               	movlw	0
  1507  003BB4  6E36               	movwf	main@midPWM,c
  1508  003BB6                     l1692:
  1509                           
  1510                           ;main.c: 429: }
  1511                           ;main.c: 431: if (sequenceNumber == 4)
  1512  003BB6  503E               	movf	main@sequenceNumber,w,c
  1513  003BB8  0A04               	xorlw	4
  1514  003BBA  A4D8               	btfss	status,2,c
  1515  003BBC  D025               	goto	l1712
  1516                           
  1517                           ;main.c: 432: {
  1518                           ;main.c: 433: if (stepNumber == 0) midPWM = 31; else midPWM = 0;
  1519  003BBE  5040               	movf	main@stepNumber+1,w,c
  1520  003BC0  103F               	iorwf	main@stepNumber,w,c
  1521  003BC2  A4D8               	btfss	status,2,c
  1522  003BC4  D004               	goto	l1698
  1523  003BC6  0E00               	movlw	0
  1524  003BC8  6E37               	movwf	main@midPWM+1,c
  1525  003BCA  0E1F               	movlw	31
  1526  003BCC  D003               	goto	L12
  1527  003BCE                     l1698:
  1528  003BCE  0E00               	movlw	0
  1529  003BD0  6E37               	movwf	main@midPWM+1,c
  1530  003BD2  0E00               	movlw	0
  1531  003BD4                     L12:
  1532  003BD4  6E36               	movwf	main@midPWM,c
  1533                           
  1534                           ;main.c: 434: if (stepNumber == 1) highPWM = 31; else highPWM = 0;
  1535  003BD6  043F               	decf	main@stepNumber,w,c
  1536  003BD8  1040               	iorwf	main@stepNumber+1,w,c
  1537  003BDA  A4D8               	btfss	status,2,c
  1538  003BDC  D004               	goto	l1704
  1539  003BDE  0E00               	movlw	0
  1540  003BE0  6E30               	movwf	main@highPWM+1,c
  1541  003BE2  0E1F               	movlw	31
  1542  003BE4  D003               	goto	L13
  1543  003BE6                     l1704:
  1544  003BE6  0E00               	movlw	0
  1545  003BE8  6E30               	movwf	main@highPWM+1,c
  1546  003BEA  0E00               	movlw	0
  1547  003BEC                     L13:
  1548  003BEC  6E2F               	movwf	main@highPWM,c
  1549                           
  1550                           ;main.c: 435: if (stepNumber == 2) lowPWM = 31; else lowPWM = 0;
  1551  003BEE  503F               	movf	main@stepNumber,w,c
  1552  003BF0  0A02               	xorlw	2
  1553  003BF2  1040               	iorwf	main@stepNumber+1,w,c
  1554  003BF4  A4D8               	btfss	status,2,c
  1555  003BF6  D004               	goto	l1710
  1556  003BF8  0E00               	movlw	0
  1557  003BFA  6E2E               	movwf	main@lowPWM+1,c
  1558  003BFC  0E1F               	movlw	31
  1559  003BFE  D003               	goto	L14
  1560  003C00                     l1710:
  1561  003C00  0E00               	movlw	0
  1562  003C02  6E2E               	movwf	main@lowPWM+1,c
  1563  003C04  0E00               	movlw	0
  1564  003C06                     L14:
  1565  003C06  6E2D               	movwf	main@lowPWM,c
  1566  003C08                     l1712:
  1567                           
  1568                           ;main.c: 436: }
  1569                           ;main.c: 438: if (tickCounter > 8)
  1570  003C08  5034               	movf	main@tickCounter+1,w,c
  1571  003C0A  0A80               	xorlw	128
  1572  003C0C  0F80               	addlw	-128
  1573  003C0E  0E09               	movlw	9
  1574  003C10  B4D8               	btfsc	status,2,c
  1575  003C12  5C33               	subwf	main@tickCounter,w,c
  1576  003C14  A0D8               	btfss	status,0,c
  1577  003C16  D02B               	goto	l1736
  1578                           
  1579                           ;main.c: 439: {
  1580                           ;main.c: 440: stepNumber++;
  1581  003C18  4A3F               	infsnz	main@stepNumber,f,c
  1582  003C1A  2A40               	incf	main@stepNumber+1,f,c
  1583                           
  1584                           ;main.c: 441: tickCounter = 0;
  1585  003C1C  0E00               	movlw	0
  1586  003C1E  6E34               	movwf	main@tickCounter+1,c
  1587  003C20  0E00               	movlw	0
  1588  003C22  6E33               	movwf	main@tickCounter,c
  1589                           
  1590                           ;main.c: 443: if (stepNumber == 3)
  1591  003C24  503F               	movf	main@stepNumber,w,c
  1592  003C26  0A03               	xorlw	3
  1593  003C28  1040               	iorwf	main@stepNumber+1,w,c
  1594  003C2A  A4D8               	btfss	status,2,c
  1595  003C2C  D020               	goto	l1736
  1596                           
  1597                           ;main.c: 444: {
  1598                           ;main.c: 445: stepNumber = 0;
  1599  003C2E  0E00               	movlw	0
  1600  003C30  6E40               	movwf	main@stepNumber+1,c
  1601  003C32  0E00               	movlw	0
  1602  003C34  6E3F               	movwf	main@stepNumber,c
  1603                           
  1604                           ;main.c: 446: sequenceNumber++;
  1605  003C36  2A3E               	incf	main@sequenceNumber,f,c
  1606                           
  1607                           ;main.c: 447: brightness = 0;
  1608  003C38  6E10               	movwf	??_main& (0+255),c
  1609  003C3A  0E00               	movlw	0
  1610  003C3C  6E39               	movwf	main@brightness,c
  1611  003C3E  5010               	movf	??_main& (0+255),w,c
  1612                           
  1613                           ;main.c: 449: if (sequenceNumber == 5)
  1614  003C40  503E               	movf	main@sequenceNumber,w,c
  1615  003C42  0A05               	xorlw	5
  1616  003C44  A4D8               	btfss	status,2,c
  1617  003C46  D013               	goto	l1736
  1618                           
  1619                           ;main.c: 450: {
  1620                           ;main.c: 451: sequenceNumber = 0;
  1621  003C48  6E10               	movwf	??_main& (0+255),c
  1622  003C4A  0E00               	movlw	0
  1623  003C4C  6E3E               	movwf	main@sequenceNumber,c
  1624  003C4E  5010               	movf	??_main& (0+255),w,c
  1625                           
  1626                           ;main.c: 452: sequenceRepeats++;
  1627  003C50  4A31               	infsnz	main@sequenceRepeats,f,c
  1628  003C52  2A32               	incf	main@sequenceRepeats+1,f,c
  1629                           
  1630                           ;main.c: 453: if (sequenceRepeats > 30)
  1631  003C54  5032               	movf	main@sequenceRepeats+1,w,c
  1632  003C56  0A80               	xorlw	128
  1633  003C58  0F80               	addlw	-128
  1634  003C5A  0E1F               	movlw	31
  1635  003C5C  B4D8               	btfsc	status,2,c
  1636  003C5E  5C31               	subwf	main@sequenceRepeats,w,c
  1637  003C60  A0D8               	btfss	status,0,c
  1638  003C62  D005               	goto	l1736
  1639                           
  1640                           ;main.c: 454: {
  1641                           ;main.c: 455: sequenceRepeats = 0;
  1642  003C64  0E00               	movlw	0
  1643  003C66  6E32               	movwf	main@sequenceRepeats+1,c
  1644  003C68  0E00               	movlw	0
  1645  003C6A  6E31               	movwf	main@sequenceRepeats,c
  1646                           
  1647                           ;main.c: 456: patternNumber++;
  1648  003C6C  2A38               	incf	main@patternNumber,f,c
  1649  003C6E                     l1736:
  1650                           
  1651                           ;main.c: 457: }
  1652                           ;main.c: 458: }
  1653                           ;main.c: 459: }
  1654                           ;main.c: 460: }
  1655                           ;main.c: 461: }
  1656                           ;main.c: 464: if (patternNumber == 3)
  1657  003C6E  5038               	movf	main@patternNumber,w,c
  1658  003C70  0A03               	xorlw	3
  1659  003C72  A4D8               	btfss	status,2,c
  1660  003C74  D057               	goto	l1778
  1661                           
  1662                           ;main.c: 465: {
  1663                           ;main.c: 466: if (sequenceNumber == 0)
  1664  003C76  663E               	tstfsz	main@sequenceNumber,c
  1665  003C78  D023               	goto	l154
  1666                           
  1667                           ;main.c: 467: {
  1668                           ;main.c: 468: if (currentStep != stepNumber)
  1669  003C7A  5040               	movf	main@stepNumber+1,w,c
  1670  003C7C  183B               	xorwf	main@currentStep+1,w,c
  1671  003C7E  E102               	bnz	u1275
  1672  003C80  503F               	movf	main@stepNumber,w,c
  1673  003C82  183A               	xorwf	main@currentStep,w,c
  1674  003C84                     u1275:
  1675  003C84  B4D8               	btfsc	status,2,c
  1676  003C86  D013               	goto	l1750
  1677                           
  1678                           ;main.c: 469: {
  1679                           ;main.c: 470: currentStep = stepNumber;
  1680  003C88  C03F  F03A         	movff	main@stepNumber,main@currentStep
  1681  003C8C  C040  F03B         	movff	main@stepNumber+1,main@currentStep+1
  1682                           
  1683                           ;main.c: 471: if (currentStep < 16) brightness += 2; else brightness -= 2;
  1684  003C90  503B               	movf	main@currentStep+1,w,c
  1685  003C92  0A80               	xorlw	128
  1686  003C94  6EF3               	movwf	prodl,c
  1687  003C96  0E80               	movlw	128
  1688  003C98  5CF3               	subwf	prodl,w,c
  1689  003C9A  0E10               	movlw	16
  1690  003C9C  B4D8               	btfsc	status,2,c
  1691  003C9E  5C3A               	subwf	main@currentStep,w,c
  1692  003CA0  B0D8               	btfsc	status,0,c
  1693  003CA2  D003               	goto	l1748
  1694  003CA4  0E02               	movlw	2
  1695  003CA6  2639               	addwf	main@brightness,f,c
  1696  003CA8  D002               	goto	l1750
  1697  003CAA                     l1748:
  1698  003CAA  0E02               	movlw	2
  1699  003CAC  5E39               	subwf	main@brightness,f,c
  1700  003CAE                     l1750:
  1701                           
  1702                           ;main.c: 472: }
  1703                           ;main.c: 473: highPWM = brightness;
  1704  003CAE  C039  F02F         	movff	main@brightness,main@highPWM
  1705  003CB2  6A30               	clrf	main@highPWM+1,c
  1706                           
  1707                           ;main.c: 474: midPWM = brightness;
  1708  003CB4  C039  F036         	movff	main@brightness,main@midPWM
  1709  003CB8  6A37               	clrf	main@midPWM+1,c
  1710                           
  1711                           ;main.c: 475: lowPWM = brightness;
  1712  003CBA  C039  F02D         	movff	main@brightness,main@lowPWM
  1713  003CBE  6A2E               	clrf	main@lowPWM+1,c
  1714  003CC0                     l154:
  1715                           
  1716                           ;main.c: 476: }
  1717                           ;main.c: 478: if (tickCounter > 3)
  1718  003CC0  5034               	movf	main@tickCounter+1,w,c
  1719  003CC2  0A80               	xorlw	128
  1720  003CC4  0F80               	addlw	-128
  1721  003CC6  0E04               	movlw	4
  1722  003CC8  B4D8               	btfsc	status,2,c
  1723  003CCA  5C33               	subwf	main@tickCounter,w,c
  1724  003CCC  A0D8               	btfss	status,0,c
  1725  003CCE  D02A               	goto	l1778
  1726                           
  1727                           ;main.c: 479: {
  1728                           ;main.c: 480: stepNumber++;
  1729  003CD0  4A3F               	infsnz	main@stepNumber,f,c
  1730  003CD2  2A40               	incf	main@stepNumber+1,f,c
  1731                           
  1732                           ;main.c: 481: tickCounter = 0;
  1733  003CD4  0E00               	movlw	0
  1734  003CD6  6E34               	movwf	main@tickCounter+1,c
  1735  003CD8  0E00               	movlw	0
  1736  003CDA  6E33               	movwf	main@tickCounter,c
  1737                           
  1738                           ;main.c: 483: if (stepNumber == 31)
  1739  003CDC  503F               	movf	main@stepNumber,w,c
  1740  003CDE  0A1F               	xorlw	31
  1741  003CE0  1040               	iorwf	main@stepNumber+1,w,c
  1742  003CE2  A4D8               	btfss	status,2,c
  1743  003CE4  D01F               	goto	l1778
  1744                           
  1745                           ;main.c: 484: {
  1746                           ;main.c: 485: stepNumber = 0;
  1747  003CE6  0E00               	movlw	0
  1748  003CE8  6E40               	movwf	main@stepNumber+1,c
  1749  003CEA  0E00               	movlw	0
  1750  003CEC  6E3F               	movwf	main@stepNumber,c
  1751                           
  1752                           ;main.c: 486: sequenceNumber++;
  1753  003CEE  2A3E               	incf	main@sequenceNumber,f,c
  1754                           
  1755                           ;main.c: 487: brightness = 0;
  1756  003CF0  6E10               	movwf	??_main& (0+255),c
  1757  003CF2  0E00               	movlw	0
  1758  003CF4  6E39               	movwf	main@brightness,c
  1759  003CF6  5010               	movf	??_main& (0+255),w,c
  1760                           
  1761                           ;main.c: 489: if (sequenceNumber == 1)
  1762  003CF8  043E               	decf	main@sequenceNumber,w,c
  1763  003CFA  A4D8               	btfss	status,2,c
  1764  003CFC  D013               	goto	l1778
  1765                           
  1766                           ;main.c: 490: {
  1767                           ;main.c: 491: sequenceNumber = 0;
  1768  003CFE  6E10               	movwf	??_main& (0+255),c
  1769  003D00  0E00               	movlw	0
  1770  003D02  6E3E               	movwf	main@sequenceNumber,c
  1771  003D04  5010               	movf	??_main& (0+255),w,c
  1772                           
  1773                           ;main.c: 492: sequenceRepeats++;
  1774  003D06  4A31               	infsnz	main@sequenceRepeats,f,c
  1775  003D08  2A32               	incf	main@sequenceRepeats+1,f,c
  1776                           
  1777                           ;main.c: 493: if (sequenceRepeats > 60)
  1778  003D0A  5032               	movf	main@sequenceRepeats+1,w,c
  1779  003D0C  0A80               	xorlw	128
  1780  003D0E  0F80               	addlw	-128
  1781  003D10  0E3D               	movlw	61
  1782  003D12  B4D8               	btfsc	status,2,c
  1783  003D14  5C31               	subwf	main@sequenceRepeats,w,c
  1784  003D16  A0D8               	btfss	status,0,c
  1785  003D18  D005               	goto	l1778
  1786                           
  1787                           ;main.c: 494: {
  1788                           ;main.c: 495: sequenceRepeats = 0;
  1789  003D1A  0E00               	movlw	0
  1790  003D1C  6E32               	movwf	main@sequenceRepeats+1,c
  1791  003D1E  0E00               	movlw	0
  1792  003D20  6E31               	movwf	main@sequenceRepeats,c
  1793                           
  1794                           ;main.c: 496: patternNumber++;
  1795  003D22  2A38               	incf	main@patternNumber,f,c
  1796  003D24                     l1778:
  1797                           
  1798                           ;main.c: 497: }
  1799                           ;main.c: 498: }
  1800                           ;main.c: 499: }
  1801                           ;main.c: 500: }
  1802                           ;main.c: 501: }
  1803                           ;main.c: 504: if (patternNumber == 4)
  1804  003D24  5038               	movf	main@patternNumber,w,c
  1805  003D26  0A04               	xorlw	4
  1806  003D28  A4D8               	btfss	status,2,c
  1807  003D2A  D06F               	goto	l1834
  1808                           
  1809                           ;main.c: 505: {
  1810                           ;main.c: 506: if (sequenceNumber == 0)
  1811  003D2C  663E               	tstfsz	main@sequenceNumber,c
  1812  003D2E  D03B               	goto	l1810
  1813                           
  1814                           ;main.c: 507: {
  1815                           ;main.c: 508: if (stepNumber == 0) highPWM = 31; else highPWM = 0;
  1816  003D30  5040               	movf	main@stepNumber+1,w,c
  1817  003D32  103F               	iorwf	main@stepNumber,w,c
  1818  003D34  A4D8               	btfss	status,2,c
  1819  003D36  D004               	goto	l1786
  1820  003D38  0E00               	movlw	0
  1821  003D3A  6E30               	movwf	main@highPWM+1,c
  1822  003D3C  0E1F               	movlw	31
  1823  003D3E  D003               	goto	L15
  1824  003D40                     l1786:
  1825  003D40  0E00               	movlw	0
  1826  003D42  6E30               	movwf	main@highPWM+1,c
  1827  003D44  0E00               	movlw	0
  1828  003D46                     L15:
  1829  003D46  6E2F               	movwf	main@highPWM,c
  1830                           
  1831                           ;main.c: 509: if (stepNumber == 1) midPWM = 31; else if (stepNumber != 3) midPWM = 0;
  1832  003D48  043F               	decf	main@stepNumber,w,c
  1833  003D4A  1040               	iorwf	main@stepNumber+1,w,c
  1834  003D4C  A4D8               	btfss	status,2,c
  1835  003D4E  D004               	goto	l1792
  1836  003D50  0E00               	movlw	0
  1837  003D52  6E37               	movwf	main@midPWM+1,c
  1838  003D54  0E1F               	movlw	31
  1839  003D56  D008               	goto	L16
  1840  003D58                     l1792:
  1841  003D58  503F               	movf	main@stepNumber,w,c
  1842  003D5A  0A03               	xorlw	3
  1843  003D5C  1040               	iorwf	main@stepNumber+1,w,c
  1844  003D5E  B4D8               	btfsc	status,2,c
  1845  003D60  D004               	goto	l1796
  1846  003D62  0E00               	movlw	0
  1847  003D64  6E37               	movwf	main@midPWM+1,c
  1848  003D66  0E00               	movlw	0
  1849  003D68                     L16:
  1850  003D68  6E36               	movwf	main@midPWM,c
  1851  003D6A                     l1796:
  1852                           
  1853                           ;main.c: 510: if (stepNumber == 2) lowPWM = 31; else lowPWM = 0;
  1854  003D6A  503F               	movf	main@stepNumber,w,c
  1855  003D6C  0A02               	xorlw	2
  1856  003D6E  1040               	iorwf	main@stepNumber+1,w,c
  1857  003D70  A4D8               	btfss	status,2,c
  1858  003D72  D004               	goto	l1800
  1859  003D74  0E00               	movlw	0
  1860  003D76  6E2E               	movwf	main@lowPWM+1,c
  1861  003D78  0E1F               	movlw	31
  1862  003D7A  D003               	goto	L17
  1863  003D7C                     l1800:
  1864  003D7C  0E00               	movlw	0
  1865  003D7E  6E2E               	movwf	main@lowPWM+1,c
  1866  003D80  0E00               	movlw	0
  1867  003D82                     L17:
  1868  003D82  6E2D               	movwf	main@lowPWM,c
  1869                           
  1870                           ;main.c: 511: if (stepNumber == 3) midPWM = 31; else if (stepNumber != 1) midPWM = 0;
  1871  003D84  503F               	movf	main@stepNumber,w,c
  1872  003D86  0A03               	xorlw	3
  1873  003D88  1040               	iorwf	main@stepNumber+1,w,c
  1874  003D8A  A4D8               	btfss	status,2,c
  1875  003D8C  D004               	goto	l1806
  1876  003D8E  0E00               	movlw	0
  1877  003D90  6E37               	movwf	main@midPWM+1,c
  1878  003D92  0E1F               	movlw	31
  1879  003D94  D007               	goto	L18
  1880  003D96                     l1806:
  1881  003D96  043F               	decf	main@stepNumber,w,c
  1882  003D98  1040               	iorwf	main@stepNumber+1,w,c
  1883  003D9A  B4D8               	btfsc	status,2,c
  1884  003D9C  D004               	goto	l1810
  1885  003D9E  0E00               	movlw	0
  1886  003DA0  6E37               	movwf	main@midPWM+1,c
  1887  003DA2  0E00               	movlw	0
  1888  003DA4                     L18:
  1889  003DA4  6E36               	movwf	main@midPWM,c
  1890  003DA6                     l1810:
  1891                           
  1892                           ;main.c: 512: }
  1893                           ;main.c: 514: if (tickCounter > 8)
  1894  003DA6  5034               	movf	main@tickCounter+1,w,c
  1895  003DA8  0A80               	xorlw	128
  1896  003DAA  0F80               	addlw	-128
  1897  003DAC  0E09               	movlw	9
  1898  003DAE  B4D8               	btfsc	status,2,c
  1899  003DB0  5C33               	subwf	main@tickCounter,w,c
  1900  003DB2  A0D8               	btfss	status,0,c
  1901  003DB4  D02A               	goto	l1834
  1902                           
  1903                           ;main.c: 515: {
  1904                           ;main.c: 516: stepNumber++;
  1905  003DB6  4A3F               	infsnz	main@stepNumber,f,c
  1906  003DB8  2A40               	incf	main@stepNumber+1,f,c
  1907                           
  1908                           ;main.c: 517: tickCounter = 0;
  1909  003DBA  0E00               	movlw	0
  1910  003DBC  6E34               	movwf	main@tickCounter+1,c
  1911  003DBE  0E00               	movlw	0
  1912  003DC0  6E33               	movwf	main@tickCounter,c
  1913                           
  1914                           ;main.c: 519: if (stepNumber == 4)
  1915  003DC2  503F               	movf	main@stepNumber,w,c
  1916  003DC4  0A04               	xorlw	4
  1917  003DC6  1040               	iorwf	main@stepNumber+1,w,c
  1918  003DC8  A4D8               	btfss	status,2,c
  1919  003DCA  D01F               	goto	l1834
  1920                           
  1921                           ;main.c: 520: {
  1922                           ;main.c: 521: stepNumber = 0;
  1923  003DCC  0E00               	movlw	0
  1924  003DCE  6E40               	movwf	main@stepNumber+1,c
  1925  003DD0  0E00               	movlw	0
  1926  003DD2  6E3F               	movwf	main@stepNumber,c
  1927                           
  1928                           ;main.c: 522: sequenceNumber++;
  1929  003DD4  2A3E               	incf	main@sequenceNumber,f,c
  1930                           
  1931                           ;main.c: 523: brightness = 0;
  1932  003DD6  6E10               	movwf	??_main& (0+255),c
  1933  003DD8  0E00               	movlw	0
  1934  003DDA  6E39               	movwf	main@brightness,c
  1935  003DDC  5010               	movf	??_main& (0+255),w,c
  1936                           
  1937                           ;main.c: 525: if (sequenceNumber == 1)
  1938  003DDE  043E               	decf	main@sequenceNumber,w,c
  1939  003DE0  A4D8               	btfss	status,2,c
  1940  003DE2  D013               	goto	l1834
  1941                           
  1942                           ;main.c: 526: {
  1943                           ;main.c: 527: sequenceNumber = 0;
  1944  003DE4  6E10               	movwf	??_main& (0+255),c
  1945  003DE6  0E00               	movlw	0
  1946  003DE8  6E3E               	movwf	main@sequenceNumber,c
  1947  003DEA  5010               	movf	??_main& (0+255),w,c
  1948                           
  1949                           ;main.c: 528: sequenceRepeats++;
  1950  003DEC  4A31               	infsnz	main@sequenceRepeats,f,c
  1951  003DEE  2A32               	incf	main@sequenceRepeats+1,f,c
  1952                           
  1953                           ;main.c: 529: if (sequenceRepeats > 100)
  1954  003DF0  5032               	movf	main@sequenceRepeats+1,w,c
  1955  003DF2  0A80               	xorlw	128
  1956  003DF4  0F80               	addlw	-128
  1957  003DF6  0E65               	movlw	101
  1958  003DF8  B4D8               	btfsc	status,2,c
  1959  003DFA  5C31               	subwf	main@sequenceRepeats,w,c
  1960  003DFC  A0D8               	btfss	status,0,c
  1961  003DFE  D005               	goto	l1834
  1962                           
  1963                           ;main.c: 530: {
  1964                           ;main.c: 531: sequenceRepeats = 0;
  1965  003E00  0E00               	movlw	0
  1966  003E02  6E32               	movwf	main@sequenceRepeats+1,c
  1967  003E04  0E00               	movlw	0
  1968  003E06  6E31               	movwf	main@sequenceRepeats,c
  1969                           
  1970                           ;main.c: 532: patternNumber++;
  1971  003E08  2A38               	incf	main@patternNumber,f,c
  1972  003E0A                     l1834:
  1973                           
  1974                           ;main.c: 533: }
  1975                           ;main.c: 534: }
  1976                           ;main.c: 535: }
  1977                           ;main.c: 536: }
  1978                           ;main.c: 537: }
  1979                           ;main.c: 540: if (patternNumber > 4) patternNumber = 0;
  1980  003E0A  0E04               	movlw	4
  1981  003E0C  6438               	cpfsgt	main@patternNumber,c
  1982  003E0E  D004               	goto	l1838
  1983  003E10  6E10               	movwf	??_main& (0+255),c
  1984  003E12  0E00               	movlw	0
  1985  003E14  6E38               	movwf	main@patternNumber,c
  1986  003E16  5010               	movf	??_main& (0+255),w,c
  1987  003E18                     l1838:
  1988                           
  1989                           ;main.c: 543: if (highPWM > PWMcount) TRISBbits.RB2 = 1; else TRISBbits.RB2 = 0;
  1990  003E18  503D               	movf	main@PWMcount+1,w,c
  1991  003E1A  0A80               	xorlw	128
  1992  003E1C  6E10               	movwf	??_main& (0+255),c
  1993  003E1E  502F               	movf	main@highPWM,w,c
  1994  003E20  5C3C               	subwf	main@PWMcount,w,c
  1995  003E22  5030               	movf	main@highPWM+1,w,c
  1996  003E24  0A80               	xorlw	128
  1997  003E26  5810               	subwfb	??_main& (0+255),w,c
  1998  003E28  B0D8               	btfsc	status,0,c
  1999  003E2A  D002               	goto	l179
  2000  003E2C  8493               	bsf	3987,2,c	;volatile
  2001  003E2E  D001               	goto	l1842
  2002  003E30                     l179:
  2003  003E30  9493               	bcf	3987,2,c	;volatile
  2004  003E32                     l1842:
  2005                           
  2006                           ;main.c: 544: if (midPWM > PWMcount) TRISBbits.RB1 = 1; else TRISBbits.RB1 = 0;
  2007  003E32  503D               	movf	main@PWMcount+1,w,c
  2008  003E34  0A80               	xorlw	128
  2009  003E36  6E10               	movwf	??_main& (0+255),c
  2010  003E38  5036               	movf	main@midPWM,w,c
  2011  003E3A  5C3C               	subwf	main@PWMcount,w,c
  2012  003E3C  5037               	movf	main@midPWM+1,w,c
  2013  003E3E  0A80               	xorlw	128
  2014  003E40  5810               	subwfb	??_main& (0+255),w,c
  2015  003E42  B0D8               	btfsc	status,0,c
  2016  003E44  D002               	goto	l181
  2017  003E46  8293               	bsf	3987,1,c	;volatile
  2018  003E48  D001               	goto	l1846
  2019  003E4A                     l181:
  2020  003E4A  9293               	bcf	3987,1,c	;volatile
  2021  003E4C                     l1846:
  2022                           
  2023                           ;main.c: 545: if (lowPWM > PWMcount) TRISBbits.RB0 = 1; else TRISBbits.RB0 = 0;
  2024  003E4C  503D               	movf	main@PWMcount+1,w,c
  2025  003E4E  0A80               	xorlw	128
  2026  003E50  6E10               	movwf	??_main& (0+255),c
  2027  003E52  502D               	movf	main@lowPWM,w,c
  2028  003E54  5C3C               	subwf	main@PWMcount,w,c
  2029  003E56  502E               	movf	main@lowPWM+1,w,c
  2030  003E58  0A80               	xorlw	128
  2031  003E5A  5810               	subwfb	??_main& (0+255),w,c
  2032  003E5C  B0D8               	btfsc	status,0,c
  2033  003E5E  D002               	goto	l183
  2034  003E60  8093               	bsf	3987,0,c	;volatile
  2035  003E62  D001               	goto	l1850
  2036  003E64                     l183:
  2037  003E64  9093               	bcf	3987,0,c	;volatile
  2038  003E66                     l1850:
  2039                           
  2040                           ;main.c: 548: PWMcount++;
  2041  003E66  4A3C               	infsnz	main@PWMcount,f,c
  2042  003E68  2A3D               	incf	main@PWMcount+1,f,c
  2043                           
  2044                           ;main.c: 549: if (PWMcount > 31) PWMcount = 0;
  2045  003E6A  503D               	movf	main@PWMcount+1,w,c
  2046  003E6C  0A80               	xorlw	128
  2047  003E6E  0F80               	addlw	-128
  2048  003E70  0E20               	movlw	32
  2049  003E72  B4D8               	btfsc	status,2,c
  2050  003E74  5C3C               	subwf	main@PWMcount,w,c
  2051  003E76  A0D8               	btfss	status,0,c
  2052  003E78  D004               	goto	l1856
  2053  003E7A  0E00               	movlw	0
  2054  003E7C  6E3D               	movwf	main@PWMcount+1,c
  2055  003E7E  0E00               	movlw	0
  2056  003E80  6E3C               	movwf	main@PWMcount,c
  2057  003E82                     l1856:
  2058                           
  2059                           ;main.c: 550: }
  2060                           ;main.c: 553: if (mode == 2)
  2061  003E82  5035               	movf	main@mode,w,c
  2062  003E84  0A02               	xorlw	2
  2063  003E86  A4D8               	btfss	status,2,c
  2064  003E88  EFBD  F01A         	goto	l1314
  2065                           
  2066                           ;main.c: 554: {
  2067                           ;main.c: 556: if (fadeCounter == 0)
  2068  003E8C  5021               	movf	main@fadeCounter+1,w,c
  2069  003E8E  1020               	iorwf	main@fadeCounter,w,c
  2070  003E90  A4D8               	btfss	status,2,c
  2071  003E92  D021               	goto	l1872
  2072                           
  2073                           ;main.c: 557: {
  2074                           ;main.c: 558: if (highPWM > 0) highPWM--;
  2075  003E94  5030               	movf	main@highPWM+1,w,c
  2076  003E96  0A80               	xorlw	128
  2077  003E98  0F80               	addlw	-128
  2078  003E9A  0E01               	movlw	1
  2079  003E9C  B4D8               	btfsc	status,2,c
  2080  003E9E  5C2F               	subwf	main@highPWM,w,c
  2081  003EA0  A0D8               	btfss	status,0,c
  2082  003EA2  D003               	goto	l1864
  2083  003EA4  062F               	decf	main@highPWM,f,c
  2084  003EA6  A0D8               	btfss	status,0,c
  2085  003EA8  0630               	decf	main@highPWM+1,f,c
  2086  003EAA                     l1864:
  2087                           
  2088                           ;main.c: 559: if (midPWM > 0) midPWM--;
  2089  003EAA  5037               	movf	main@midPWM+1,w,c
  2090  003EAC  0A80               	xorlw	128
  2091  003EAE  0F80               	addlw	-128
  2092  003EB0  0E01               	movlw	1
  2093  003EB2  B4D8               	btfsc	status,2,c
  2094  003EB4  5C36               	subwf	main@midPWM,w,c
  2095  003EB6  A0D8               	btfss	status,0,c
  2096  003EB8  D003               	goto	l1868
  2097  003EBA  0636               	decf	main@midPWM,f,c
  2098  003EBC  A0D8               	btfss	status,0,c
  2099  003EBE  0637               	decf	main@midPWM+1,f,c
  2100  003EC0                     l1868:
  2101                           
  2102                           ;main.c: 560: if (lowPWM > 0) lowPWM--;
  2103  003EC0  502E               	movf	main@lowPWM+1,w,c
  2104  003EC2  0A80               	xorlw	128
  2105  003EC4  0F80               	addlw	-128
  2106  003EC6  0E01               	movlw	1
  2107  003EC8  B4D8               	btfsc	status,2,c
  2108  003ECA  5C2D               	subwf	main@lowPWM,w,c
  2109  003ECC  A0D8               	btfss	status,0,c
  2110  003ECE  D003               	goto	l1872
  2111  003ED0  062D               	decf	main@lowPWM,f,c
  2112  003ED2  A0D8               	btfss	status,0,c
  2113  003ED4  062E               	decf	main@lowPWM+1,f,c
  2114  003ED6                     l1872:
  2115                           
  2116                           ;main.c: 561: }
  2117                           ;main.c: 564: if (highLevel > 150) highPWM = 31;
  2118  003ED6  5025               	movf	main@highLevel+1,w,c
  2119  003ED8  0A80               	xorlw	128
  2120  003EDA  0F80               	addlw	-128
  2121  003EDC  0E97               	movlw	151
  2122  003EDE  B4D8               	btfsc	status,2,c
  2123  003EE0  5C24               	subwf	main@highLevel,w,c
  2124  003EE2  A0D8               	btfss	status,0,c
  2125  003EE4  D004               	goto	l1876
  2126  003EE6  0E00               	movlw	0
  2127  003EE8  6E30               	movwf	main@highPWM+1,c
  2128  003EEA  0E1F               	movlw	31
  2129  003EEC  6E2F               	movwf	main@highPWM,c
  2130  003EEE                     l1876:
  2131                           
  2132                           ;main.c: 565: if (midLevel > 520) midPWM = 31;
  2133  003EEE  5015               	movf	main@midLevel+1,w,c
  2134  003EF0  0A80               	xorlw	128
  2135  003EF2  0F7E               	addlw	-130
  2136  003EF4  0E09               	movlw	9
  2137  003EF6  B4D8               	btfsc	status,2,c
  2138  003EF8  5C14               	subwf	main@midLevel,w,c
  2139  003EFA  A0D8               	btfss	status,0,c
  2140  003EFC  D004               	goto	l1880
  2141  003EFE  0E00               	movlw	0
  2142  003F00  6E37               	movwf	main@midPWM+1,c
  2143  003F02  0E1F               	movlw	31
  2144  003F04  6E36               	movwf	main@midPWM,c
  2145  003F06                     l1880:
  2146                           
  2147                           ;main.c: 566: if (lowLevel > 470) lowPWM = 31;
  2148  003F06  5017               	movf	main@lowLevel+1,w,c
  2149  003F08  0A80               	xorlw	128
  2150  003F0A  0F7F               	addlw	-129
  2151  003F0C  0ED7               	movlw	215
  2152  003F0E  B4D8               	btfsc	status,2,c
  2153  003F10  5C16               	subwf	main@lowLevel,w,c
  2154  003F12  A0D8               	btfss	status,0,c
  2155  003F14  D004               	goto	l1884
  2156  003F16  0E00               	movlw	0
  2157  003F18  6E2E               	movwf	main@lowPWM+1,c
  2158  003F1A  0E1F               	movlw	31
  2159  003F1C  6E2D               	movwf	main@lowPWM,c
  2160  003F1E                     l1884:
  2161                           
  2162                           ;main.c: 569: if (highPWM > PWMcount) TRISBbits.RB2 = 1; else TRISBbits.RB2 = 0;
  2163  003F1E  503D               	movf	main@PWMcount+1,w,c
  2164  003F20  0A80               	xorlw	128
  2165  003F22  6E10               	movwf	??_main& (0+255),c
  2166  003F24  502F               	movf	main@highPWM,w,c
  2167  003F26  5C3C               	subwf	main@PWMcount,w,c
  2168  003F28  5030               	movf	main@highPWM+1,w,c
  2169  003F2A  0A80               	xorlw	128
  2170  003F2C  5810               	subwfb	??_main& (0+255),w,c
  2171  003F2E  B0D8               	btfsc	status,0,c
  2172  003F30  D002               	goto	l194
  2173  003F32  8493               	bsf	3987,2,c	;volatile
  2174  003F34  D001               	goto	l1888
  2175  003F36                     l194:
  2176  003F36  9493               	bcf	3987,2,c	;volatile
  2177  003F38                     l1888:
  2178                           
  2179                           ;main.c: 570: if (midPWM > PWMcount) TRISBbits.RB1 = 1; else TRISBbits.RB1 = 0;
  2180  003F38  503D               	movf	main@PWMcount+1,w,c
  2181  003F3A  0A80               	xorlw	128
  2182  003F3C  6E10               	movwf	??_main& (0+255),c
  2183  003F3E  5036               	movf	main@midPWM,w,c
  2184  003F40  5C3C               	subwf	main@PWMcount,w,c
  2185  003F42  5037               	movf	main@midPWM+1,w,c
  2186  003F44  0A80               	xorlw	128
  2187  003F46  5810               	subwfb	??_main& (0+255),w,c
  2188  003F48  B0D8               	btfsc	status,0,c
  2189  003F4A  D002               	goto	l196
  2190  003F4C  8293               	bsf	3987,1,c	;volatile
  2191  003F4E  D001               	goto	l1892
  2192  003F50                     l196:
  2193  003F50  9293               	bcf	3987,1,c	;volatile
  2194  003F52                     l1892:
  2195                           
  2196                           ;main.c: 571: if (lowPWM > PWMcount) TRISBbits.RB0 = 1; else TRISBbits.RB0 = 0;
  2197  003F52  503D               	movf	main@PWMcount+1,w,c
  2198  003F54  0A80               	xorlw	128
  2199  003F56  6E10               	movwf	??_main& (0+255),c
  2200  003F58  502D               	movf	main@lowPWM,w,c
  2201  003F5A  5C3C               	subwf	main@PWMcount,w,c
  2202  003F5C  502E               	movf	main@lowPWM+1,w,c
  2203  003F5E  0A80               	xorlw	128
  2204  003F60  5810               	subwfb	??_main& (0+255),w,c
  2205  003F62  B0D8               	btfsc	status,0,c
  2206  003F64  D002               	goto	l198
  2207  003F66  8093               	bsf	3987,0,c	;volatile
  2208  003F68  D001               	goto	l1896
  2209  003F6A                     l198:
  2210  003F6A  9093               	bcf	3987,0,c	;volatile
  2211  003F6C                     l1896:
  2212                           
  2213                           ;main.c: 574: if (highPWM > PWMcount) TRISBbits.RB5 = 1; else TRISBbits.RB5 = 0;
  2214  003F6C  503D               	movf	main@PWMcount+1,w,c
  2215  003F6E  0A80               	xorlw	128
  2216  003F70  6E10               	movwf	??_main& (0+255),c
  2217  003F72  502F               	movf	main@highPWM,w,c
  2218  003F74  5C3C               	subwf	main@PWMcount,w,c
  2219  003F76  5030               	movf	main@highPWM+1,w,c
  2220  003F78  0A80               	xorlw	128
  2221  003F7A  5810               	subwfb	??_main& (0+255),w,c
  2222  003F7C  B0D8               	btfsc	status,0,c
  2223  003F7E  D002               	goto	l200
  2224  003F80  8A93               	bsf	3987,5,c	;volatile
  2225  003F82  D001               	goto	l1900
  2226  003F84                     l200:
  2227  003F84  9A93               	bcf	3987,5,c	;volatile
  2228  003F86                     l1900:
  2229                           
  2230                           ;main.c: 575: if (midPWM > PWMcount) TRISBbits.RB4 = 1; else TRISBbits.RB4 = 0;
  2231  003F86  503D               	movf	main@PWMcount+1,w,c
  2232  003F88  0A80               	xorlw	128
  2233  003F8A  6E10               	movwf	??_main& (0+255),c
  2234  003F8C  5036               	movf	main@midPWM,w,c
  2235  003F8E  5C3C               	subwf	main@PWMcount,w,c
  2236  003F90  5037               	movf	main@midPWM+1,w,c
  2237  003F92  0A80               	xorlw	128
  2238  003F94  5810               	subwfb	??_main& (0+255),w,c
  2239  003F96  B0D8               	btfsc	status,0,c
  2240  003F98  D002               	goto	l202
  2241  003F9A  8893               	bsf	3987,4,c	;volatile
  2242  003F9C  D001               	goto	l1904
  2243  003F9E                     l202:
  2244  003F9E  9893               	bcf	3987,4,c	;volatile
  2245  003FA0                     l1904:
  2246                           
  2247                           ;main.c: 576: if (lowPWM > PWMcount) TRISBbits.RB3 = 1; else TRISBbits.RB3 = 0;
  2248  003FA0  503D               	movf	main@PWMcount+1,w,c
  2249  003FA2  0A80               	xorlw	128
  2250  003FA4  6E10               	movwf	??_main& (0+255),c
  2251  003FA6  502D               	movf	main@lowPWM,w,c
  2252  003FA8  5C3C               	subwf	main@PWMcount,w,c
  2253  003FAA  502E               	movf	main@lowPWM+1,w,c
  2254  003FAC  0A80               	xorlw	128
  2255  003FAE  5810               	subwfb	??_main& (0+255),w,c
  2256  003FB0  B0D8               	btfsc	status,0,c
  2257  003FB2  D002               	goto	l204
  2258  003FB4  8693               	bsf	3987,3,c	;volatile
  2259  003FB6  D001               	goto	l1908
  2260  003FB8                     l204:
  2261  003FB8  9693               	bcf	3987,3,c	;volatile
  2262  003FBA                     l1908:
  2263                           
  2264                           ;main.c: 579: PWMcount++;
  2265  003FBA  4A3C               	infsnz	main@PWMcount,f,c
  2266  003FBC  2A3D               	incf	main@PWMcount+1,f,c
  2267                           
  2268                           ;main.c: 580: if (PWMcount > 31) PWMcount = 0;
  2269  003FBE  503D               	movf	main@PWMcount+1,w,c
  2270  003FC0  0A80               	xorlw	128
  2271  003FC2  0F80               	addlw	-128
  2272  003FC4  0E20               	movlw	32
  2273  003FC6  B4D8               	btfsc	status,2,c
  2274  003FC8  5C3C               	subwf	main@PWMcount,w,c
  2275  003FCA  A0D8               	btfss	status,0,c
  2276  003FCC  D004               	goto	l1914
  2277  003FCE  0E00               	movlw	0
  2278  003FD0  6E3D               	movwf	main@PWMcount+1,c
  2279  003FD2  0E00               	movlw	0
  2280  003FD4  6E3C               	movwf	main@PWMcount,c
  2281  003FD6                     l1914:
  2282                           
  2283                           ;main.c: 583: fadeCounter++;
  2284  003FD6  4A20               	infsnz	main@fadeCounter,f,c
  2285  003FD8  2A21               	incf	main@fadeCounter+1,f,c
  2286                           
  2287                           ;main.c: 584: if (fadeCounter > 30) fadeCounter = 0;
  2288  003FDA  5021               	movf	main@fadeCounter+1,w,c
  2289  003FDC  0A80               	xorlw	128
  2290  003FDE  0F80               	addlw	-128
  2291  003FE0  0E1F               	movlw	31
  2292  003FE2  B4D8               	btfsc	status,2,c
  2293  003FE4  5C20               	subwf	main@fadeCounter,w,c
  2294  003FE6  A0D8               	btfss	status,0,c
  2295  003FE8  EFBD  F01A         	goto	l1314
  2296  003FEC  0E00               	movlw	0
  2297  003FEE  6E21               	movwf	main@fadeCounter+1,c
  2298  003FF0  0E00               	movlw	0
  2299  003FF2  6E20               	movwf	main@fadeCounter,c
  2300  003FF4  EFBD  F01A         	goto	l1314
  2301  003FF8                     __end_of_main:
  2302                           	opt stack 0
  2303                           prodl	equ	0xFF3
  2304                           intcon	equ	0xFF2
  2305                           status	equ	0xFD8
  2306                           
  2307                           	psect	cinit
  2308  0032E2                     __pcinit:
  2309                           	opt stack 0
  2310  0032E2                     start_initialization:
  2311                           	opt stack 0
  2312  0032E2                     __initialization:
  2313                           	opt stack 0
  2314                           
  2315                           ; Clear objects allocated to BANK0 (128 bytes)
  2316  0032E2  EE00  F080         	lfsr	0,__pbssBANK0
  2317  0032E6  0E80               	movlw	128
  2318  0032E8                     clear_0:
  2319  0032E8  6AEE               	clrf	postinc0,c
  2320  0032EA  06E8               	decf	wreg,f,c
  2321  0032EC  E1FD               	bnz	clear_0
  2322                           
  2323                           ; Clear objects allocated to COMRAM (5 bytes)
  2324  0032EE  6A45               	clrf	(__pbssCOMRAM+4)& (0+255),c
  2325  0032F0  6A44               	clrf	(__pbssCOMRAM+3)& (0+255),c
  2326  0032F2  6A43               	clrf	(__pbssCOMRAM+2)& (0+255),c
  2327  0032F4  6A42               	clrf	(__pbssCOMRAM+1)& (0+255),c
  2328  0032F6  6A41               	clrf	__pbssCOMRAM& (0+255),c
  2329  0032F8                     end_of_initialization:
  2330                           	opt stack 0
  2331  0032F8                     __end_of__initialization:
  2332                           	opt stack 0
  2333  0032F8  0E00               	movlw	low (__Lmediumconst shr (0+16))
  2334  0032FA  6EF8               	movwf	tblptru,c
  2335  0032FC  0100               	movlb	0
  2336  0032FE  EF3D  F01A         	goto	_main	;jump to C main() function
  2337                           tblptru	equ	0xFF8
  2338                           prodl	equ	0xFF3
  2339                           intcon	equ	0xFF2
  2340                           postinc0	equ	0xFEE
  2341                           wreg	equ	0xFE8
  2342                           status	equ	0xFD8
  2343                           
  2344                           	psect	bssCOMRAM
  2345  000041                     __pbssCOMRAM:
  2346                           	opt stack 0
  2347  000041                     _randx:
  2348                           	opt stack 0
  2349  000041                     	ds	4
  2350  000045                     _randf:
  2351                           	opt stack 0
  2352  000045                     	ds	1
  2353                           tblptru	equ	0xFF8
  2354                           prodl	equ	0xFF3
  2355                           intcon	equ	0xFF2
  2356                           postinc0	equ	0xFEE
  2357                           wreg	equ	0xFE8
  2358                           status	equ	0xFD8
  2359                           
  2360                           	psect	bssBANK0
  2361  000080                     __pbssBANK0:
  2362                           	opt stack 0
  2363  000080                     _led_strip_colors:
  2364                           	opt stack 0
  2365  000080                     	ds	128
  2366                           tblptru	equ	0xFF8
  2367                           prodl	equ	0xFF3
  2368                           intcon	equ	0xFF2
  2369                           postinc0	equ	0xFEE
  2370                           wreg	equ	0xFE8
  2371                           status	equ	0xFD8
  2372                           
  2373                           	psect	cstackCOMRAM
  2374  000001                     __pcstackCOMRAM:
  2375                           	opt stack 0
  2376  000001                     ?_readMyADC:
  2377                           	opt stack 0
  2378  000001                     ?___aldiv:
  2379                           	opt stack 0
  2380  000001                     setGainLevel@gainLevel:
  2381                           	opt stack 0
  2382  000001                     ___aldiv@dividend:
  2383                           	opt stack 0
  2384                           
  2385                           ; 4 bytes @ 0x0
  2386  000001                     	ds	2
  2387  000003                     readMyADC@result:
  2388                           	opt stack 0
  2389                           
  2390                           ; 2 bytes @ 0x2
  2391  000003                     	ds	2
  2392  000005                     readMyADC@ADCnumber:
  2393                           	opt stack 0
  2394  000005                     ___aldiv@divisor:
  2395                           	opt stack 0
  2396                           
  2397                           ; 4 bytes @ 0x4
  2398  000005                     	ds	4
  2399  000009                     ??___aldiv:
  2400                           
  2401                           ; 0 bytes @ 0x8
  2402  000009                     	ds	1
  2403  00000A                     ___aldiv@counter:
  2404                           	opt stack 0
  2405                           
  2406                           ; 1 bytes @ 0x9
  2407  00000A                     	ds	1
  2408  00000B                     ___aldiv@sign:
  2409                           	opt stack 0
  2410                           
  2411                           ; 1 bytes @ 0xA
  2412  00000B                     	ds	1
  2413  00000C                     ___aldiv@quotient:
  2414                           	opt stack 0
  2415                           
  2416                           ; 4 bytes @ 0xB
  2417  00000C                     	ds	4
  2418  000010                     ??_main:
  2419                           
  2420                           ; 0 bytes @ 0xF
  2421  000010                     	ds	4
  2422  000014                     main@midLevel:
  2423                           	opt stack 0
  2424                           
  2425                           ; 2 bytes @ 0x13
  2426  000014                     	ds	2
  2427  000016                     main@lowLevel:
  2428                           	opt stack 0
  2429                           
  2430                           ; 2 bytes @ 0x15
  2431  000016                     	ds	2
  2432  000018                     main@mainLevel:
  2433                           	opt stack 0
  2434                           
  2435                           ; 2 bytes @ 0x17
  2436  000018                     	ds	2
  2437  00001A                     main@total:
  2438                           	opt stack 0
  2439                           
  2440                           ; 4 bytes @ 0x19
  2441  00001A                     	ds	4
  2442  00001E                     main@sampleCount:
  2443                           	opt stack 0
  2444                           
  2445                           ; 2 bytes @ 0x1D
  2446  00001E                     	ds	2
  2447  000020                     main@fadeCounter:
  2448                           	opt stack 0
  2449                           
  2450                           ; 2 bytes @ 0x1F
  2451  000020                     	ds	2
  2452  000022                     main@soundDetectedCount:
  2453                           	opt stack 0
  2454                           
  2455                           ; 2 bytes @ 0x21
  2456  000022                     	ds	2
  2457  000024                     main@highLevel:
  2458                           	opt stack 0
  2459                           
  2460                           ; 2 bytes @ 0x23
  2461  000024                     	ds	2
  2462  000026                     main@soundFlag:
  2463                           	opt stack 0
  2464                           
  2465                           ; 1 bytes @ 0x25
  2466  000026                     	ds	1
  2467  000027                     main@average:
  2468                           	opt stack 0
  2469                           
  2470                           ; 2 bytes @ 0x26
  2471  000027                     	ds	2
  2472  000029                     main@clapCounter:
  2473                           	opt stack 0
  2474                           
  2475                           ; 2 bytes @ 0x28
  2476  000029                     	ds	2
  2477  00002B                     main@currentGainLevel:
  2478                           	opt stack 0
  2479                           
  2480                           ; 2 bytes @ 0x2A
  2481  00002B                     	ds	2
  2482  00002D                     main@lowPWM:
  2483                           	opt stack 0
  2484                           
  2485                           ; 2 bytes @ 0x2C
  2486  00002D                     	ds	2
  2487  00002F                     main@highPWM:
  2488                           	opt stack 0
  2489                           
  2490                           ; 2 bytes @ 0x2E
  2491  00002F                     	ds	2
  2492  000031                     main@sequenceRepeats:
  2493                           	opt stack 0
  2494                           
  2495                           ; 2 bytes @ 0x30
  2496  000031                     	ds	2
  2497  000033                     main@tickCounter:
  2498                           	opt stack 0
  2499                           
  2500                           ; 2 bytes @ 0x32
  2501  000033                     	ds	2
  2502  000035                     main@mode:
  2503                           	opt stack 0
  2504                           
  2505                           ; 1 bytes @ 0x34
  2506  000035                     	ds	1
  2507  000036                     main@midPWM:
  2508                           	opt stack 0
  2509                           
  2510                           ; 2 bytes @ 0x35
  2511  000036                     	ds	2
  2512  000038                     main@patternNumber:
  2513                           	opt stack 0
  2514                           
  2515                           ; 1 bytes @ 0x37
  2516  000038                     	ds	1
  2517  000039                     main@brightness:
  2518                           	opt stack 0
  2519                           
  2520                           ; 1 bytes @ 0x38
  2521  000039                     	ds	1
  2522  00003A                     main@currentStep:
  2523                           	opt stack 0
  2524                           
  2525                           ; 2 bytes @ 0x39
  2526  00003A                     	ds	2
  2527  00003C                     main@PWMcount:
  2528                           	opt stack 0
  2529                           
  2530                           ; 2 bytes @ 0x3B
  2531  00003C                     	ds	2
  2532  00003E                     main@sequenceNumber:
  2533                           	opt stack 0
  2534                           
  2535                           ; 1 bytes @ 0x3D
  2536  00003E                     	ds	1
  2537  00003F                     main@stepNumber:
  2538                           	opt stack 0
  2539                           
  2540                           ; 2 bytes @ 0x3E
  2541  00003F                     	ds	2
  2542                           tblptru	equ	0xFF8
  2543                           prodl	equ	0xFF3
  2544                           intcon	equ	0xFF2
  2545                           postinc0	equ	0xFEE
  2546                           wreg	equ	0xFE8
  2547                           status	equ	0xFD8
  2548                           
  2549 ;; *************** function _setupSPI *****************
  2550 ;; Defined at:
  2551 ;;		line 3 in file "spi.c"
  2552 ;; Parameters:    Size  Location     Type
  2553 ;;		None
  2554 ;; Auto vars:     Size  Location     Type
  2555 ;;		None
  2556 ;; Return value:  Size  Location     Type
  2557 ;;		None               void
  2558 ;; Registers used:
  2559 ;;		wreg, status,2
  2560 ;; Tracked objects:
  2561 ;;		On entry : 0/0
  2562 ;;		On exit  : 0/0
  2563 ;;		Unchanged: 0/0
  2564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2565 ;;      Params:         0       0       0       0       0
  2566 ;;      Locals:         0       0       0       0       0
  2567 ;;      Temps:          0       0       0       0       0
  2568 ;;      Totals:         0       0       0       0       0
  2569 ;;Total ram usage:        0 bytes
  2570 ;; Hardware stack levels used:    1
  2571 ;; This function calls:
  2572 ;;		Nothing
  2573 ;; This function is called by:
  2574 ;;		_main
  2575 ;; This function uses a non-reentrant model
  2576 ;;
  2577                           
  2578                           	psect	text1
  2579  0032D0                     __ptext1:
  2580                           	opt stack 0
  2581  0032D0                     _setupSPI:
  2582                           	opt stack 30
  2583                           
  2584                           ;spi.c: 6: TRISCbits.TRISC5 = 0;
  2585                           
  2586                           ;incstack = 0
  2587  0032D0  9A94               	bcf	3988,5,c	;volatile
  2588                           
  2589                           ;spi.c: 7: TRISCbits.TRISC4 = 1;
  2590  0032D2  8894               	bsf	3988,4,c	;volatile
  2591                           
  2592                           ;spi.c: 8: TRISCbits.TRISC3 = 0;
  2593  0032D4  9694               	bcf	3988,3,c	;volatile
  2594                           
  2595                           ;spi.c: 11: TRISCbits.TRISC0 = 1;
  2596  0032D6  8094               	bsf	3988,0,c	;volatile
  2597                           
  2598                           ;spi.c: 14: SSPSTAT = 0x40;
  2599  0032D8  0E40               	movlw	64
  2600  0032DA  6EC7               	movwf	4039,c	;volatile
  2601                           
  2602                           ;spi.c: 15: SSPCON1 = 0x20;
  2603  0032DC  0E20               	movlw	32
  2604  0032DE  6EC6               	movwf	4038,c	;volatile
  2605  0032E0  0012               	return	
  2606  0032E2                     __end_of_setupSPI:
  2607                           	opt stack 0
  2608                           tblptru	equ	0xFF8
  2609                           prodl	equ	0xFF3
  2610                           intcon	equ	0xFF2
  2611                           postinc0	equ	0xFEE
  2612                           wreg	equ	0xFE8
  2613                           status	equ	0xFD8
  2614                           
  2615 ;; *************** function _setGainLevel *****************
  2616 ;; Defined at:
  2617 ;;		line 20 in file "spi.c"
  2618 ;; Parameters:    Size  Location     Type
  2619 ;;  gainLevel       1    wreg     unsigned char 
  2620 ;; Auto vars:     Size  Location     Type
  2621 ;;  gainLevel       1    0[COMRAM] unsigned char 
  2622 ;; Return value:  Size  Location     Type
  2623 ;;		None               void
  2624 ;; Registers used:
  2625 ;;		wreg, status,2
  2626 ;; Tracked objects:
  2627 ;;		On entry : 0/0
  2628 ;;		On exit  : 0/0
  2629 ;;		Unchanged: 0/0
  2630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2631 ;;      Params:         0       0       0       0       0
  2632 ;;      Locals:         1       0       0       0       0
  2633 ;;      Temps:          0       0       0       0       0
  2634 ;;      Totals:         1       0       0       0       0
  2635 ;;Total ram usage:        1 bytes
  2636 ;; Hardware stack levels used:    1
  2637 ;; This function calls:
  2638 ;;		Nothing
  2639 ;; This function is called by:
  2640 ;;		_main
  2641 ;; This function uses a non-reentrant model
  2642 ;;
  2643                           
  2644                           	psect	text2
  2645  003302                     __ptext2:
  2646                           	opt stack 0
  2647  003302                     _setGainLevel:
  2648                           	opt stack 30
  2649                           
  2650                           ;incstack = 0
  2651                           ;setGainLevel@gainLevel stored from wreg
  2652  003302  CFE8 F001          	movff	wreg,setGainLevel@gainLevel
  2653                           
  2654                           ;spi.c: 23: SSPSTAT = 0xC0;
  2655  003306  0EC0               	movlw	192
  2656  003308  6EC7               	movwf	4039,c	;volatile
  2657                           
  2658                           ;spi.c: 26: SSPCON1 = 0x20;
  2659  00330A  0E20               	movlw	32
  2660  00330C  6EC6               	movwf	4038,c	;volatile
  2661                           
  2662                           ;spi.c: 30: TRISCbits.RC0 = 0;
  2663  00330E  9094               	bcf	3988,0,c	;volatile
  2664                           
  2665                           ;spi.c: 33: SSPIF = 0;
  2666  003310  969E               	bcf	3998,3,c	;volatile
  2667                           
  2668                           ;spi.c: 34: SSPBUF = 0x13;
  2669  003312  0E13               	movlw	19
  2670  003314  6EC9               	movwf	4041,c	;volatile
  2671  003316                     l299:
  2672  003316  A69E               	btfss	3998,3,c	;volatile
  2673  003318  D7FE               	goto	l299
  2674                           
  2675                           ;spi.c: 38: SSPIF = 0;
  2676  00331A  969E               	bcf	3998,3,c	;volatile
  2677                           
  2678                           ;spi.c: 39: SSPBUF = gainLevel;
  2679  00331C  C001  FFC9         	movff	setGainLevel@gainLevel,4041	;volatile
  2680  003320                     l302:
  2681  003320  A69E               	btfss	3998,3,c	;volatile
  2682  003322  D7FE               	goto	l302
  2683                           
  2684                           ;spi.c: 43: TRISCbits.RC0 = 1;
  2685  003324  8094               	bsf	3988,0,c	;volatile
  2686  003326  0012               	return	
  2687  003328                     __end_of_setGainLevel:
  2688                           	opt stack 0
  2689                           tblptru	equ	0xFF8
  2690                           prodl	equ	0xFF3
  2691                           intcon	equ	0xFF2
  2692                           postinc0	equ	0xFEE
  2693                           wreg	equ	0xFE8
  2694                           status	equ	0xFD8
  2695                           
  2696 ;; *************** function _readMyADC *****************
  2697 ;; Defined at:
  2698 ;;		line 590 in file "main.c"
  2699 ;; Parameters:    Size  Location     Type
  2700 ;;  ADCnumber       1    wreg     unsigned char 
  2701 ;; Auto vars:     Size  Location     Type
  2702 ;;  ADCnumber       1    4[COMRAM] unsigned char 
  2703 ;;  result          2    2[COMRAM] int 
  2704 ;; Return value:  Size  Location     Type
  2705 ;;                  2    0[COMRAM] int 
  2706 ;; Registers used:
  2707 ;;		wreg, status,2, status,0
  2708 ;; Tracked objects:
  2709 ;;		On entry : 0/0
  2710 ;;		On exit  : 0/0
  2711 ;;		Unchanged: 0/0
  2712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2713 ;;      Params:         2       0       0       0       0
  2714 ;;      Locals:         3       0       0       0       0
  2715 ;;      Temps:          0       0       0       0       0
  2716 ;;      Totals:         5       0       0       0       0
  2717 ;;Total ram usage:        5 bytes
  2718 ;; Hardware stack levels used:    1
  2719 ;; This function calls:
  2720 ;;		Nothing
  2721 ;; This function is called by:
  2722 ;;		_main
  2723 ;; This function uses a non-reentrant model
  2724 ;;
  2725                           
  2726                           	psect	text3
  2727  003328                     __ptext3:
  2728                           	opt stack 0
  2729  003328                     _readMyADC:
  2730                           	opt stack 30
  2731                           
  2732                           ;incstack = 0
  2733                           ;readMyADC@ADCnumber stored from wreg
  2734  003328  CFE8 F005          	movff	wreg,readMyADC@ADCnumber
  2735                           
  2736                           ;main.c: 592: int result;
  2737                           ;main.c: 595: switch(ADCnumber)
  2738  00332C  D009               	goto	l1010
  2739  00332E                     l1000:
  2740  00332E  0E01               	movlw	1
  2741  003330  D005               	goto	L21
  2742  003332                     l1002:
  2743  003332  0E05               	movlw	5
  2744  003334  D003               	goto	L21
  2745  003336                     l1004:
  2746  003336  0E09               	movlw	9
  2747  003338  D001               	goto	L21
  2748  00333A                     l1006:
  2749  00333A  0E0D               	movlw	13
  2750  00333C                     L21:
  2751  00333C  6EC2               	movwf	4034,c	;volatile
  2752                           
  2753                           ;main.c: 604: break;
  2754  00333E  D00D               	goto	l219
  2755  003340                     l1010:
  2756  003340  5005               	movf	readMyADC@ADCnumber,w,c
  2757                           
  2758                           ; Switch size 1, requested type "space"
  2759                           ; Number of cases is 4, Range of values is 0 to 3
  2760                           ; switch strategies available:
  2761                           ; Name         Instructions Cycles
  2762                           ; simple_byte           13     7 (average)
  2763                           ;	Chosen strategy is simple_byte
  2764  003342  0A00               	xorlw	0	; case 0
  2765  003344  B4D8               	btfsc	status,2,c
  2766  003346  D7F3               	goto	l1000
  2767  003348  0A01               	xorlw	1	; case 1
  2768  00334A  B4D8               	btfsc	status,2,c
  2769  00334C  D7F2               	goto	l1002
  2770  00334E  0A03               	xorlw	3	; case 2
  2771  003350  B4D8               	btfsc	status,2,c
  2772  003352  D7F1               	goto	l1004
  2773  003354  0A01               	xorlw	1	; case 3
  2774  003356  B4D8               	btfsc	status,2,c
  2775  003358  D7F0               	goto	l1006
  2776  00335A                     l219:
  2777  00335A  B2C2               	btfsc	4034,1,c	;volatile
  2778  00335C  D7FE               	goto	l219
  2779                           
  2780                           ;main.c: 611: result = ADRESL;
  2781  00335E  CFC3 F003          	movff	4035,readMyADC@result	;volatile
  2782  003362  6A04               	clrf	readMyADC@result+1,c
  2783                           
  2784                           ;main.c: 612: result += (ADRESH << 8);
  2785  003364  50C4               	movf	4036,w,c	;volatile
  2786  003366  2604               	addwf	readMyADC@result+1,f,c
  2787                           
  2788                           ;main.c: 614: return result;
  2789  003368  C003  F001         	movff	readMyADC@result,?_readMyADC
  2790  00336C  C004  F002         	movff	readMyADC@result+1,?_readMyADC+1
  2791  003370  0012               	return	
  2792  003372                     __end_of_readMyADC:
  2793                           	opt stack 0
  2794                           tblptru	equ	0xFF8
  2795                           prodl	equ	0xFF3
  2796                           intcon	equ	0xFF2
  2797                           postinc0	equ	0xFEE
  2798                           wreg	equ	0xFE8
  2799                           status	equ	0xFD8
  2800                           
  2801 ;; *************** function ___aldiv *****************
  2802 ;; Defined at:
  2803 ;;		line 8 in file "/opt/microchip/xc8/v1.30/sources/common/aldiv.c"
  2804 ;; Parameters:    Size  Location     Type
  2805 ;;  dividend        4    0[COMRAM] long 
  2806 ;;  divisor         4    4[COMRAM] long 
  2807 ;; Auto vars:     Size  Location     Type
  2808 ;;  quotient        4   11[COMRAM] long 
  2809 ;;  sign            1   10[COMRAM] unsigned char 
  2810 ;;  counter         1    9[COMRAM] unsigned char 
  2811 ;; Return value:  Size  Location     Type
  2812 ;;                  4    0[COMRAM] long 
  2813 ;; Registers used:
  2814 ;;		wreg, status,2, status,0
  2815 ;; Tracked objects:
  2816 ;;		On entry : 0/0
  2817 ;;		On exit  : 0/0
  2818 ;;		Unchanged: 0/0
  2819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2820 ;;      Params:         8       0       0       0       0
  2821 ;;      Locals:         6       0       0       0       0
  2822 ;;      Temps:          1       0       0       0       0
  2823 ;;      Totals:        15       0       0       0       0
  2824 ;;Total ram usage:       15 bytes
  2825 ;; Hardware stack levels used:    1
  2826 ;; This function calls:
  2827 ;;		Nothing
  2828 ;; This function is called by:
  2829 ;;		_main
  2830 ;; This function uses a non-reentrant model
  2831 ;;
  2832                           
  2833                           	psect	text4
  2834  003372                     __ptext4:
  2835                           	opt stack 0
  2836  003372                     ___aldiv:
  2837                           	opt stack 30
  2838                           
  2839                           ;incstack = 0
  2840  003372  6E09               	movwf	??___aldiv& (0+255),c
  2841  003374  0E00               	movlw	0
  2842  003376  6E0B               	movwf	___aldiv@sign,c
  2843  003378  5009               	movf	??___aldiv& (0+255),w,c
  2844  00337A  5008               	movf	___aldiv@divisor+3,w,c
  2845  00337C  0A80               	xorlw	128
  2846  00337E  0F80               	addlw	128
  2847  003380  E108               	bnz	u425
  2848  003382  0E00               	movlw	0
  2849  003384  5C07               	subwf	___aldiv@divisor+2,w,c
  2850  003386  E105               	bnz	u425
  2851  003388  0E00               	movlw	0
  2852  00338A  5C06               	subwf	___aldiv@divisor+1,w,c
  2853  00338C  E102               	bnz	u425
  2854  00338E  0E00               	movlw	0
  2855  003390  5C05               	subwf	___aldiv@divisor,w,c
  2856  003392                     u425:
  2857  003392  B0D8               	btfsc	status,0,c
  2858  003394  D00C               	goto	l1240
  2859  003396  1E08               	comf	___aldiv@divisor+3,f,c
  2860  003398  1E07               	comf	___aldiv@divisor+2,f,c
  2861  00339A  1E06               	comf	___aldiv@divisor+1,f,c
  2862  00339C  6C05               	negf	___aldiv@divisor,c
  2863  00339E  0E00               	movlw	0
  2864  0033A0  2206               	addwfc	___aldiv@divisor+1,f,c
  2865  0033A2  2207               	addwfc	___aldiv@divisor+2,f,c
  2866  0033A4  2208               	addwfc	___aldiv@divisor+3,f,c
  2867  0033A6  6E09               	movwf	??___aldiv& (0+255),c
  2868  0033A8  0E01               	movlw	1
  2869  0033AA  6E0B               	movwf	___aldiv@sign,c
  2870  0033AC  5009               	movf	??___aldiv& (0+255),w,c
  2871  0033AE                     l1240:
  2872  0033AE  5004               	movf	___aldiv@dividend+3,w,c
  2873  0033B0  0A80               	xorlw	128
  2874  0033B2  0F80               	addlw	128
  2875  0033B4  E108               	bnz	u435
  2876  0033B6  0E00               	movlw	0
  2877  0033B8  5C03               	subwf	___aldiv@dividend+2,w,c
  2878  0033BA  E105               	bnz	u435
  2879  0033BC  0E00               	movlw	0
  2880  0033BE  5C02               	subwf	___aldiv@dividend+1,w,c
  2881  0033C0  E102               	bnz	u435
  2882  0033C2  0E00               	movlw	0
  2883  0033C4  5C01               	subwf	___aldiv@dividend,w,c
  2884  0033C6                     u435:
  2885  0033C6  B0D8               	btfsc	status,0,c
  2886  0033C8  D00A               	goto	l1246
  2887  0033CA  1E04               	comf	___aldiv@dividend+3,f,c
  2888  0033CC  1E03               	comf	___aldiv@dividend+2,f,c
  2889  0033CE  1E02               	comf	___aldiv@dividend+1,f,c
  2890  0033D0  6C01               	negf	___aldiv@dividend,c
  2891  0033D2  0E00               	movlw	0
  2892  0033D4  2202               	addwfc	___aldiv@dividend+1,f,c
  2893  0033D6  2203               	addwfc	___aldiv@dividend+2,f,c
  2894  0033D8  2204               	addwfc	___aldiv@dividend+3,f,c
  2895  0033DA  0E01               	movlw	1
  2896  0033DC  1A0B               	xorwf	___aldiv@sign,f,c
  2897  0033DE                     l1246:
  2898  0033DE  0E00               	movlw	0
  2899  0033E0  6E0C               	movwf	___aldiv@quotient,c
  2900  0033E2  0E00               	movlw	0
  2901  0033E4  6E0D               	movwf	___aldiv@quotient+1,c
  2902  0033E6  0E00               	movlw	0
  2903  0033E8  6E0E               	movwf	___aldiv@quotient+2,c
  2904  0033EA  0E00               	movlw	0
  2905  0033EC  6E0F               	movwf	___aldiv@quotient+3,c
  2906  0033EE  5008               	movf	___aldiv@divisor+3,w,c
  2907  0033F0  1005               	iorwf	___aldiv@divisor,w,c
  2908  0033F2  1006               	iorwf	___aldiv@divisor+1,w,c
  2909  0033F4  1007               	iorwf	___aldiv@divisor+2,w,c
  2910  0033F6  B4D8               	btfsc	status,2,c
  2911  0033F8  D02C               	goto	l1268
  2912  0033FA  6E09               	movwf	??___aldiv& (0+255),c
  2913  0033FC  0E01               	movlw	1
  2914  0033FE  6E0A               	movwf	___aldiv@counter,c
  2915  003400  5009               	movf	??___aldiv& (0+255),w,c
  2916  003402  D006               	goto	l1254
  2917  003404                     l1252:
  2918  003404  90D8               	bcf	status,0,c
  2919  003406  3605               	rlcf	___aldiv@divisor,f,c
  2920  003408  3606               	rlcf	___aldiv@divisor+1,f,c
  2921  00340A  3607               	rlcf	___aldiv@divisor+2,f,c
  2922  00340C  3608               	rlcf	___aldiv@divisor+3,f,c
  2923  00340E  2A0A               	incf	___aldiv@counter,f,c
  2924  003410                     l1254:
  2925  003410  AE08               	btfss	___aldiv@divisor+3,7,c
  2926  003412  D7F8               	goto	l1252
  2927  003414                     l1256:
  2928  003414  90D8               	bcf	status,0,c
  2929  003416  360C               	rlcf	___aldiv@quotient,f,c
  2930  003418  360D               	rlcf	___aldiv@quotient+1,f,c
  2931  00341A  360E               	rlcf	___aldiv@quotient+2,f,c
  2932  00341C  360F               	rlcf	___aldiv@quotient+3,f,c
  2933  00341E  5005               	movf	___aldiv@divisor,w,c
  2934  003420  5C01               	subwf	___aldiv@dividend,w,c
  2935  003422  5006               	movf	___aldiv@divisor+1,w,c
  2936  003424  5802               	subwfb	___aldiv@dividend+1,w,c
  2937  003426  5007               	movf	___aldiv@divisor+2,w,c
  2938  003428  5803               	subwfb	___aldiv@dividend+2,w,c
  2939  00342A  5008               	movf	___aldiv@divisor+3,w,c
  2940  00342C  5804               	subwfb	___aldiv@dividend+3,w,c
  2941  00342E  A0D8               	btfss	status,0,c
  2942  003430  D009               	goto	l1264
  2943  003432  5005               	movf	___aldiv@divisor,w,c
  2944  003434  5E01               	subwf	___aldiv@dividend,f,c
  2945  003436  5006               	movf	___aldiv@divisor+1,w,c
  2946  003438  5A02               	subwfb	___aldiv@dividend+1,f,c
  2947  00343A  5007               	movf	___aldiv@divisor+2,w,c
  2948  00343C  5A03               	subwfb	___aldiv@dividend+2,f,c
  2949  00343E  5008               	movf	___aldiv@divisor+3,w,c
  2950  003440  5A04               	subwfb	___aldiv@dividend+3,f,c
  2951  003442  800C               	bsf	___aldiv@quotient,0,c
  2952  003444                     l1264:
  2953  003444  90D8               	bcf	status,0,c
  2954  003446  3208               	rrcf	___aldiv@divisor+3,f,c
  2955  003448  3207               	rrcf	___aldiv@divisor+2,f,c
  2956  00344A  3206               	rrcf	___aldiv@divisor+1,f,c
  2957  00344C  3205               	rrcf	___aldiv@divisor,f,c
  2958  00344E  2E0A               	decfsz	___aldiv@counter,f,c
  2959  003450  D7E1               	goto	l1256
  2960  003452                     l1268:
  2961  003452  500B               	movf	___aldiv@sign,w,c
  2962  003454  B4D8               	btfsc	status,2,c
  2963  003456  D008               	goto	l1272
  2964  003458  1E0F               	comf	___aldiv@quotient+3,f,c
  2965  00345A  1E0E               	comf	___aldiv@quotient+2,f,c
  2966  00345C  1E0D               	comf	___aldiv@quotient+1,f,c
  2967  00345E  6C0C               	negf	___aldiv@quotient,c
  2968  003460  0E00               	movlw	0
  2969  003462  220D               	addwfc	___aldiv@quotient+1,f,c
  2970  003464  220E               	addwfc	___aldiv@quotient+2,f,c
  2971  003466  220F               	addwfc	___aldiv@quotient+3,f,c
  2972  003468                     l1272:
  2973  003468  C00C  F001         	movff	___aldiv@quotient,?___aldiv
  2974  00346C  C00D  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  2975  003470  C00E  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  2976  003474  C00F  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  2977  003478  0012               	return	
  2978  00347A                     __end_of___aldiv:
  2979                           	opt stack 0
  2980  0000                     tblptru	equ	0xFF8
  2981                           prodl	equ	0xFF3
  2982                           intcon	equ	0xFF2
  2983                           postinc0	equ	0xFEE
  2984                           wreg	equ	0xFE8
  2985                           status	equ	0xFD8
  2986                           tblptru	equ	0xFF8
  2987                           prodl	equ	0xFF3
  2988                           intcon	equ	0xFF2
  2989                           postinc0	equ	0xFEE
  2990                           wreg	equ	0xFE8
  2991                           status	equ	0xFD8
  2992                           
  2993                           	psect	rparam
  2994  0000                     tblptru	equ	0xFF8
  2995                           prodl	equ	0xFF3
  2996                           intcon	equ	0xFF2
  2997                           postinc0	equ	0xFEE
  2998                           wreg	equ	0xFE8
  2999                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         133
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     64      69
    BANK0           128      0     128
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___aldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                49    49      0    2528
                                             15 COMRAM    49    49      0
                            ___aldiv
                          _readMyADC
                       _setGainLevel
                           _setupSPI
 ---------------------------------------------------------------------------------
 (1) _setupSPI                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setGainLevel                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _readMyADC                                            5     3      2      30
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             15     7      8     263
                                              0 COMRAM    15     7      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___aldiv
   _readMyADC
   _setGainLevel
   _setupSPI

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0      80       4      100.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     40      45       1       54.3%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C5      11        0.0%
DATA                 0      0      C5      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Sat Jul 12 05:45:57 2014

                     l45 359A                       l54 367A                       l80 3840  
                     l68 376E                       l79 383E             __CFG_CP0$OFF 000000  
                    l200 3F84                      l202 3F9E                      l204 3FB8  
                    l302 3320                      l154 3CC0                      l219 335A  
                    l181 3E4A                      l183 3E64                      l194 3F36  
                    l179 3E30                      l196 3F50                      l198 3F6A  
                    l299 3316                      u425 3392                      u435 33C6  
                    u815 389C                      u855 38F0                      u785 3852  
                    u885 393C                      wreg 000FE8             __CFG_IESO$ON 000000  
           __CFG_FOSC$EC 000000              main@highPWM 002F              main@average 0027  
                   l1000 332E                     l1002 3332                     l1010 3340  
                   l1004 3336                     l1006 333A                     l1240 33AE  
                   l1402 36B0                     l1314 357A                     l1252 3404  
                   l1500 3878                     l1420 3706                     l1412 36E6  
                   l1324 35A4                     l1254 3410                     l1246 33DE  
                   l1502 387C                     l1422 370E                     l1406 36C8  
                   l1272 3468                     l1264 3444                     l1256 3414  
                   l1520 38CE                     l1504 3884                     l1432 373E  
                   l1440 3766                     l1610 3A66                     l1506 388C  
                   l1434 3746                     l1450 3784                     l1268 3452  
                   l1540 392A                     l1524 38DE                     l1516 38C2  
                   l1444 3770                     l1428 3724                     l1380 35CC  
                   l1710 3C00                     l1630 3AB4                     l1550 3962  
                   l1534 3916                     l1518 38C6                     l1462 37BC  
                   l1800 3D7C                     l1704 3BE6                     l1712 3C08  
                   l1624 3A9A                     l1632 3ABC                     l1552 3966  
                   l1536 391A                     l1448 377C                     l1810 3DA6  
                   l1650 3B04                     l1618 3A82                     l1554 396E  
                   l1538 3922                     l1458 37A8                     l1900 3F86  
                   l1644 3AEA                     l1652 3B0C                     l1484 3822  
                   l1806 3D96                     l1750 3CAE                     l1670 3B56  
                   l1638 3AD2                     l1558 397C                     l1582 39E2  
                   l1486 382A                     l1398 3694                     l1904 3FA0  
                   l1680 3B80                     l1664 3B3C                     l1672 3B5E  
                   l1736 3C6E                     l1914 3FD6                     l1850 3E66  
                   l1842 3E32                     l1834 3E0A                     l1690 3BAE  
                   l1658 3B24                     l1908 3FBA                     l1748 3CAA  
                   l1684 3B92                     l1692 3BB6                     l1846 3E4C  
                   l1838 3E18                     l1686 3B9A                     l1678 3B78  
                   l1880 3F06                     l1864 3EAA                     l1872 3ED6  
                   l1792 3D58                     l1856 3E82                     l1786 3D40  
                   l1778 3D24                     l1698 3BCE                     l1892 3F52  
                   l1884 3F1E                     l1876 3EEE                     l1868 3EC0  
                   l1796 3D6A                     l1896 3F6C                     l1888 3F38  
                   u1275 3C84            __CFG_FCMEN$ON 000000                     _main 347A  
                   prodl 000FF3                     start 0000            __CFG_FOSC2$ON 000000  
        __end_of___aldiv 347A                    ?_main 0001             main@midLevel 0014  
                  _T0CON 000FD5                    _TMR0H 000FD7                    _TMR0L 000FD6  
                  _PORTA 000F80                    _PORTB 000F81                    _PORTC 000F82  
                  _TRISA 000F92                    _TRISB 000F93                    _TRISC 000F94  
                  _SSPIF 007CF3             main@lowLevel 0016                    _randf 0045  
                  _randx 0041                    status 000FD8          __initialization 32E2  
           __end_of_main 3FF8       main@sequenceNumber 003E                   ??_main 0010  
          __activetblptr 000002            main@highLevel 0024            main@mainLevel 0018  
                 _ADCON0 000FC2                   _ADCON1 000FC1                   _ADCON2 000FC0  
                 _ADRESH 000FC4                   _ADRESL 000FC3                   _GODONE 007E11  
         __CFG_WDTEN$OFF 000000                   _TMR0IF 007F92                   _SSPBUF 000FC9  
         __CFG_XINST$OFF 000000                ??___aldiv 0009           __CFG_STVREN$ON 000000  
                 clear_0 32E8     main@currentGainLevel 002B         __end_of_setupSPI 32E2  
                 tblptru 000FF8            main@soundFlag 0026               __accesstop 0080  
__end_of__initialization 32F8           __pcstackCOMRAM 0001            ?_setGainLevel 0001  
    main@sequenceRepeats 0031        main@patternNumber 0038               __pbssBANK0 0080  
     __size_of_readMyADC 004A           main@brightness 0039           ??_setGainLevel 0001  
     readMyADC@ADCnumber 0005                  _SSP1BUF 000FC9                  _SSPCON1 000FC6  
                _SSPSTAT 000FC7                  __Hparam 0000                  __Lparam 0000  
              ?_setupSPI 0001                  ___aldiv 3372                  __pcinit 32E2  
                __ramtop 0400                  __ptext0 347A                  __ptext1 32D0  
                __ptext2 3302                  __ptext3 3328                  __ptext4 3372  
      __end_of_readMyADC 3372         ___aldiv@dividend 0001     end_of_initialization 32F8  
          __Lmediumconst 0000         _led_strip_colors 0080               ??_setupSPI 0001  
       ___aldiv@quotient 000C           main@stepNumber 003F                  postinc0 000FEE  
              _TRISBbits 000F93                _TRISCbits 000F94     __end_of_setGainLevel 3328  
             main@midPWM 0036          main@fadeCounter 0020               main@lowPWM 002D  
    start_initialization 32E2          main@clapCounter 0029              __pbssCOMRAM 0041  
    __CFG_CCP2MX$DEFAULT 000000                 ?___aldiv 0001        __size_of_setupSPI 0012  
  __size_of_setGainLevel 0026                _readMyADC 3328          ___aldiv@divisor 0005  
        ___aldiv@counter 000A                 _PIR1bits 000F9E         __CFG_WDTPS$32768 000000  
               _SSP1CON1 000FC6             _setGainLevel 3302          main@currentStep 003A  
              main@total 001A               ?_readMyADC 0001                 __Hrparam 0000  
               __Lrparam 0000         __size_of___aldiv 0108          main@sampleCount 001E  
        readMyADC@result 0003          main@tickCounter 0033             _SSP1CON1bits 000FC6  
          __size_of_main 0B7E                 _setupSPI 32D0                 main@mode 0035  
            ??_readMyADC 0003   main@soundDetectedCount 0022    setGainLevel@gainLevel 0001  
           ___aldiv@sign 000B             main@PWMcount 003C  
