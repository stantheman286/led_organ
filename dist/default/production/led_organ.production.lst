

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Sun Sep  7 00:58:01 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F24J10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    16  0000                     _ADCON0	set	4034
    17  0000                     _ADCON1	set	4033
    18  0000                     _ADCON2	set	4032
    19  0000                     _ADRESH	set	4036
    20  0000                     _ADRESL	set	4035
    21  0000                     _PIR1bits	set	3998
    22  0000                     _PORTA	set	3968
    23  0000                     _PORTB	set	3969
    24  0000                     _PORTBbits	set	3969
    25  0000                     _PORTC	set	3970
    26  0000                     _PORTCbits	set	3970
    27  0000                     _SSP1BUF	set	4041
    28  0000                     _SSP1CON1	set	4038
    29  0000                     _SSP1CON1bits	set	4038
    30  0000                     _SSPBUF	set	4041
    31  0000                     _SSPCON1	set	4038
    32  0000                     _SSPSTAT	set	4039
    33  0000                     _T0CON	set	4053
    34  0000                     _TMR0H	set	4055
    35  0000                     _TMR0L	set	4054
    36  0000                     _TRISA	set	3986
    37  0000                     _TRISB	set	3987
    38  0000                     _TRISC	set	3988
    39  0000                     _TRISCbits	set	3988
    40  0000                     _GODONE	set	32273
    41  0000                     _SSPIF	set	31987
    42  0000                     _TMR0IF	set	32658
    43                           
    44 ;;
    45 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
    46 ;;
    47 ;; *************** function _main *****************
    48 ;; Defined at:
    49 ;;		line 45 in file "main.c"
    50 ;; Parameters:    Size  Location     Type
    51 ;;		None
    52 ;; Auto vars:     Size  Location     Type
    53 ;;  total           4   19[COMRAM] long 
    54 ;;  stepNumber      2   62[COMRAM] int 
    55 ;;  PWMcount        2   59[COMRAM] int 
    56 ;;  currentStep     2   57[COMRAM] int 
    57 ;;  midPWM          2   53[COMRAM] int 
    58 ;;  tickCounter     2   50[COMRAM] int 
    59 ;;  sequenceRepe    2   48[COMRAM] int 
    60 ;;  highPWM         2   46[COMRAM] int 
    61 ;;  lowPWM          2   44[COMRAM] int 
    62 ;;  currentGainL    2   42[COMRAM] int 
    63 ;;  clapCounter     2   40[COMRAM] int 
    64 ;;  average         2   38[COMRAM] int 
    65 ;;  highLevel       2   35[COMRAM] int 
    66 ;;  soundDetecte    2   33[COMRAM] int 
    67 ;;  fadeCounter     2   31[COMRAM] int 
    68 ;;  sampleCount     2   29[COMRAM] int 
    69 ;;  mainLevel       2   27[COMRAM] int 
    70 ;;  lowLevel        2   25[COMRAM] int 
    71 ;;  midLevel        2   23[COMRAM] int 
    72 ;;  sequenceNumb    1   61[COMRAM] unsigned char 
    73 ;;  brightness      1   56[COMRAM] unsigned char 
    74 ;;  patternNumbe    1   55[COMRAM] unsigned char 
    75 ;;  mode            1   52[COMRAM] unsigned char 
    76 ;;  soundFlag       1   37[COMRAM] unsigned char 
    77 ;; Return value:  Size  Location     Type
    78 ;;		None               void
    79 ;; Registers used:
    80 ;;		wreg, status,2, status,0, prodl, cstack
    81 ;; Tracked objects:
    82 ;;		On entry : 0/0
    83 ;;		On exit  : 0/0
    84 ;;		Unchanged: 0/0
    85 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
    86 ;;      Params:         0       0       0       0       0
    87 ;;      Locals:        45       0       0       0       0
    88 ;;      Temps:          4       0       0       0       0
    89 ;;      Totals:        49       0       0       0       0
    90 ;;Total ram usage:       49 bytes
    91 ;; Hardware stack levels required when called:    1
    92 ;; This function calls:
    93 ;;		___aldiv
    94 ;;		_readMyADC
    95 ;;		_setGainLevel
    96 ;;		_setupSPI
    97 ;; This function is called by:
    98 ;;		Startup code after reset
    99 ;; This function uses a non-reentrant model
   100 ;;
   101                           
   102                           	psect	text0
   103  00341C                     __ptext0:
   104                           	opt stack 0
   105  00341C                     _main:
   106                           	opt stack 30
   107                           
   108                           ;main.c: 50: ADCON1 = 0x0B;
   109                           
   110                           ;incstack = 0
   111  00341C  0E0B               	movlw	11
   112  00341E  6EC1               	movwf	4033,c	;volatile
   113                           
   114                           ;main.c: 54: ADCON0 = 0x01;
   115  003420  0E01               	movlw	1
   116  003422  6EC2               	movwf	4034,c	;volatile
   117                           
   118                           ;main.c: 57: ADCON2 = 0xB5;
   119  003424  0EB5               	movlw	181
   120  003426  6EC0               	movwf	4032,c	;volatile
   121                           
   122                           ;main.c: 60: TRISA = 0x0F;
   123  003428  0E0F               	movlw	15
   124  00342A  6E92               	movwf	3986,c	;volatile
   125                           
   126                           ;main.c: 61: TRISB = 0x00;
   127  00342C  0E00               	movlw	0
   128  00342E  6E93               	movwf	3987,c	;volatile
   129                           
   130                           ;main.c: 62: TRISC = 0x00;
   131  003430  0E00               	movlw	0
   132  003432  6E94               	movwf	3988,c	;volatile
   133                           
   134                           ;main.c: 69: PORTA = 0x00;
   135  003434  0E00               	movlw	0
   136  003436  6E80               	movwf	3968,c	;volatile
   137                           
   138                           ;main.c: 70: PORTB = 0x00;
   139  003438  0E00               	movlw	0
   140  00343A  6E81               	movwf	3969,c	;volatile
   141                           
   142                           ;main.c: 71: PORTC = 0x00;
   143  00343C  0E00               	movlw	0
   144  00343E  6E82               	movwf	3970,c	;volatile
   145                           
   146                           ;main.c: 78: setupSPI();
   147  003440  EC37  F019         	call	_setupSPI	;wreg free
   148                           
   149                           ;main.c: 81: int highLevel = 0;
   150  003444  0E00               	movlw	0
   151  003446  6E25               	movwf	main@highLevel+1,c
   152  003448  0E00               	movlw	0
   153  00344A  6E24               	movwf	main@highLevel,c
   154                           
   155                           ;main.c: 82: int midLevel = 0;
   156  00344C  0E00               	movlw	0
   157  00344E  6E19               	movwf	main@midLevel+1,c
   158  003450  0E00               	movlw	0
   159  003452  6E18               	movwf	main@midLevel,c
   160                           
   161                           ;main.c: 83: int lowLevel = 0;
   162  003454  0E00               	movlw	0
   163  003456  6E1B               	movwf	main@lowLevel+1,c
   164  003458  0E00               	movlw	0
   165  00345A  6E1A               	movwf	main@lowLevel,c
   166                           
   167                           ;main.c: 84: int mainLevel = 0;
   168  00345C  0E00               	movlw	0
   169  00345E  6E1D               	movwf	main@mainLevel+1,c
   170  003460  0E00               	movlw	0
   171  003462  6E1C               	movwf	main@mainLevel,c
   172                           
   173                           ;main.c: 97: TMR0IF = 0;
   174  003464  94F2               	bcf	intcon,2,c	;volatile
   175                           
   176                           ;main.c: 98: TMR0H = 0xF9;
   177  003466  0EF9               	movlw	249
   178  003468  6ED7               	movwf	4055,c	;volatile
   179                           
   180                           ;main.c: 99: TMR0L = 0xE4;
   181  00346A  0EE4               	movlw	228
   182  00346C  6ED6               	movwf	4054,c	;volatile
   183                           
   184                           ;main.c: 101: T0CON = 0x84;
   185  00346E  0E84               	movlw	132
   186  003470  6ED5               	movwf	4053,c	;volatile
   187                           
   188                           ;main.c: 104: int currentGainLevel = 80;
   189  003472  0E00               	movlw	0
   190  003474  6E2C               	movwf	main@currentGainLevel+1,c
   191  003476  0E50               	movlw	80
   192  003478  6E2B               	movwf	main@currentGainLevel,c
   193                           
   194                           ;main.c: 106: setGainLevel(currentGainLevel);
   195  00347A  502B               	movf	main@currentGainLevel,w,c
   196  00347C  EC51  F019         	call	_setGainLevel
   197                           
   198                           ;main.c: 109: int sampleCount = 0;
   199  003480  0E00               	movlw	0
   200  003482  6E1F               	movwf	main@sampleCount+1,c
   201  003484  0E00               	movlw	0
   202  003486  6E1E               	movwf	main@sampleCount,c
   203                           
   204                           ;main.c: 110: long total = 0;
   205  003488  0E00               	movlw	0
   206  00348A  6E14               	movwf	main@total,c
   207  00348C  0E00               	movlw	0
   208  00348E  6E15               	movwf	main@total+1,c
   209  003490  0E00               	movlw	0
   210  003492  6E16               	movwf	main@total+2,c
   211  003494  0E00               	movlw	0
   212  003496  6E17               	movwf	main@total+3,c
   213                           
   214                           ;main.c: 111: int average = 0;
   215  003498  0E00               	movlw	0
   216  00349A  6E28               	movwf	main@average+1,c
   217  00349C  0E00               	movlw	0
   218  00349E  6E27               	movwf	main@average,c
   219                           
   220                           ;main.c: 114: int PWMcount = 0;
   221  0034A0  0E00               	movlw	0
   222  0034A2  6E3D               	movwf	main@PWMcount+1,c
   223  0034A4  0E00               	movlw	0
   224  0034A6  6E3C               	movwf	main@PWMcount,c
   225                           
   226                           ;main.c: 115: int lowPWM = 0;
   227  0034A8  0E00               	movlw	0
   228  0034AA  6E2E               	movwf	main@lowPWM+1,c
   229  0034AC  0E00               	movlw	0
   230  0034AE  6E2D               	movwf	main@lowPWM,c
   231                           
   232                           ;main.c: 116: int midPWM = 0;
   233  0034B0  0E00               	movlw	0
   234  0034B2  6E37               	movwf	main@midPWM+1,c
   235  0034B4  0E00               	movlw	0
   236  0034B6  6E36               	movwf	main@midPWM,c
   237                           
   238                           ;main.c: 117: int highPWM = 0;
   239  0034B8  0E00               	movlw	0
   240  0034BA  6E30               	movwf	main@highPWM+1,c
   241  0034BC  0E00               	movlw	0
   242  0034BE  6E2F               	movwf	main@highPWM,c
   243                           
   244                           ;main.c: 118: int fadeCounter = 0;
   245  0034C0  0E00               	movlw	0
   246  0034C2  6E21               	movwf	main@fadeCounter+1,c
   247  0034C4  0E00               	movlw	0
   248  0034C6  6E20               	movwf	main@fadeCounter,c
   249                           
   250                           ;main.c: 121: unsigned char mode = 0;
   251  0034C8  6E10               	movwf	??_main& (0+255),c
   252  0034CA  0E00               	movlw	0
   253  0034CC  6E35               	movwf	main@mode,c
   254  0034CE  5010               	movf	??_main& (0+255),w,c
   255                           
   256                           ;main.c: 124: int tickCounter = 0;
   257  0034D0  0E00               	movlw	0
   258  0034D2  6E34               	movwf	main@tickCounter+1,c
   259  0034D4  0E00               	movlw	0
   260  0034D6  6E33               	movwf	main@tickCounter,c
   261                           
   262                           ;main.c: 127: unsigned char patternNumber = 0;
   263  0034D8  6E10               	movwf	??_main& (0+255),c
   264  0034DA  0E00               	movlw	0
   265  0034DC  6E38               	movwf	main@patternNumber,c
   266  0034DE  5010               	movf	??_main& (0+255),w,c
   267                           
   268                           ;main.c: 128: unsigned char sequenceNumber = 0;
   269  0034E0  6E10               	movwf	??_main& (0+255),c
   270  0034E2  0E00               	movlw	0
   271  0034E4  6E3E               	movwf	main@sequenceNumber,c
   272  0034E6  5010               	movf	??_main& (0+255),w,c
   273                           
   274                           ;main.c: 129: int stepNumber = 0;
   275  0034E8  0E00               	movlw	0
   276  0034EA  6E40               	movwf	main@stepNumber+1,c
   277  0034EC  0E00               	movlw	0
   278  0034EE  6E3F               	movwf	main@stepNumber,c
   279                           
   280                           ;main.c: 130: int currentStep = 0;
   281  0034F0  0E00               	movlw	0
   282  0034F2  6E3B               	movwf	main@currentStep+1,c
   283  0034F4  0E00               	movlw	0
   284  0034F6  6E3A               	movwf	main@currentStep,c
   285                           
   286                           ;main.c: 131: unsigned char brightness = 0;
   287  0034F8  6E10               	movwf	??_main& (0+255),c
   288  0034FA  0E00               	movlw	0
   289  0034FC  6E39               	movwf	main@brightness,c
   290  0034FE  5010               	movf	??_main& (0+255),w,c
   291                           
   292                           ;main.c: 132: int sequenceRepeats = 0;
   293  003500  0E00               	movlw	0
   294  003502  6E32               	movwf	main@sequenceRepeats+1,c
   295  003504  0E00               	movlw	0
   296  003506  6E31               	movwf	main@sequenceRepeats,c
   297                           
   298                           ;main.c: 135: int soundDetectedCount = 0;
   299  003508  0E00               	movlw	0
   300  00350A  6E23               	movwf	main@soundDetectedCount+1,c
   301  00350C  0E00               	movlw	0
   302  00350E  6E22               	movwf	main@soundDetectedCount,c
   303                           
   304                           ;main.c: 136: unsigned char soundFlag = 0;
   305  003510  6E10               	movwf	??_main& (0+255),c
   306  003512  0E00               	movlw	0
   307  003514  6E26               	movwf	main@soundFlag,c
   308  003516  5010               	movf	??_main& (0+255),w,c
   309                           
   310                           ;main.c: 137: int clapCounter = 0;
   311  003518  0E00               	movlw	0
   312  00351A  6E2A               	movwf	main@clapCounter+1,c
   313  00351C  0E00               	movlw	0
   314  00351E  6E29               	movwf	main@clapCounter,c
   315  003520                     l1318:
   316                           
   317                           ;main.c: 140: {
   318                           ;main.c: 147: if (TMR0IF == 1)
   319  003520  A4F2               	btfss	intcon,2,c	;volatile
   320  003522  D013               	goto	l1328
   321                           
   322                           ;main.c: 148: {
   323                           ;main.c: 149: tickCounter++;
   324  003524  4A33               	infsnz	main@tickCounter,f,c
   325  003526  2A34               	incf	main@tickCounter+1,f,c
   326                           
   327                           ;main.c: 150: if (tickCounter > 1000) tickCounter = 0;
   328  003528  5034               	movf	main@tickCounter+1,w,c
   329  00352A  0A80               	xorlw	128
   330  00352C  0F7D               	addlw	-131
   331  00352E  0EE9               	movlw	233
   332  003530  B4D8               	btfsc	status,2,c
   333  003532  5C33               	subwf	main@tickCounter,w,c
   334  003534  A0D8               	btfss	status,0,c
   335  003536  D004               	goto	l45
   336  003538  0E00               	movlw	0
   337  00353A  6E34               	movwf	main@tickCounter+1,c
   338  00353C  0E00               	movlw	0
   339  00353E  6E33               	movwf	main@tickCounter,c
   340  003540                     l45:
   341                           
   342                           ;main.c: 153: TMR0H = 0xF9;
   343  003540  0EF9               	movlw	249
   344  003542  6ED7               	movwf	4055,c	;volatile
   345                           
   346                           ;main.c: 154: TMR0L = 0xE4;
   347  003544  0EE4               	movlw	228
   348  003546  6ED6               	movwf	4054,c	;volatile
   349                           
   350                           ;main.c: 155: TMR0IF = 0;
   351  003548  94F2               	bcf	intcon,2,c	;volatile
   352  00354A                     l1328:
   353                           
   354                           ;main.c: 156: }
   355                           ;main.c: 159: highLevel = readMyADC(0);
   356  00354A  0E00               	movlw	0
   357  00354C  EC64  F019         	call	_readMyADC
   358  003550  C001  F024         	movff	?_readMyADC,main@highLevel
   359  003554  C002  F025         	movff	?_readMyADC+1,main@highLevel+1
   360                           
   361                           ;main.c: 160: midLevel = readMyADC(1);
   362  003558  0E01               	movlw	1
   363  00355A  EC64  F019         	call	_readMyADC
   364  00355E  C001  F018         	movff	?_readMyADC,main@midLevel
   365  003562  C002  F019         	movff	?_readMyADC+1,main@midLevel+1
   366                           
   367                           ;main.c: 161: lowLevel = readMyADC(2);
   368  003566  0E02               	movlw	2
   369  003568  EC64  F019         	call	_readMyADC
   370  00356C  C001  F01A         	movff	?_readMyADC,main@lowLevel
   371  003570  C002  F01B         	movff	?_readMyADC+1,main@lowLevel+1
   372                           
   373                           ;main.c: 165: if (1 == 1 && 0 == 0)
   374  003574  0E03               	movlw	3
   375  003576  EC64  F019         	call	_readMyADC
   376  00357A  C001  F01C         	movff	?_readMyADC,main@mainLevel
   377  00357E  C002  F01D         	movff	?_readMyADC+1,main@mainLevel+1
   378                           
   379                           ;main.c: 166: {
   380                           ;main.c: 167: if (mode != 0)
   381  003582  5035               	movf	main@mode,w,c
   382  003584  B4D8               	btfsc	status,2,c
   383  003586  D022               	goto	l1390
   384                           
   385                           ;main.c: 168: {
   386                           ;main.c: 169: mode = 0;
   387  003588  6E10               	movwf	??_main& (0+255),c
   388  00358A  0E00               	movlw	0
   389  00358C  6E35               	movwf	main@mode,c
   390  00358E  5010               	movf	??_main& (0+255),w,c
   391                           
   392                           ;main.c: 172: PORTBbits.RB3 = 0;
   393  003590  9681               	bcf	3969,3,c	;volatile
   394                           
   395                           ;main.c: 173: PORTBbits.RB4 = 0;
   396  003592  9881               	bcf	3969,4,c	;volatile
   397                           
   398                           ;main.c: 174: PORTBbits.RB5 = 0;
   399  003594  9A81               	bcf	3969,5,c	;volatile
   400                           
   401                           ;main.c: 175: PORTBbits.RB0 = 0;
   402  003596  9081               	bcf	3969,0,c	;volatile
   403                           
   404                           ;main.c: 176: PORTBbits.RB1 = 0;
   405  003598  9281               	bcf	3969,1,c	;volatile
   406                           
   407                           ;main.c: 177: PORTBbits.RB2 = 0;
   408  00359A  9481               	bcf	3969,2,c	;volatile
   409                           
   410                           ;main.c: 180: patternNumber = 0;
   411  00359C  6E10               	movwf	??_main& (0+255),c
   412  00359E  0E00               	movlw	0
   413  0035A0  6E38               	movwf	main@patternNumber,c
   414  0035A2  5010               	movf	??_main& (0+255),w,c
   415                           
   416                           ;main.c: 181: sequenceNumber = 0;
   417  0035A4  6E10               	movwf	??_main& (0+255),c
   418  0035A6  0E00               	movlw	0
   419  0035A8  6E3E               	movwf	main@sequenceNumber,c
   420  0035AA  5010               	movf	??_main& (0+255),w,c
   421                           
   422                           ;main.c: 182: stepNumber = 0;
   423  0035AC  0E00               	movlw	0
   424  0035AE  6E40               	movwf	main@stepNumber+1,c
   425  0035B0  0E00               	movlw	0
   426  0035B2  6E3F               	movwf	main@stepNumber,c
   427                           
   428                           ;main.c: 183: currentStep = 0;
   429  0035B4  0E00               	movlw	0
   430  0035B6  6E3B               	movwf	main@currentStep+1,c
   431  0035B8  0E00               	movlw	0
   432  0035BA  6E3A               	movwf	main@currentStep,c
   433                           
   434                           ;main.c: 184: brightness = 0;
   435  0035BC  6E10               	movwf	??_main& (0+255),c
   436  0035BE  0E00               	movlw	0
   437  0035C0  6E39               	movwf	main@brightness,c
   438  0035C2  5010               	movf	??_main& (0+255),w,c
   439                           
   440                           ;main.c: 185: sequenceRepeats = 0;
   441  0035C4  0E00               	movlw	0
   442  0035C6  6E32               	movwf	main@sequenceRepeats+1,c
   443  0035C8  0E00               	movlw	0
   444  0035CA  6E31               	movwf	main@sequenceRepeats,c
   445  0035CC                     l1390:
   446                           
   447                           ;main.c: 218: }
   448                           ;main.c: 219: }
   449                           ;main.c: 222: total += mainLevel;
   450  0035CC  C01C  F010         	movff	main@mainLevel,??_main
   451  0035D0  C01D  F011         	movff	main@mainLevel+1,??_main+1
   452  0035D4  0E00               	movlw	0
   453  0035D6  BE11               	btfsc	(??_main+1)& (0+255),7,c
   454  0035D8  0EFF               	movlw	255
   455  0035DA  6E12               	movwf	(??_main+2)& (0+255),c
   456  0035DC  6E13               	movwf	(??_main+3)& (0+255),c
   457  0035DE  5010               	movf	??_main,w,c
   458  0035E0  2614               	addwf	main@total,f,c
   459  0035E2  5011               	movf	??_main+1,w,c
   460  0035E4  2215               	addwfc	main@total+1,f,c
   461  0035E6  5012               	movf	??_main+2,w,c
   462  0035E8  2216               	addwfc	main@total+2,f,c
   463  0035EA  5013               	movf	??_main+3,w,c
   464  0035EC  2217               	addwfc	main@total+3,f,c
   465                           
   466                           ;main.c: 223: sampleCount++;
   467  0035EE  4A1E               	infsnz	main@sampleCount,f,c
   468  0035F0  2A1F               	incf	main@sampleCount+1,f,c
   469                           
   470                           ;main.c: 225: if (sampleCount == 200)
   471  0035F2  501E               	movf	main@sampleCount,w,c
   472  0035F4  0AC8               	xorlw	200
   473  0035F6  101F               	iorwf	main@sampleCount+1,w,c
   474  0035F8  A4D8               	btfss	status,2,c
   475  0035FA  D075               	goto	l1422
   476                           
   477                           ;main.c: 226: {
   478                           ;main.c: 227: average = total / sampleCount;
   479  0035FC  C014  F001         	movff	main@total,___aldiv@dividend
   480  003600  C015  F002         	movff	main@total+1,___aldiv@dividend+1
   481  003604  C016  F003         	movff	main@total+2,___aldiv@dividend+2
   482  003608  C017  F004         	movff	main@total+3,___aldiv@dividend+3
   483  00360C  C01E  F005         	movff	main@sampleCount,___aldiv@divisor
   484  003610  C01F  F006         	movff	main@sampleCount+1,___aldiv@divisor+1
   485  003614  0E00               	movlw	0
   486  003616  BE06               	btfsc	___aldiv@divisor+1,7,c
   487  003618  0EFF               	movlw	-1
   488  00361A  6E07               	movwf	___aldiv@divisor+2,c
   489  00361C  6E08               	movwf	___aldiv@divisor+3,c
   490  00361E  EC8A  F019         	call	___aldiv	;wreg free
   491  003622  C001  F010         	movff	?___aldiv,??_main
   492  003626  C002  F011         	movff	?___aldiv+1,??_main+1
   493  00362A  C003  F012         	movff	?___aldiv+2,??_main+2
   494  00362E  C004  F013         	movff	?___aldiv+3,??_main+3
   495  003632  C010  F027         	movff	??_main,main@average
   496  003636  C011  F028         	movff	??_main+1,main@average+1
   497                           
   498                           ;main.c: 230: if (currentGainLevel <= 250 && currentGainLevel >= 10)
   499  00363A  502C               	movf	main@currentGainLevel+1,w,c
   500  00363C  0A80               	xorlw	128
   501  00363E  6EF3               	movwf	prodl,c
   502  003640  0E80               	movlw	128
   503  003642  5CF3               	subwf	prodl,w,c
   504  003644  0EFB               	movlw	251
   505  003646  B4D8               	btfsc	status,2,c
   506  003648  5C2B               	subwf	main@currentGainLevel,w,c
   507  00364A  B0D8               	btfsc	status,0,c
   508  00364C  D023               	goto	l1408
   509  00364E  502C               	movf	main@currentGainLevel+1,w,c
   510  003650  0A80               	xorlw	128
   511  003652  0F80               	addlw	-128
   512  003654  0E0A               	movlw	10
   513  003656  B4D8               	btfsc	status,2,c
   514  003658  5C2B               	subwf	main@currentGainLevel,w,c
   515  00365A  A0D8               	btfss	status,0,c
   516  00365C  D01B               	goto	l1408
   517                           
   518                           ;main.c: 231: {
   519                           ;main.c: 232: if (average < 100) currentGainLevel += 4;
   520  00365E  5028               	movf	main@average+1,w,c
   521  003660  0A80               	xorlw	128
   522  003662  6EF3               	movwf	prodl,c
   523  003664  0E80               	movlw	128
   524  003666  5CF3               	subwf	prodl,w,c
   525  003668  0E64               	movlw	100
   526  00366A  B4D8               	btfsc	status,2,c
   527  00366C  5C27               	subwf	main@average,w,c
   528  00366E  B0D8               	btfsc	status,0,c
   529  003670  D004               	goto	l54
   530  003672  0E04               	movlw	4
   531  003674  262B               	addwf	main@currentGainLevel,f,c
   532  003676  0E00               	movlw	0
   533  003678  222C               	addwfc	main@currentGainLevel+1,f,c
   534  00367A                     l54:
   535                           
   536                           ;main.c: 233: if (average > 100) currentGainLevel -= 4;
   537  00367A  5028               	movf	main@average+1,w,c
   538  00367C  0A80               	xorlw	128
   539  00367E  0F80               	addlw	-128
   540  003680  0E65               	movlw	101
   541  003682  B4D8               	btfsc	status,2,c
   542  003684  5C27               	subwf	main@average,w,c
   543  003686  A0D8               	btfss	status,0,c
   544  003688  D01F               	goto	l1416
   545  00368A  0EFC               	movlw	252
   546  00368C  262B               	addwf	main@currentGainLevel,f,c
   547  00368E  0EFF               	movlw	255
   548  003690  222C               	addwfc	main@currentGainLevel+1,f,c
   549  003692  D01A               	goto	l1416
   550  003694                     l1408:
   551                           
   552                           ;main.c: 235: else
   553                           ;main.c: 236: {
   554                           ;main.c: 237: if (currentGainLevel < 10) currentGainLevel = 10 + 1;
   555  003694  502C               	movf	main@currentGainLevel+1,w,c
   556  003696  0A80               	xorlw	128
   557  003698  6EF3               	movwf	prodl,c
   558  00369A  0E80               	movlw	128
   559  00369C  5CF3               	subwf	prodl,w,c
   560  00369E  0E0A               	movlw	10
   561  0036A0  B4D8               	btfsc	status,2,c
   562  0036A2  5C2B               	subwf	main@currentGainLevel,w,c
   563  0036A4  B0D8               	btfsc	status,0,c
   564  0036A6  D004               	goto	l1412
   565  0036A8  0E00               	movlw	0
   566  0036AA  6E2C               	movwf	main@currentGainLevel+1,c
   567  0036AC  0E0B               	movlw	11
   568  0036AE  6E2B               	movwf	main@currentGainLevel,c
   569  0036B0                     l1412:
   570                           
   571                           ;main.c: 238: if (currentGainLevel > 250) currentGainLevel = 250 - 1;
   572  0036B0  502C               	movf	main@currentGainLevel+1,w,c
   573  0036B2  0A80               	xorlw	128
   574  0036B4  0F80               	addlw	-128
   575  0036B6  0EFB               	movlw	251
   576  0036B8  B4D8               	btfsc	status,2,c
   577  0036BA  5C2B               	subwf	main@currentGainLevel,w,c
   578  0036BC  A0D8               	btfss	status,0,c
   579  0036BE  D004               	goto	l1416
   580  0036C0  0E00               	movlw	0
   581  0036C2  6E2C               	movwf	main@currentGainLevel+1,c
   582  0036C4  0EF9               	movlw	249
   583  0036C6  6E2B               	movwf	main@currentGainLevel,c
   584  0036C8                     l1416:
   585                           
   586                           ;main.c: 239: }
   587                           ;main.c: 241: setGainLevel(currentGainLevel);
   588  0036C8  502B               	movf	main@currentGainLevel,w,c
   589  0036CA  EC51  F019         	call	_setGainLevel
   590                           
   591                           ;main.c: 243: sampleCount = 0;
   592  0036CE  0E00               	movlw	0
   593  0036D0  6E1F               	movwf	main@sampleCount+1,c
   594  0036D2  0E00               	movlw	0
   595  0036D4  6E1E               	movwf	main@sampleCount,c
   596                           
   597                           ;main.c: 244: total = 0;
   598  0036D6  0E00               	movlw	0
   599  0036D8  6E14               	movwf	main@total,c
   600  0036DA  0E00               	movlw	0
   601  0036DC  6E15               	movwf	main@total+1,c
   602  0036DE  0E00               	movlw	0
   603  0036E0  6E16               	movwf	main@total+2,c
   604  0036E2  0E00               	movlw	0
   605  0036E4  6E17               	movwf	main@total+3,c
   606  0036E6                     l1422:
   607                           
   608                           ;main.c: 245: }
   609                           ;main.c: 249: if (mode == 1)
   610  0036E6  0435               	decf	main@mode,w,c
   611  0036E8  A4D8               	btfss	status,2,c
   612  0036EA  D04C               	goto	l1460
   613                           
   614                           ;main.c: 250: {
   615                           ;main.c: 251: if (soundFlag == 0)
   616  0036EC  6626               	tstfsz	main@soundFlag,c
   617  0036EE  D01A               	goto	l1438
   618                           
   619                           ;main.c: 252: {
   620                           ;main.c: 253: if (average >= 80) soundDetectedCount++; else soundDetectedCount = 0;
   621  0036F0  5028               	movf	main@average+1,w,c
   622  0036F2  0A80               	xorlw	128
   623  0036F4  0F80               	addlw	-128
   624  0036F6  0E50               	movlw	80
   625  0036F8  B4D8               	btfsc	status,2,c
   626  0036FA  5C27               	subwf	main@average,w,c
   627  0036FC  A0D8               	btfss	status,0,c
   628  0036FE  D003               	goto	l1430
   629  003700  4A22               	infsnz	main@soundDetectedCount,f,c
   630  003702  2A23               	incf	main@soundDetectedCount+1,f,c
   631  003704  D004               	goto	l1432
   632  003706                     l1430:
   633  003706  0E00               	movlw	0
   634  003708  6E23               	movwf	main@soundDetectedCount+1,c
   635  00370A  0E00               	movlw	0
   636  00370C  6E22               	movwf	main@soundDetectedCount,c
   637  00370E                     l1432:
   638                           
   639                           ;main.c: 254: if (soundDetectedCount > 1500)
   640  00370E  5023               	movf	main@soundDetectedCount+1,w,c
   641  003710  0A80               	xorlw	128
   642  003712  0F7B               	addlw	-133
   643  003714  0EDD               	movlw	221
   644  003716  B4D8               	btfsc	status,2,c
   645  003718  5C22               	subwf	main@soundDetectedCount,w,c
   646  00371A  A0D8               	btfss	status,0,c
   647  00371C  D024               	goto	l1450
   648                           
   649                           ;main.c: 255: {
   650                           ;main.c: 256: soundFlag = 1;
   651  00371E  6E10               	movwf	??_main& (0+255),c
   652  003720  0E01               	movlw	1
   653  003722  D01B               	goto	L1
   654  003724                     l1438:
   655                           
   656                           ;main.c: 260: else
   657                           ;main.c: 261: {
   658                           ;main.c: 262: if (average < 50) soundDetectedCount++; else soundDetectedCount = 0;
   659  003724  5028               	movf	main@average+1,w,c
   660  003726  0A80               	xorlw	128
   661  003728  6EF3               	movwf	prodl,c
   662  00372A  0E80               	movlw	128
   663  00372C  5CF3               	subwf	prodl,w,c
   664  00372E  0E32               	movlw	50
   665  003730  B4D8               	btfsc	status,2,c
   666  003732  5C27               	subwf	main@average,w,c
   667  003734  B0D8               	btfsc	status,0,c
   668  003736  D003               	goto	l1442
   669  003738  4A22               	infsnz	main@soundDetectedCount,f,c
   670  00373A  2A23               	incf	main@soundDetectedCount+1,f,c
   671  00373C  D004               	goto	l1444
   672  00373E                     l1442:
   673  00373E  0E00               	movlw	0
   674  003740  6E23               	movwf	main@soundDetectedCount+1,c
   675  003742  0E00               	movlw	0
   676  003744  6E22               	movwf	main@soundDetectedCount,c
   677  003746                     l1444:
   678                           
   679                           ;main.c: 263: if (soundDetectedCount > 10000)
   680  003746  5023               	movf	main@soundDetectedCount+1,w,c
   681  003748  0A80               	xorlw	128
   682  00374A  0F59               	addlw	-167
   683  00374C  0E11               	movlw	17
   684  00374E  B4D8               	btfsc	status,2,c
   685  003750  5C22               	subwf	main@soundDetectedCount,w,c
   686  003752  A0D8               	btfss	status,0,c
   687  003754  D008               	goto	l1450
   688                           
   689                           ;main.c: 264: {
   690                           ;main.c: 265: soundFlag = 0;
   691  003756  6E10               	movwf	??_main& (0+255),c
   692  003758  0E00               	movlw	0
   693  00375A                     L1:
   694  00375A  6E26               	movwf	main@soundFlag,c
   695  00375C  5010               	movf	??_main& (0+255),w,c
   696                           
   697                           ;main.c: 266: soundDetectedCount = 0;
   698  00375E  0E00               	movlw	0
   699  003760  6E23               	movwf	main@soundDetectedCount+1,c
   700  003762  0E00               	movlw	0
   701  003764  6E22               	movwf	main@soundDetectedCount,c
   702  003766                     l1450:
   703                           
   704                           ;main.c: 267: }
   705                           ;main.c: 268: }
   706                           ;main.c: 270: if (soundFlag == 0) PORTBbits.RB3 = 1; else PORTBbits.RB3 = 0;
   707  003766  6626               	tstfsz	main@soundFlag,c
   708  003768  D002               	goto	l68
   709  00376A  8681               	bsf	3969,3,c	;volatile
   710  00376C  D001               	goto	l1454
   711  00376E                     l68:
   712  00376E  9681               	bcf	3969,3,c	;volatile
   713  003770                     l1454:
   714                           
   715                           ;main.c: 273: if (soundFlag == 1) mode = 2; else mode = 0;
   716  003770  0426               	decf	main@soundFlag,w,c
   717  003772  A4D8               	btfss	status,2,c
   718  003774  D003               	goto	l1458
   719  003776  6E10               	movwf	??_main& (0+255),c
   720  003778  0E02               	movlw	2
   721  00377A  D002               	goto	L2
   722  00377C                     l1458:
   723  00377C  6E10               	movwf	??_main& (0+255),c
   724  00377E  0E00               	movlw	0
   725  003780                     L2:
   726  003780  6E35               	movwf	main@mode,c
   727  003782  5010               	movf	??_main& (0+255),w,c
   728  003784                     l1460:
   729                           
   730                           ;main.c: 274: }
   731                           ;main.c: 277: if (mode == 0)
   732  003784  6635               	tstfsz	main@mode,c
   733  003786  D37D               	goto	l1866
   734                           
   735                           ;main.c: 278: {
   736                           ;main.c: 280: if ((highLevel > 600) && (clapCounter == 0))
   737  003788  5025               	movf	main@highLevel+1,w,c
   738  00378A  0A80               	xorlw	128
   739  00378C  0F7E               	addlw	-130
   740  00378E  0E59               	movlw	89
   741  003790  B4D8               	btfsc	status,2,c
   742  003792  5C24               	subwf	main@highLevel,w,c
   743  003794  A0D8               	btfss	status,0,c
   744  003796  D008               	goto	l1468
   745  003798  502A               	movf	main@clapCounter+1,w,c
   746  00379A  1029               	iorwf	main@clapCounter,w,c
   747  00379C  A4D8               	btfss	status,2,c
   748  00379E  D004               	goto	l1468
   749                           
   750                           ;main.c: 281: {
   751                           ;main.c: 282: clapCounter = 1;
   752  0037A0  0E00               	movlw	0
   753  0037A2  6E2A               	movwf	main@clapCounter+1,c
   754  0037A4  0E01               	movlw	1
   755  0037A6  6E29               	movwf	main@clapCounter,c
   756  0037A8                     l1468:
   757                           
   758                           ;main.c: 283: }
   759                           ;main.c: 285: if (clapCounter > 0) clapCounter++;
   760  0037A8  502A               	movf	main@clapCounter+1,w,c
   761  0037AA  0A80               	xorlw	128
   762  0037AC  0F80               	addlw	-128
   763  0037AE  0E01               	movlw	1
   764  0037B0  B4D8               	btfsc	status,2,c
   765  0037B2  5C29               	subwf	main@clapCounter,w,c
   766  0037B4  A0D8               	btfss	status,0,c
   767  0037B6  D002               	goto	l1472
   768  0037B8  4A29               	infsnz	main@clapCounter,f,c
   769  0037BA  2A2A               	incf	main@clapCounter+1,f,c
   770  0037BC                     l1472:
   771                           
   772                           ;main.c: 286: if (clapCounter > 1000)
   773  0037BC  502A               	movf	main@clapCounter+1,w,c
   774  0037BE  0A80               	xorlw	128
   775  0037C0  0F7D               	addlw	-131
   776  0037C2  0EE9               	movlw	233
   777  0037C4  B4D8               	btfsc	status,2,c
   778  0037C6  5C29               	subwf	main@clapCounter,w,c
   779  0037C8  A0D8               	btfss	status,0,c
   780  0037CA  D02F               	goto	l1496
   781                           
   782                           ;main.c: 287: {
   783                           ;main.c: 288: if (highLevel < 600)
   784  0037CC  5025               	movf	main@highLevel+1,w,c
   785  0037CE  0A80               	xorlw	128
   786  0037D0  6EF3               	movwf	prodl,c
   787  0037D2  0E82               	movlw	130
   788  0037D4  5CF3               	subwf	prodl,w,c
   789  0037D6  0E58               	movlw	88
   790  0037D8  B4D8               	btfsc	status,2,c
   791  0037DA  5C24               	subwf	main@highLevel,w,c
   792  0037DC  B0D8               	btfsc	status,0,c
   793  0037DE  D021               	goto	l1494
   794                           
   795                           ;main.c: 289: {
   796                           ;main.c: 291: clapCounter = 0;
   797  0037E0  0E00               	movlw	0
   798  0037E2  6E2A               	movwf	main@clapCounter+1,c
   799  0037E4  0E00               	movlw	0
   800  0037E6  6E29               	movwf	main@clapCounter,c
   801                           
   802                           ;main.c: 292: patternNumber++;
   803  0037E8  2A38               	incf	main@patternNumber,f,c
   804                           
   805                           ;main.c: 293: sequenceNumber = 0;
   806  0037EA  6E10               	movwf	??_main& (0+255),c
   807  0037EC  0E00               	movlw	0
   808  0037EE  6E3E               	movwf	main@sequenceNumber,c
   809  0037F0  5010               	movf	??_main& (0+255),w,c
   810                           
   811                           ;main.c: 294: stepNumber = 0;
   812  0037F2  0E00               	movlw	0
   813  0037F4  6E40               	movwf	main@stepNumber+1,c
   814  0037F6  0E00               	movlw	0
   815  0037F8  6E3F               	movwf	main@stepNumber,c
   816                           
   817                           ;main.c: 295: currentStep = 0;
   818  0037FA  0E00               	movlw	0
   819  0037FC  6E3B               	movwf	main@currentStep+1,c
   820  0037FE  0E00               	movlw	0
   821  003800  6E3A               	movwf	main@currentStep,c
   822                           
   823                           ;main.c: 296: brightness = 0;
   824  003802  6E10               	movwf	??_main& (0+255),c
   825  003804  0E00               	movlw	0
   826  003806  6E39               	movwf	main@brightness,c
   827  003808  5010               	movf	??_main& (0+255),w,c
   828                           
   829                           ;main.c: 297: sequenceRepeats = 0;
   830  00380A  0E00               	movlw	0
   831  00380C  6E32               	movwf	main@sequenceRepeats+1,c
   832  00380E  0E00               	movlw	0
   833  003810  6E31               	movwf	main@sequenceRepeats,c
   834                           
   835                           ;main.c: 298: if (patternNumber > 4) patternNumber = 0;
   836  003812  0E04               	movlw	4
   837  003814  6438               	cpfsgt	main@patternNumber,c
   838  003816  D009               	goto	l1496
   839  003818  6E10               	movwf	??_main& (0+255),c
   840  00381A  0E00               	movlw	0
   841  00381C  6E38               	movwf	main@patternNumber,c
   842  00381E  5010               	movf	??_main& (0+255),w,c
   843  003820  D004               	goto	l1496
   844  003822                     l1494:
   845                           
   846                           ;main.c: 300: else clapCounter = 1;
   847  003822  0E00               	movlw	0
   848  003824  6E2A               	movwf	main@clapCounter+1,c
   849  003826  0E01               	movlw	1
   850  003828  6E29               	movwf	main@clapCounter,c
   851  00382A                     l1496:
   852                           
   853                           ;main.c: 301: }
   854                           ;main.c: 303: if (clapCounter > 0) PORTBbits.RB5 = 1; else PORTBbits.RB5 = 0;
   855  00382A  502A               	movf	main@clapCounter+1,w,c
   856  00382C  0A80               	xorlw	128
   857  00382E  0F80               	addlw	-128
   858  003830  0E01               	movlw	1
   859  003832  B4D8               	btfsc	status,2,c
   860  003834  5C29               	subwf	main@clapCounter,w,c
   861  003836  A0D8               	btfss	status,0,c
   862  003838  D002               	goto	l79
   863  00383A  8A81               	bsf	3969,5,c	;volatile
   864  00383C  D001               	goto	l80
   865  00383E                     l79:
   866  00383E  9A81               	bcf	3969,5,c	;volatile
   867  003840                     l80:
   868                           
   869                           ;main.c: 306: if (patternNumber == 0)
   870  003840  6638               	tstfsz	main@patternNumber,c
   871  003842  D0CF               	goto	l1592
   872                           
   873                           ;main.c: 307: {
   874                           ;main.c: 308: if (sequenceNumber == 0)
   875  003844  663E               	tstfsz	main@sequenceNumber,c
   876  003846  D01E               	goto	l1514
   877                           
   878                           ;main.c: 309: {
   879                           ;main.c: 310: if (currentStep != stepNumber)
   880  003848  5040               	movf	main@stepNumber+1,w,c
   881  00384A  183B               	xorwf	main@currentStep+1,w,c
   882  00384C  E102               	bnz	u785
   883  00384E  503F               	movf	main@stepNumber,w,c
   884  003850  183A               	xorwf	main@currentStep,w,c
   885  003852                     u785:
   886  003852  B4D8               	btfsc	status,2,c
   887  003854  D013               	goto	l1512
   888                           
   889                           ;main.c: 311: {
   890                           ;main.c: 312: currentStep = stepNumber;
   891  003856  C03F  F03A         	movff	main@stepNumber,main@currentStep
   892  00385A  C040  F03B         	movff	main@stepNumber+1,main@currentStep+1
   893                           
   894                           ;main.c: 313: if (currentStep < 16) brightness += 2; else brightness -= 2;
   895  00385E  503B               	movf	main@currentStep+1,w,c
   896  003860  0A80               	xorlw	128
   897  003862  6EF3               	movwf	prodl,c
   898  003864  0E80               	movlw	128
   899  003866  5CF3               	subwf	prodl,w,c
   900  003868  0E10               	movlw	16
   901  00386A  B4D8               	btfsc	status,2,c
   902  00386C  5C3A               	subwf	main@currentStep,w,c
   903  00386E  B0D8               	btfsc	status,0,c
   904  003870  D003               	goto	l1510
   905  003872  0E02               	movlw	2
   906  003874  2639               	addwf	main@brightness,f,c
   907  003876  D002               	goto	l1512
   908  003878                     l1510:
   909  003878  0E02               	movlw	2
   910  00387A  5E39               	subwf	main@brightness,f,c
   911  00387C                     l1512:
   912                           
   913                           ;main.c: 314: }
   914                           ;main.c: 315: highPWM = brightness;
   915  00387C  C039  F02F         	movff	main@brightness,main@highPWM
   916  003880  6A30               	clrf	main@highPWM+1,c
   917                           
   918                           ;main.c: 316: } else highPWM = 0;
   919  003882  D004               	goto	l1516
   920  003884                     l1514:
   921  003884  0E00               	movlw	0
   922  003886  6E30               	movwf	main@highPWM+1,c
   923  003888  0E00               	movlw	0
   924  00388A  6E2F               	movwf	main@highPWM,c
   925  00388C                     l1516:
   926                           
   927                           ;main.c: 318: if (sequenceNumber == 1)
   928  00388C  043E               	decf	main@sequenceNumber,w,c
   929  00388E  A4D8               	btfss	status,2,c
   930  003890  D01E               	goto	l1530
   931                           
   932                           ;main.c: 319: {
   933                           ;main.c: 320: if (currentStep != stepNumber)
   934  003892  5040               	movf	main@stepNumber+1,w,c
   935  003894  183B               	xorwf	main@currentStep+1,w,c
   936  003896  E102               	bnz	u815
   937  003898  503F               	movf	main@stepNumber,w,c
   938  00389A  183A               	xorwf	main@currentStep,w,c
   939  00389C                     u815:
   940  00389C  B4D8               	btfsc	status,2,c
   941  00389E  D013               	goto	l1528
   942                           
   943                           ;main.c: 321: {
   944                           ;main.c: 322: currentStep = stepNumber;
   945  0038A0  C03F  F03A         	movff	main@stepNumber,main@currentStep
   946  0038A4  C040  F03B         	movff	main@stepNumber+1,main@currentStep+1
   947                           
   948                           ;main.c: 324: if (currentStep < 16) brightness += 2; else brightness -= 2;
   949  0038A8  503B               	movf	main@currentStep+1,w,c
   950  0038AA  0A80               	xorlw	128
   951  0038AC  6EF3               	movwf	prodl,c
   952  0038AE  0E80               	movlw	128
   953  0038B0  5CF3               	subwf	prodl,w,c
   954  0038B2  0E10               	movlw	16
   955  0038B4  B4D8               	btfsc	status,2,c
   956  0038B6  5C3A               	subwf	main@currentStep,w,c
   957  0038B8  B0D8               	btfsc	status,0,c
   958  0038BA  D003               	goto	l1526
   959  0038BC  0E02               	movlw	2
   960  0038BE  2639               	addwf	main@brightness,f,c
   961  0038C0  D002               	goto	l1528
   962  0038C2                     l1526:
   963  0038C2  0E02               	movlw	2
   964  0038C4  5E39               	subwf	main@brightness,f,c
   965  0038C6                     l1528:
   966                           
   967                           ;main.c: 325: }
   968                           ;main.c: 326: midPWM = brightness;
   969  0038C6  C039  F036         	movff	main@brightness,main@midPWM
   970  0038CA  6A37               	clrf	main@midPWM+1,c
   971                           
   972                           ;main.c: 327: } else if (sequenceNumber != 3) midPWM = 0;
   973  0038CC  D008               	goto	l1534
   974  0038CE                     l1530:
   975  0038CE  503E               	movf	main@sequenceNumber,w,c
   976  0038D0  0A03               	xorlw	3
   977  0038D2  B4D8               	btfsc	status,2,c
   978  0038D4  D004               	goto	l1534
   979  0038D6  0E00               	movlw	0
   980  0038D8  6E37               	movwf	main@midPWM+1,c
   981  0038DA  0E00               	movlw	0
   982  0038DC  6E36               	movwf	main@midPWM,c
   983  0038DE                     l1534:
   984                           
   985                           ;main.c: 329: if (sequenceNumber == 2)
   986  0038DE  503E               	movf	main@sequenceNumber,w,c
   987  0038E0  0A02               	xorlw	2
   988  0038E2  A4D8               	btfss	status,2,c
   989  0038E4  D01E               	goto	l1548
   990                           
   991                           ;main.c: 330: {
   992                           ;main.c: 331: if (currentStep != stepNumber)
   993  0038E6  5040               	movf	main@stepNumber+1,w,c
   994  0038E8  183B               	xorwf	main@currentStep+1,w,c
   995  0038EA  E102               	bnz	u855
   996  0038EC  503F               	movf	main@stepNumber,w,c
   997  0038EE  183A               	xorwf	main@currentStep,w,c
   998  0038F0                     u855:
   999  0038F0  B4D8               	btfsc	status,2,c
  1000  0038F2  D013               	goto	l1546
  1001                           
  1002                           ;main.c: 332: {
  1003                           ;main.c: 333: currentStep = stepNumber;
  1004  0038F4  C03F  F03A         	movff	main@stepNumber,main@currentStep
  1005  0038F8  C040  F03B         	movff	main@stepNumber+1,main@currentStep+1
  1006                           
  1007                           ;main.c: 334: if (currentStep < 16) brightness += 2; else brightness -= 2;
  1008  0038FC  503B               	movf	main@currentStep+1,w,c
  1009  0038FE  0A80               	xorlw	128
  1010  003900  6EF3               	movwf	prodl,c
  1011  003902  0E80               	movlw	128
  1012  003904  5CF3               	subwf	prodl,w,c
  1013  003906  0E10               	movlw	16
  1014  003908  B4D8               	btfsc	status,2,c
  1015  00390A  5C3A               	subwf	main@currentStep,w,c
  1016  00390C  B0D8               	btfsc	status,0,c
  1017  00390E  D003               	goto	l1544
  1018  003910  0E02               	movlw	2
  1019  003912  2639               	addwf	main@brightness,f,c
  1020  003914  D002               	goto	l1546
  1021  003916                     l1544:
  1022  003916  0E02               	movlw	2
  1023  003918  5E39               	subwf	main@brightness,f,c
  1024  00391A                     l1546:
  1025                           
  1026                           ;main.c: 335: }
  1027                           ;main.c: 336: lowPWM = brightness;
  1028  00391A  C039  F02D         	movff	main@brightness,main@lowPWM
  1029  00391E  6A2E               	clrf	main@lowPWM+1,c
  1030                           
  1031                           ;main.c: 337: } else lowPWM = 0;
  1032  003920  D004               	goto	l1550
  1033  003922                     l1548:
  1034  003922  0E00               	movlw	0
  1035  003924  6E2E               	movwf	main@lowPWM+1,c
  1036  003926  0E00               	movlw	0
  1037  003928  6E2D               	movwf	main@lowPWM,c
  1038  00392A                     l1550:
  1039                           
  1040                           ;main.c: 339: if (sequenceNumber == 3)
  1041  00392A  503E               	movf	main@sequenceNumber,w,c
  1042  00392C  0A03               	xorlw	3
  1043  00392E  A4D8               	btfss	status,2,c
  1044  003930  D01E               	goto	l1564
  1045                           
  1046                           ;main.c: 340: {
  1047                           ;main.c: 341: if (currentStep != stepNumber)
  1048  003932  5040               	movf	main@stepNumber+1,w,c
  1049  003934  183B               	xorwf	main@currentStep+1,w,c
  1050  003936  E102               	bnz	u885
  1051  003938  503F               	movf	main@stepNumber,w,c
  1052  00393A  183A               	xorwf	main@currentStep,w,c
  1053  00393C                     u885:
  1054  00393C  B4D8               	btfsc	status,2,c
  1055  00393E  D013               	goto	l1562
  1056                           
  1057                           ;main.c: 342: {
  1058                           ;main.c: 343: currentStep = stepNumber;
  1059  003940  C03F  F03A         	movff	main@stepNumber,main@currentStep
  1060  003944  C040  F03B         	movff	main@stepNumber+1,main@currentStep+1
  1061                           
  1062                           ;main.c: 345: if (currentStep < 16) brightness += 2; else brightness -= 2;
  1063  003948  503B               	movf	main@currentStep+1,w,c
  1064  00394A  0A80               	xorlw	128
  1065  00394C  6EF3               	movwf	prodl,c
  1066  00394E  0E80               	movlw	128
  1067  003950  5CF3               	subwf	prodl,w,c
  1068  003952  0E10               	movlw	16
  1069  003954  B4D8               	btfsc	status,2,c
  1070  003956  5C3A               	subwf	main@currentStep,w,c
  1071  003958  B0D8               	btfsc	status,0,c
  1072  00395A  D003               	goto	l1560
  1073  00395C  0E02               	movlw	2
  1074  00395E  2639               	addwf	main@brightness,f,c
  1075  003960  D002               	goto	l1562
  1076  003962                     l1560:
  1077  003962  0E02               	movlw	2
  1078  003964  5E39               	subwf	main@brightness,f,c
  1079  003966                     l1562:
  1080                           
  1081                           ;main.c: 346: }
  1082                           ;main.c: 347: midPWM = brightness;
  1083  003966  C039  F036         	movff	main@brightness,main@midPWM
  1084  00396A  6A37               	clrf	main@midPWM+1,c
  1085                           
  1086                           ;main.c: 348: } else if (sequenceNumber != 1) midPWM = 0;
  1087  00396C  D007               	goto	l1568
  1088  00396E                     l1564:
  1089  00396E  043E               	decf	main@sequenceNumber,w,c
  1090  003970  B4D8               	btfsc	status,2,c
  1091  003972  D004               	goto	l1568
  1092  003974  0E00               	movlw	0
  1093  003976  6E37               	movwf	main@midPWM+1,c
  1094  003978  0E00               	movlw	0
  1095  00397A  6E36               	movwf	main@midPWM,c
  1096  00397C                     l1568:
  1097                           
  1098                           ;main.c: 350: if (tickCounter > 6)
  1099  00397C  5034               	movf	main@tickCounter+1,w,c
  1100  00397E  0A80               	xorlw	128
  1101  003980  0F80               	addlw	-128
  1102  003982  0E07               	movlw	7
  1103  003984  B4D8               	btfsc	status,2,c
  1104  003986  5C33               	subwf	main@tickCounter,w,c
  1105  003988  A0D8               	btfss	status,0,c
  1106  00398A  D02B               	goto	l1592
  1107                           
  1108                           ;main.c: 351: {
  1109                           ;main.c: 352: stepNumber++;
  1110  00398C  4A3F               	infsnz	main@stepNumber,f,c
  1111  00398E  2A40               	incf	main@stepNumber+1,f,c
  1112                           
  1113                           ;main.c: 353: tickCounter = 0;
  1114  003990  0E00               	movlw	0
  1115  003992  6E34               	movwf	main@tickCounter+1,c
  1116  003994  0E00               	movlw	0
  1117  003996  6E33               	movwf	main@tickCounter,c
  1118                           
  1119                           ;main.c: 355: if (stepNumber == 31)
  1120  003998  503F               	movf	main@stepNumber,w,c
  1121  00399A  0A1F               	xorlw	31
  1122  00399C  1040               	iorwf	main@stepNumber+1,w,c
  1123  00399E  A4D8               	btfss	status,2,c
  1124  0039A0  D020               	goto	l1592
  1125                           
  1126                           ;main.c: 356: {
  1127                           ;main.c: 357: stepNumber = 0;
  1128  0039A2  0E00               	movlw	0
  1129  0039A4  6E40               	movwf	main@stepNumber+1,c
  1130  0039A6  0E00               	movlw	0
  1131  0039A8  6E3F               	movwf	main@stepNumber,c
  1132                           
  1133                           ;main.c: 358: sequenceNumber++;
  1134  0039AA  2A3E               	incf	main@sequenceNumber,f,c
  1135                           
  1136                           ;main.c: 359: brightness = 0;
  1137  0039AC  6E10               	movwf	??_main& (0+255),c
  1138  0039AE  0E00               	movlw	0
  1139  0039B0  6E39               	movwf	main@brightness,c
  1140  0039B2  5010               	movf	??_main& (0+255),w,c
  1141                           
  1142                           ;main.c: 361: if (sequenceNumber == 4)
  1143  0039B4  503E               	movf	main@sequenceNumber,w,c
  1144  0039B6  0A04               	xorlw	4
  1145  0039B8  A4D8               	btfss	status,2,c
  1146  0039BA  D013               	goto	l1592
  1147                           
  1148                           ;main.c: 362: {
  1149                           ;main.c: 363: sequenceNumber = 0;
  1150  0039BC  6E10               	movwf	??_main& (0+255),c
  1151  0039BE  0E00               	movlw	0
  1152  0039C0  6E3E               	movwf	main@sequenceNumber,c
  1153  0039C2  5010               	movf	??_main& (0+255),w,c
  1154                           
  1155                           ;main.c: 364: sequenceRepeats++;
  1156  0039C4  4A31               	infsnz	main@sequenceRepeats,f,c
  1157  0039C6  2A32               	incf	main@sequenceRepeats+1,f,c
  1158                           
  1159                           ;main.c: 365: if (sequenceRepeats > 10)
  1160  0039C8  5032               	movf	main@sequenceRepeats+1,w,c
  1161  0039CA  0A80               	xorlw	128
  1162  0039CC  0F80               	addlw	-128
  1163  0039CE  0E0B               	movlw	11
  1164  0039D0  B4D8               	btfsc	status,2,c
  1165  0039D2  5C31               	subwf	main@sequenceRepeats,w,c
  1166  0039D4  A0D8               	btfss	status,0,c
  1167  0039D6  D005               	goto	l1592
  1168                           
  1169                           ;main.c: 366: {
  1170                           ;main.c: 367: sequenceRepeats = 0;
  1171  0039D8  0E00               	movlw	0
  1172  0039DA  6E32               	movwf	main@sequenceRepeats+1,c
  1173  0039DC  0E00               	movlw	0
  1174  0039DE  6E31               	movwf	main@sequenceRepeats,c
  1175                           
  1176                           ;main.c: 368: patternNumber++;
  1177  0039E0  2A38               	incf	main@patternNumber,f,c
  1178  0039E2                     l1592:
  1179                           
  1180                           ;main.c: 369: }
  1181                           ;main.c: 370: }
  1182                           ;main.c: 371: }
  1183                           ;main.c: 372: }
  1184                           ;main.c: 373: }
  1185                           ;main.c: 376: if (patternNumber == 1)
  1186  0039E2  0438               	decf	main@patternNumber,w,c
  1187  0039E4  A4D8               	btfss	status,2,c
  1188  0039E6  D03F               	goto	l1620
  1189                           
  1190                           ;main.c: 377: {
  1191                           ;main.c: 378: highPWM = 31;
  1192  0039E8  0E00               	movlw	0
  1193  0039EA  6E30               	movwf	main@highPWM+1,c
  1194  0039EC  0E1F               	movlw	31
  1195  0039EE  6E2F               	movwf	main@highPWM,c
  1196                           
  1197                           ;main.c: 379: midPWM = 31;
  1198  0039F0  0E00               	movlw	0
  1199  0039F2  6E37               	movwf	main@midPWM+1,c
  1200  0039F4  0E1F               	movlw	31
  1201  0039F6  6E36               	movwf	main@midPWM,c
  1202                           
  1203                           ;main.c: 380: lowPWM = 31;
  1204  0039F8  0E00               	movlw	0
  1205  0039FA  6E2E               	movwf	main@lowPWM+1,c
  1206  0039FC  0E1F               	movlw	31
  1207  0039FE  6E2D               	movwf	main@lowPWM,c
  1208                           
  1209                           ;main.c: 382: if (tickCounter > 8)
  1210  003A00  5034               	movf	main@tickCounter+1,w,c
  1211  003A02  0A80               	xorlw	128
  1212  003A04  0F80               	addlw	-128
  1213  003A06  0E09               	movlw	9
  1214  003A08  B4D8               	btfsc	status,2,c
  1215  003A0A  5C33               	subwf	main@tickCounter,w,c
  1216  003A0C  A0D8               	btfss	status,0,c
  1217  003A0E  D02B               	goto	l1620
  1218                           
  1219                           ;main.c: 383: {
  1220                           ;main.c: 384: stepNumber++;
  1221  003A10  4A3F               	infsnz	main@stepNumber,f,c
  1222  003A12  2A40               	incf	main@stepNumber+1,f,c
  1223                           
  1224                           ;main.c: 385: tickCounter = 0;
  1225  003A14  0E00               	movlw	0
  1226  003A16  6E34               	movwf	main@tickCounter+1,c
  1227  003A18  0E00               	movlw	0
  1228  003A1A  6E33               	movwf	main@tickCounter,c
  1229                           
  1230                           ;main.c: 387: if (stepNumber == 3)
  1231  003A1C  503F               	movf	main@stepNumber,w,c
  1232  003A1E  0A03               	xorlw	3
  1233  003A20  1040               	iorwf	main@stepNumber+1,w,c
  1234  003A22  A4D8               	btfss	status,2,c
  1235  003A24  D020               	goto	l1620
  1236                           
  1237                           ;main.c: 388: {
  1238                           ;main.c: 389: stepNumber = 0;
  1239  003A26  0E00               	movlw	0
  1240  003A28  6E40               	movwf	main@stepNumber+1,c
  1241  003A2A  0E00               	movlw	0
  1242  003A2C  6E3F               	movwf	main@stepNumber,c
  1243                           
  1244                           ;main.c: 390: sequenceNumber++;
  1245  003A2E  2A3E               	incf	main@sequenceNumber,f,c
  1246                           
  1247                           ;main.c: 391: brightness = 0;
  1248  003A30  6E10               	movwf	??_main& (0+255),c
  1249  003A32  0E00               	movlw	0
  1250  003A34  6E39               	movwf	main@brightness,c
  1251  003A36  5010               	movf	??_main& (0+255),w,c
  1252                           
  1253                           ;main.c: 393: if (sequenceNumber == 5)
  1254  003A38  503E               	movf	main@sequenceNumber,w,c
  1255  003A3A  0A05               	xorlw	5
  1256  003A3C  A4D8               	btfss	status,2,c
  1257  003A3E  D013               	goto	l1620
  1258                           
  1259                           ;main.c: 394: {
  1260                           ;main.c: 395: sequenceNumber = 0;
  1261  003A40  6E10               	movwf	??_main& (0+255),c
  1262  003A42  0E00               	movlw	0
  1263  003A44  6E3E               	movwf	main@sequenceNumber,c
  1264  003A46  5010               	movf	??_main& (0+255),w,c
  1265                           
  1266                           ;main.c: 396: sequenceRepeats++;
  1267  003A48  4A31               	infsnz	main@sequenceRepeats,f,c
  1268  003A4A  2A32               	incf	main@sequenceRepeats+1,f,c
  1269                           
  1270                           ;main.c: 397: if (sequenceRepeats > 40)
  1271  003A4C  5032               	movf	main@sequenceRepeats+1,w,c
  1272  003A4E  0A80               	xorlw	128
  1273  003A50  0F80               	addlw	-128
  1274  003A52  0E29               	movlw	41
  1275  003A54  B4D8               	btfsc	status,2,c
  1276  003A56  5C31               	subwf	main@sequenceRepeats,w,c
  1277  003A58  A0D8               	btfss	status,0,c
  1278  003A5A  D005               	goto	l1620
  1279                           
  1280                           ;main.c: 398: {
  1281                           ;main.c: 399: sequenceRepeats = 0;
  1282  003A5C  0E00               	movlw	0
  1283  003A5E  6E32               	movwf	main@sequenceRepeats+1,c
  1284  003A60  0E00               	movlw	0
  1285  003A62  6E31               	movwf	main@sequenceRepeats,c
  1286                           
  1287                           ;main.c: 400: patternNumber++;
  1288  003A64  2A38               	incf	main@patternNumber,f,c
  1289  003A66                     l1620:
  1290                           
  1291                           ;main.c: 401: }
  1292                           ;main.c: 402: }
  1293                           ;main.c: 403: }
  1294                           ;main.c: 404: }
  1295                           ;main.c: 405: }
  1296                           ;main.c: 408: if (patternNumber == 2)
  1297  003A66  5038               	movf	main@patternNumber,w,c
  1298  003A68  0A02               	xorlw	2
  1299  003A6A  A4D8               	btfss	status,2,c
  1300  003A6C  D100               	goto	l1746
  1301                           
  1302                           ;main.c: 409: {
  1303                           ;main.c: 410: if (sequenceNumber == 0)
  1304  003A6E  663E               	tstfsz	main@sequenceNumber,c
  1305  003A70  D025               	goto	l1642
  1306                           
  1307                           ;main.c: 411: {
  1308                           ;main.c: 412: if (stepNumber == 0) highPWM = 31; else highPWM = 0;
  1309  003A72  5040               	movf	main@stepNumber+1,w,c
  1310  003A74  103F               	iorwf	main@stepNumber,w,c
  1311  003A76  A4D8               	btfss	status,2,c
  1312  003A78  D004               	goto	l1628
  1313  003A7A  0E00               	movlw	0
  1314  003A7C  6E30               	movwf	main@highPWM+1,c
  1315  003A7E  0E1F               	movlw	31
  1316  003A80  D003               	goto	L3
  1317  003A82                     l1628:
  1318  003A82  0E00               	movlw	0
  1319  003A84  6E30               	movwf	main@highPWM+1,c
  1320  003A86  0E00               	movlw	0
  1321  003A88                     L3:
  1322  003A88  6E2F               	movwf	main@highPWM,c
  1323                           
  1324                           ;main.c: 413: if (stepNumber == 1) midPWM = 31; else midPWM = 0;
  1325  003A8A  043F               	decf	main@stepNumber,w,c
  1326  003A8C  1040               	iorwf	main@stepNumber+1,w,c
  1327  003A8E  A4D8               	btfss	status,2,c
  1328  003A90  D004               	goto	l1634
  1329  003A92  0E00               	movlw	0
  1330  003A94  6E37               	movwf	main@midPWM+1,c
  1331  003A96  0E1F               	movlw	31
  1332  003A98  D003               	goto	L4
  1333  003A9A                     l1634:
  1334  003A9A  0E00               	movlw	0
  1335  003A9C  6E37               	movwf	main@midPWM+1,c
  1336  003A9E  0E00               	movlw	0
  1337  003AA0                     L4:
  1338  003AA0  6E36               	movwf	main@midPWM,c
  1339                           
  1340                           ;main.c: 414: if (stepNumber == 2) lowPWM = 31; else lowPWM = 0;
  1341  003AA2  503F               	movf	main@stepNumber,w,c
  1342  003AA4  0A02               	xorlw	2
  1343  003AA6  1040               	iorwf	main@stepNumber+1,w,c
  1344  003AA8  A4D8               	btfss	status,2,c
  1345  003AAA  D004               	goto	l1640
  1346  003AAC  0E00               	movlw	0
  1347  003AAE  6E2E               	movwf	main@lowPWM+1,c
  1348  003AB0  0E1F               	movlw	31
  1349  003AB2  D003               	goto	L5
  1350  003AB4                     l1640:
  1351  003AB4  0E00               	movlw	0
  1352  003AB6  6E2E               	movwf	main@lowPWM+1,c
  1353  003AB8  0E00               	movlw	0
  1354  003ABA                     L5:
  1355  003ABA  6E2D               	movwf	main@lowPWM,c
  1356  003ABC                     l1642:
  1357                           
  1358                           ;main.c: 415: }
  1359                           ;main.c: 417: if (sequenceNumber == 1)
  1360  003ABC  043E               	decf	main@sequenceNumber,w,c
  1361  003ABE  A4D8               	btfss	status,2,c
  1362  003AC0  D025               	goto	l1662
  1363                           
  1364                           ;main.c: 418: {
  1365                           ;main.c: 419: if (stepNumber == 0) highPWM = 31; else highPWM = 0;
  1366  003AC2  5040               	movf	main@stepNumber+1,w,c
  1367  003AC4  103F               	iorwf	main@stepNumber,w,c
  1368  003AC6  A4D8               	btfss	status,2,c
  1369  003AC8  D004               	goto	l1648
  1370  003ACA  0E00               	movlw	0
  1371  003ACC  6E30               	movwf	main@highPWM+1,c
  1372  003ACE  0E1F               	movlw	31
  1373  003AD0  D003               	goto	L6
  1374  003AD2                     l1648:
  1375  003AD2  0E00               	movlw	0
  1376  003AD4  6E30               	movwf	main@highPWM+1,c
  1377  003AD6  0E00               	movlw	0
  1378  003AD8                     L6:
  1379  003AD8  6E2F               	movwf	main@highPWM,c
  1380                           
  1381                           ;main.c: 420: if (stepNumber == 1) lowPWM = 31; else lowPWM = 0;
  1382  003ADA  043F               	decf	main@stepNumber,w,c
  1383  003ADC  1040               	iorwf	main@stepNumber+1,w,c
  1384  003ADE  A4D8               	btfss	status,2,c
  1385  003AE0  D004               	goto	l1654
  1386  003AE2  0E00               	movlw	0
  1387  003AE4  6E2E               	movwf	main@lowPWM+1,c
  1388  003AE6  0E1F               	movlw	31
  1389  003AE8  D003               	goto	L7
  1390  003AEA                     l1654:
  1391  003AEA  0E00               	movlw	0
  1392  003AEC  6E2E               	movwf	main@lowPWM+1,c
  1393  003AEE  0E00               	movlw	0
  1394  003AF0                     L7:
  1395  003AF0  6E2D               	movwf	main@lowPWM,c
  1396                           
  1397                           ;main.c: 421: if (stepNumber == 2) midPWM = 31; else midPWM = 0;
  1398  003AF2  503F               	movf	main@stepNumber,w,c
  1399  003AF4  0A02               	xorlw	2
  1400  003AF6  1040               	iorwf	main@stepNumber+1,w,c
  1401  003AF8  A4D8               	btfss	status,2,c
  1402  003AFA  D004               	goto	l1660
  1403  003AFC  0E00               	movlw	0
  1404  003AFE  6E37               	movwf	main@midPWM+1,c
  1405  003B00  0E1F               	movlw	31
  1406  003B02  D003               	goto	L8
  1407  003B04                     l1660:
  1408  003B04  0E00               	movlw	0
  1409  003B06  6E37               	movwf	main@midPWM+1,c
  1410  003B08  0E00               	movlw	0
  1411  003B0A                     L8:
  1412  003B0A  6E36               	movwf	main@midPWM,c
  1413  003B0C                     l1662:
  1414                           
  1415                           ;main.c: 422: }
  1416                           ;main.c: 424: if (sequenceNumber == 2)
  1417  003B0C  503E               	movf	main@sequenceNumber,w,c
  1418  003B0E  0A02               	xorlw	2
  1419  003B10  A4D8               	btfss	status,2,c
  1420  003B12  D025               	goto	l1682
  1421                           
  1422                           ;main.c: 425: {
  1423                           ;main.c: 426: if (stepNumber == 0) lowPWM = 31; else lowPWM = 0;
  1424  003B14  5040               	movf	main@stepNumber+1,w,c
  1425  003B16  103F               	iorwf	main@stepNumber,w,c
  1426  003B18  A4D8               	btfss	status,2,c
  1427  003B1A  D004               	goto	l1668
  1428  003B1C  0E00               	movlw	0
  1429  003B1E  6E2E               	movwf	main@lowPWM+1,c
  1430  003B20  0E1F               	movlw	31
  1431  003B22  D003               	goto	L9
  1432  003B24                     l1668:
  1433  003B24  0E00               	movlw	0
  1434  003B26  6E2E               	movwf	main@lowPWM+1,c
  1435  003B28  0E00               	movlw	0
  1436  003B2A                     L9:
  1437  003B2A  6E2D               	movwf	main@lowPWM,c
  1438                           
  1439                           ;main.c: 427: if (stepNumber == 1) highPWM = 31; else highPWM = 0;
  1440  003B2C  043F               	decf	main@stepNumber,w,c
  1441  003B2E  1040               	iorwf	main@stepNumber+1,w,c
  1442  003B30  A4D8               	btfss	status,2,c
  1443  003B32  D004               	goto	l1674
  1444  003B34  0E00               	movlw	0
  1445  003B36  6E30               	movwf	main@highPWM+1,c
  1446  003B38  0E1F               	movlw	31
  1447  003B3A  D003               	goto	L10
  1448  003B3C                     l1674:
  1449  003B3C  0E00               	movlw	0
  1450  003B3E  6E30               	movwf	main@highPWM+1,c
  1451  003B40  0E00               	movlw	0
  1452  003B42                     L10:
  1453  003B42  6E2F               	movwf	main@highPWM,c
  1454                           
  1455                           ;main.c: 428: if (stepNumber == 2) midPWM = 31; else midPWM = 0;
  1456  003B44  503F               	movf	main@stepNumber,w,c
  1457  003B46  0A02               	xorlw	2
  1458  003B48  1040               	iorwf	main@stepNumber+1,w,c
  1459  003B4A  A4D8               	btfss	status,2,c
  1460  003B4C  D004               	goto	l1680
  1461  003B4E  0E00               	movlw	0
  1462  003B50  6E37               	movwf	main@midPWM+1,c
  1463  003B52  0E1F               	movlw	31
  1464  003B54  D003               	goto	L11
  1465  003B56                     l1680:
  1466  003B56  0E00               	movlw	0
  1467  003B58  6E37               	movwf	main@midPWM+1,c
  1468  003B5A  0E00               	movlw	0
  1469  003B5C                     L11:
  1470  003B5C  6E36               	movwf	main@midPWM,c
  1471  003B5E                     l1682:
  1472                           
  1473                           ;main.c: 429: }
  1474                           ;main.c: 431: if (sequenceNumber == 3)
  1475  003B5E  503E               	movf	main@sequenceNumber,w,c
  1476  003B60  0A03               	xorlw	3
  1477  003B62  A4D8               	btfss	status,2,c
  1478  003B64  D028               	goto	l1702
  1479                           
  1480                           ;main.c: 432: {
  1481                           ;main.c: 433: if (stepNumber == 0) lowPWM = 31; else highPWM = 0;
  1482  003B66  5040               	movf	main@stepNumber+1,w,c
  1483  003B68  103F               	iorwf	main@stepNumber,w,c
  1484  003B6A  A4D8               	btfss	status,2,c
  1485  003B6C  D005               	goto	l1688
  1486  003B6E  0E00               	movlw	0
  1487  003B70  6E2E               	movwf	main@lowPWM+1,c
  1488  003B72  0E1F               	movlw	31
  1489  003B74  6E2D               	movwf	main@lowPWM,c
  1490  003B76  D004               	goto	l1690
  1491  003B78                     l1688:
  1492  003B78  0E00               	movlw	0
  1493  003B7A  6E30               	movwf	main@highPWM+1,c
  1494  003B7C  0E00               	movlw	0
  1495  003B7E  6E2F               	movwf	main@highPWM,c
  1496  003B80                     l1690:
  1497                           
  1498                           ;main.c: 434: if (stepNumber == 1) midPWM = 31; else lowPWM = 0;
  1499  003B80  043F               	decf	main@stepNumber,w,c
  1500  003B82  1040               	iorwf	main@stepNumber+1,w,c
  1501  003B84  A4D8               	btfss	status,2,c
  1502  003B86  D005               	goto	l1694
  1503  003B88  0E00               	movlw	0
  1504  003B8A  6E37               	movwf	main@midPWM+1,c
  1505  003B8C  0E1F               	movlw	31
  1506  003B8E  6E36               	movwf	main@midPWM,c
  1507  003B90  D004               	goto	l1696
  1508  003B92                     l1694:
  1509  003B92  0E00               	movlw	0
  1510  003B94  6E2E               	movwf	main@lowPWM+1,c
  1511  003B96  0E00               	movlw	0
  1512  003B98  6E2D               	movwf	main@lowPWM,c
  1513  003B9A                     l1696:
  1514                           
  1515                           ;main.c: 435: if (stepNumber == 2) highPWM = 31; else midPWM = 0;
  1516  003B9A  503F               	movf	main@stepNumber,w,c
  1517  003B9C  0A02               	xorlw	2
  1518  003B9E  1040               	iorwf	main@stepNumber+1,w,c
  1519  003BA0  A4D8               	btfss	status,2,c
  1520  003BA2  D005               	goto	l1700
  1521  003BA4  0E00               	movlw	0
  1522  003BA6  6E30               	movwf	main@highPWM+1,c
  1523  003BA8  0E1F               	movlw	31
  1524  003BAA  6E2F               	movwf	main@highPWM,c
  1525  003BAC  D004               	goto	l1702
  1526  003BAE                     l1700:
  1527  003BAE  0E00               	movlw	0
  1528  003BB0  6E37               	movwf	main@midPWM+1,c
  1529  003BB2  0E00               	movlw	0
  1530  003BB4  6E36               	movwf	main@midPWM,c
  1531  003BB6                     l1702:
  1532                           
  1533                           ;main.c: 436: }
  1534                           ;main.c: 438: if (sequenceNumber == 4)
  1535  003BB6  503E               	movf	main@sequenceNumber,w,c
  1536  003BB8  0A04               	xorlw	4
  1537  003BBA  A4D8               	btfss	status,2,c
  1538  003BBC  D025               	goto	l1722
  1539                           
  1540                           ;main.c: 439: {
  1541                           ;main.c: 440: if (stepNumber == 0) midPWM = 31; else midPWM = 0;
  1542  003BBE  5040               	movf	main@stepNumber+1,w,c
  1543  003BC0  103F               	iorwf	main@stepNumber,w,c
  1544  003BC2  A4D8               	btfss	status,2,c
  1545  003BC4  D004               	goto	l1708
  1546  003BC6  0E00               	movlw	0
  1547  003BC8  6E37               	movwf	main@midPWM+1,c
  1548  003BCA  0E1F               	movlw	31
  1549  003BCC  D003               	goto	L12
  1550  003BCE                     l1708:
  1551  003BCE  0E00               	movlw	0
  1552  003BD0  6E37               	movwf	main@midPWM+1,c
  1553  003BD2  0E00               	movlw	0
  1554  003BD4                     L12:
  1555  003BD4  6E36               	movwf	main@midPWM,c
  1556                           
  1557                           ;main.c: 441: if (stepNumber == 1) highPWM = 31; else highPWM = 0;
  1558  003BD6  043F               	decf	main@stepNumber,w,c
  1559  003BD8  1040               	iorwf	main@stepNumber+1,w,c
  1560  003BDA  A4D8               	btfss	status,2,c
  1561  003BDC  D004               	goto	l1714
  1562  003BDE  0E00               	movlw	0
  1563  003BE0  6E30               	movwf	main@highPWM+1,c
  1564  003BE2  0E1F               	movlw	31
  1565  003BE4  D003               	goto	L13
  1566  003BE6                     l1714:
  1567  003BE6  0E00               	movlw	0
  1568  003BE8  6E30               	movwf	main@highPWM+1,c
  1569  003BEA  0E00               	movlw	0
  1570  003BEC                     L13:
  1571  003BEC  6E2F               	movwf	main@highPWM,c
  1572                           
  1573                           ;main.c: 442: if (stepNumber == 2) lowPWM = 31; else lowPWM = 0;
  1574  003BEE  503F               	movf	main@stepNumber,w,c
  1575  003BF0  0A02               	xorlw	2
  1576  003BF2  1040               	iorwf	main@stepNumber+1,w,c
  1577  003BF4  A4D8               	btfss	status,2,c
  1578  003BF6  D004               	goto	l1720
  1579  003BF8  0E00               	movlw	0
  1580  003BFA  6E2E               	movwf	main@lowPWM+1,c
  1581  003BFC  0E1F               	movlw	31
  1582  003BFE  D003               	goto	L14
  1583  003C00                     l1720:
  1584  003C00  0E00               	movlw	0
  1585  003C02  6E2E               	movwf	main@lowPWM+1,c
  1586  003C04  0E00               	movlw	0
  1587  003C06                     L14:
  1588  003C06  6E2D               	movwf	main@lowPWM,c
  1589  003C08                     l1722:
  1590                           
  1591                           ;main.c: 443: }
  1592                           ;main.c: 445: if (tickCounter > 8)
  1593  003C08  5034               	movf	main@tickCounter+1,w,c
  1594  003C0A  0A80               	xorlw	128
  1595  003C0C  0F80               	addlw	-128
  1596  003C0E  0E09               	movlw	9
  1597  003C10  B4D8               	btfsc	status,2,c
  1598  003C12  5C33               	subwf	main@tickCounter,w,c
  1599  003C14  A0D8               	btfss	status,0,c
  1600  003C16  D02B               	goto	l1746
  1601                           
  1602                           ;main.c: 446: {
  1603                           ;main.c: 447: stepNumber++;
  1604  003C18  4A3F               	infsnz	main@stepNumber,f,c
  1605  003C1A  2A40               	incf	main@stepNumber+1,f,c
  1606                           
  1607                           ;main.c: 448: tickCounter = 0;
  1608  003C1C  0E00               	movlw	0
  1609  003C1E  6E34               	movwf	main@tickCounter+1,c
  1610  003C20  0E00               	movlw	0
  1611  003C22  6E33               	movwf	main@tickCounter,c
  1612                           
  1613                           ;main.c: 450: if (stepNumber == 3)
  1614  003C24  503F               	movf	main@stepNumber,w,c
  1615  003C26  0A03               	xorlw	3
  1616  003C28  1040               	iorwf	main@stepNumber+1,w,c
  1617  003C2A  A4D8               	btfss	status,2,c
  1618  003C2C  D020               	goto	l1746
  1619                           
  1620                           ;main.c: 451: {
  1621                           ;main.c: 452: stepNumber = 0;
  1622  003C2E  0E00               	movlw	0
  1623  003C30  6E40               	movwf	main@stepNumber+1,c
  1624  003C32  0E00               	movlw	0
  1625  003C34  6E3F               	movwf	main@stepNumber,c
  1626                           
  1627                           ;main.c: 453: sequenceNumber++;
  1628  003C36  2A3E               	incf	main@sequenceNumber,f,c
  1629                           
  1630                           ;main.c: 454: brightness = 0;
  1631  003C38  6E10               	movwf	??_main& (0+255),c
  1632  003C3A  0E00               	movlw	0
  1633  003C3C  6E39               	movwf	main@brightness,c
  1634  003C3E  5010               	movf	??_main& (0+255),w,c
  1635                           
  1636                           ;main.c: 456: if (sequenceNumber == 5)
  1637  003C40  503E               	movf	main@sequenceNumber,w,c
  1638  003C42  0A05               	xorlw	5
  1639  003C44  A4D8               	btfss	status,2,c
  1640  003C46  D013               	goto	l1746
  1641                           
  1642                           ;main.c: 457: {
  1643                           ;main.c: 458: sequenceNumber = 0;
  1644  003C48  6E10               	movwf	??_main& (0+255),c
  1645  003C4A  0E00               	movlw	0
  1646  003C4C  6E3E               	movwf	main@sequenceNumber,c
  1647  003C4E  5010               	movf	??_main& (0+255),w,c
  1648                           
  1649                           ;main.c: 459: sequenceRepeats++;
  1650  003C50  4A31               	infsnz	main@sequenceRepeats,f,c
  1651  003C52  2A32               	incf	main@sequenceRepeats+1,f,c
  1652                           
  1653                           ;main.c: 460: if (sequenceRepeats > 30)
  1654  003C54  5032               	movf	main@sequenceRepeats+1,w,c
  1655  003C56  0A80               	xorlw	128
  1656  003C58  0F80               	addlw	-128
  1657  003C5A  0E1F               	movlw	31
  1658  003C5C  B4D8               	btfsc	status,2,c
  1659  003C5E  5C31               	subwf	main@sequenceRepeats,w,c
  1660  003C60  A0D8               	btfss	status,0,c
  1661  003C62  D005               	goto	l1746
  1662                           
  1663                           ;main.c: 461: {
  1664                           ;main.c: 462: sequenceRepeats = 0;
  1665  003C64  0E00               	movlw	0
  1666  003C66  6E32               	movwf	main@sequenceRepeats+1,c
  1667  003C68  0E00               	movlw	0
  1668  003C6A  6E31               	movwf	main@sequenceRepeats,c
  1669                           
  1670                           ;main.c: 463: patternNumber++;
  1671  003C6C  2A38               	incf	main@patternNumber,f,c
  1672  003C6E                     l1746:
  1673                           
  1674                           ;main.c: 464: }
  1675                           ;main.c: 465: }
  1676                           ;main.c: 466: }
  1677                           ;main.c: 467: }
  1678                           ;main.c: 468: }
  1679                           ;main.c: 471: if (patternNumber == 3)
  1680  003C6E  5038               	movf	main@patternNumber,w,c
  1681  003C70  0A03               	xorlw	3
  1682  003C72  A4D8               	btfss	status,2,c
  1683  003C74  D057               	goto	l1788
  1684                           
  1685                           ;main.c: 472: {
  1686                           ;main.c: 473: if (sequenceNumber == 0)
  1687  003C76  663E               	tstfsz	main@sequenceNumber,c
  1688  003C78  D023               	goto	l154
  1689                           
  1690                           ;main.c: 474: {
  1691                           ;main.c: 475: if (currentStep != stepNumber)
  1692  003C7A  5040               	movf	main@stepNumber+1,w,c
  1693  003C7C  183B               	xorwf	main@currentStep+1,w,c
  1694  003C7E  E102               	bnz	u1275
  1695  003C80  503F               	movf	main@stepNumber,w,c
  1696  003C82  183A               	xorwf	main@currentStep,w,c
  1697  003C84                     u1275:
  1698  003C84  B4D8               	btfsc	status,2,c
  1699  003C86  D013               	goto	l1760
  1700                           
  1701                           ;main.c: 476: {
  1702                           ;main.c: 477: currentStep = stepNumber;
  1703  003C88  C03F  F03A         	movff	main@stepNumber,main@currentStep
  1704  003C8C  C040  F03B         	movff	main@stepNumber+1,main@currentStep+1
  1705                           
  1706                           ;main.c: 478: if (currentStep < 16) brightness += 2; else brightness -= 2;
  1707  003C90  503B               	movf	main@currentStep+1,w,c
  1708  003C92  0A80               	xorlw	128
  1709  003C94  6EF3               	movwf	prodl,c
  1710  003C96  0E80               	movlw	128
  1711  003C98  5CF3               	subwf	prodl,w,c
  1712  003C9A  0E10               	movlw	16
  1713  003C9C  B4D8               	btfsc	status,2,c
  1714  003C9E  5C3A               	subwf	main@currentStep,w,c
  1715  003CA0  B0D8               	btfsc	status,0,c
  1716  003CA2  D003               	goto	l1758
  1717  003CA4  0E02               	movlw	2
  1718  003CA6  2639               	addwf	main@brightness,f,c
  1719  003CA8  D002               	goto	l1760
  1720  003CAA                     l1758:
  1721  003CAA  0E02               	movlw	2
  1722  003CAC  5E39               	subwf	main@brightness,f,c
  1723  003CAE                     l1760:
  1724                           
  1725                           ;main.c: 479: }
  1726                           ;main.c: 480: highPWM = brightness;
  1727  003CAE  C039  F02F         	movff	main@brightness,main@highPWM
  1728  003CB2  6A30               	clrf	main@highPWM+1,c
  1729                           
  1730                           ;main.c: 481: midPWM = brightness;
  1731  003CB4  C039  F036         	movff	main@brightness,main@midPWM
  1732  003CB8  6A37               	clrf	main@midPWM+1,c
  1733                           
  1734                           ;main.c: 482: lowPWM = brightness;
  1735  003CBA  C039  F02D         	movff	main@brightness,main@lowPWM
  1736  003CBE  6A2E               	clrf	main@lowPWM+1,c
  1737  003CC0                     l154:
  1738                           
  1739                           ;main.c: 483: }
  1740                           ;main.c: 485: if (tickCounter > 3)
  1741  003CC0  5034               	movf	main@tickCounter+1,w,c
  1742  003CC2  0A80               	xorlw	128
  1743  003CC4  0F80               	addlw	-128
  1744  003CC6  0E04               	movlw	4
  1745  003CC8  B4D8               	btfsc	status,2,c
  1746  003CCA  5C33               	subwf	main@tickCounter,w,c
  1747  003CCC  A0D8               	btfss	status,0,c
  1748  003CCE  D02A               	goto	l1788
  1749                           
  1750                           ;main.c: 486: {
  1751                           ;main.c: 487: stepNumber++;
  1752  003CD0  4A3F               	infsnz	main@stepNumber,f,c
  1753  003CD2  2A40               	incf	main@stepNumber+1,f,c
  1754                           
  1755                           ;main.c: 488: tickCounter = 0;
  1756  003CD4  0E00               	movlw	0
  1757  003CD6  6E34               	movwf	main@tickCounter+1,c
  1758  003CD8  0E00               	movlw	0
  1759  003CDA  6E33               	movwf	main@tickCounter,c
  1760                           
  1761                           ;main.c: 490: if (stepNumber == 31)
  1762  003CDC  503F               	movf	main@stepNumber,w,c
  1763  003CDE  0A1F               	xorlw	31
  1764  003CE0  1040               	iorwf	main@stepNumber+1,w,c
  1765  003CE2  A4D8               	btfss	status,2,c
  1766  003CE4  D01F               	goto	l1788
  1767                           
  1768                           ;main.c: 491: {
  1769                           ;main.c: 492: stepNumber = 0;
  1770  003CE6  0E00               	movlw	0
  1771  003CE8  6E40               	movwf	main@stepNumber+1,c
  1772  003CEA  0E00               	movlw	0
  1773  003CEC  6E3F               	movwf	main@stepNumber,c
  1774                           
  1775                           ;main.c: 493: sequenceNumber++;
  1776  003CEE  2A3E               	incf	main@sequenceNumber,f,c
  1777                           
  1778                           ;main.c: 494: brightness = 0;
  1779  003CF0  6E10               	movwf	??_main& (0+255),c
  1780  003CF2  0E00               	movlw	0
  1781  003CF4  6E39               	movwf	main@brightness,c
  1782  003CF6  5010               	movf	??_main& (0+255),w,c
  1783                           
  1784                           ;main.c: 496: if (sequenceNumber == 1)
  1785  003CF8  043E               	decf	main@sequenceNumber,w,c
  1786  003CFA  A4D8               	btfss	status,2,c
  1787  003CFC  D013               	goto	l1788
  1788                           
  1789                           ;main.c: 497: {
  1790                           ;main.c: 498: sequenceNumber = 0;
  1791  003CFE  6E10               	movwf	??_main& (0+255),c
  1792  003D00  0E00               	movlw	0
  1793  003D02  6E3E               	movwf	main@sequenceNumber,c
  1794  003D04  5010               	movf	??_main& (0+255),w,c
  1795                           
  1796                           ;main.c: 499: sequenceRepeats++;
  1797  003D06  4A31               	infsnz	main@sequenceRepeats,f,c
  1798  003D08  2A32               	incf	main@sequenceRepeats+1,f,c
  1799                           
  1800                           ;main.c: 500: if (sequenceRepeats > 60)
  1801  003D0A  5032               	movf	main@sequenceRepeats+1,w,c
  1802  003D0C  0A80               	xorlw	128
  1803  003D0E  0F80               	addlw	-128
  1804  003D10  0E3D               	movlw	61
  1805  003D12  B4D8               	btfsc	status,2,c
  1806  003D14  5C31               	subwf	main@sequenceRepeats,w,c
  1807  003D16  A0D8               	btfss	status,0,c
  1808  003D18  D005               	goto	l1788
  1809                           
  1810                           ;main.c: 501: {
  1811                           ;main.c: 502: sequenceRepeats = 0;
  1812  003D1A  0E00               	movlw	0
  1813  003D1C  6E32               	movwf	main@sequenceRepeats+1,c
  1814  003D1E  0E00               	movlw	0
  1815  003D20  6E31               	movwf	main@sequenceRepeats,c
  1816                           
  1817                           ;main.c: 503: patternNumber++;
  1818  003D22  2A38               	incf	main@patternNumber,f,c
  1819  003D24                     l1788:
  1820                           
  1821                           ;main.c: 504: }
  1822                           ;main.c: 505: }
  1823                           ;main.c: 506: }
  1824                           ;main.c: 507: }
  1825                           ;main.c: 508: }
  1826                           ;main.c: 511: if (patternNumber == 4)
  1827  003D24  5038               	movf	main@patternNumber,w,c
  1828  003D26  0A04               	xorlw	4
  1829  003D28  A4D8               	btfss	status,2,c
  1830  003D2A  D06F               	goto	l1844
  1831                           
  1832                           ;main.c: 512: {
  1833                           ;main.c: 513: if (sequenceNumber == 0)
  1834  003D2C  663E               	tstfsz	main@sequenceNumber,c
  1835  003D2E  D03B               	goto	l1820
  1836                           
  1837                           ;main.c: 514: {
  1838                           ;main.c: 515: if (stepNumber == 0) highPWM = 31; else highPWM = 0;
  1839  003D30  5040               	movf	main@stepNumber+1,w,c
  1840  003D32  103F               	iorwf	main@stepNumber,w,c
  1841  003D34  A4D8               	btfss	status,2,c
  1842  003D36  D004               	goto	l1796
  1843  003D38  0E00               	movlw	0
  1844  003D3A  6E30               	movwf	main@highPWM+1,c
  1845  003D3C  0E1F               	movlw	31
  1846  003D3E  D003               	goto	L15
  1847  003D40                     l1796:
  1848  003D40  0E00               	movlw	0
  1849  003D42  6E30               	movwf	main@highPWM+1,c
  1850  003D44  0E00               	movlw	0
  1851  003D46                     L15:
  1852  003D46  6E2F               	movwf	main@highPWM,c
  1853                           
  1854                           ;main.c: 516: if (stepNumber == 1) midPWM = 31; else if (stepNumber != 3) midPWM = 0;
  1855  003D48  043F               	decf	main@stepNumber,w,c
  1856  003D4A  1040               	iorwf	main@stepNumber+1,w,c
  1857  003D4C  A4D8               	btfss	status,2,c
  1858  003D4E  D004               	goto	l1802
  1859  003D50  0E00               	movlw	0
  1860  003D52  6E37               	movwf	main@midPWM+1,c
  1861  003D54  0E1F               	movlw	31
  1862  003D56  D008               	goto	L16
  1863  003D58                     l1802:
  1864  003D58  503F               	movf	main@stepNumber,w,c
  1865  003D5A  0A03               	xorlw	3
  1866  003D5C  1040               	iorwf	main@stepNumber+1,w,c
  1867  003D5E  B4D8               	btfsc	status,2,c
  1868  003D60  D004               	goto	l1806
  1869  003D62  0E00               	movlw	0
  1870  003D64  6E37               	movwf	main@midPWM+1,c
  1871  003D66  0E00               	movlw	0
  1872  003D68                     L16:
  1873  003D68  6E36               	movwf	main@midPWM,c
  1874  003D6A                     l1806:
  1875                           
  1876                           ;main.c: 517: if (stepNumber == 2) lowPWM = 31; else lowPWM = 0;
  1877  003D6A  503F               	movf	main@stepNumber,w,c
  1878  003D6C  0A02               	xorlw	2
  1879  003D6E  1040               	iorwf	main@stepNumber+1,w,c
  1880  003D70  A4D8               	btfss	status,2,c
  1881  003D72  D004               	goto	l1810
  1882  003D74  0E00               	movlw	0
  1883  003D76  6E2E               	movwf	main@lowPWM+1,c
  1884  003D78  0E1F               	movlw	31
  1885  003D7A  D003               	goto	L17
  1886  003D7C                     l1810:
  1887  003D7C  0E00               	movlw	0
  1888  003D7E  6E2E               	movwf	main@lowPWM+1,c
  1889  003D80  0E00               	movlw	0
  1890  003D82                     L17:
  1891  003D82  6E2D               	movwf	main@lowPWM,c
  1892                           
  1893                           ;main.c: 518: if (stepNumber == 3) midPWM = 31; else if (stepNumber != 1) midPWM = 0;
  1894  003D84  503F               	movf	main@stepNumber,w,c
  1895  003D86  0A03               	xorlw	3
  1896  003D88  1040               	iorwf	main@stepNumber+1,w,c
  1897  003D8A  A4D8               	btfss	status,2,c
  1898  003D8C  D004               	goto	l1816
  1899  003D8E  0E00               	movlw	0
  1900  003D90  6E37               	movwf	main@midPWM+1,c
  1901  003D92  0E1F               	movlw	31
  1902  003D94  D007               	goto	L18
  1903  003D96                     l1816:
  1904  003D96  043F               	decf	main@stepNumber,w,c
  1905  003D98  1040               	iorwf	main@stepNumber+1,w,c
  1906  003D9A  B4D8               	btfsc	status,2,c
  1907  003D9C  D004               	goto	l1820
  1908  003D9E  0E00               	movlw	0
  1909  003DA0  6E37               	movwf	main@midPWM+1,c
  1910  003DA2  0E00               	movlw	0
  1911  003DA4                     L18:
  1912  003DA4  6E36               	movwf	main@midPWM,c
  1913  003DA6                     l1820:
  1914                           
  1915                           ;main.c: 519: }
  1916                           ;main.c: 521: if (tickCounter > 8)
  1917  003DA6  5034               	movf	main@tickCounter+1,w,c
  1918  003DA8  0A80               	xorlw	128
  1919  003DAA  0F80               	addlw	-128
  1920  003DAC  0E09               	movlw	9
  1921  003DAE  B4D8               	btfsc	status,2,c
  1922  003DB0  5C33               	subwf	main@tickCounter,w,c
  1923  003DB2  A0D8               	btfss	status,0,c
  1924  003DB4  D02A               	goto	l1844
  1925                           
  1926                           ;main.c: 522: {
  1927                           ;main.c: 523: stepNumber++;
  1928  003DB6  4A3F               	infsnz	main@stepNumber,f,c
  1929  003DB8  2A40               	incf	main@stepNumber+1,f,c
  1930                           
  1931                           ;main.c: 524: tickCounter = 0;
  1932  003DBA  0E00               	movlw	0
  1933  003DBC  6E34               	movwf	main@tickCounter+1,c
  1934  003DBE  0E00               	movlw	0
  1935  003DC0  6E33               	movwf	main@tickCounter,c
  1936                           
  1937                           ;main.c: 526: if (stepNumber == 4)
  1938  003DC2  503F               	movf	main@stepNumber,w,c
  1939  003DC4  0A04               	xorlw	4
  1940  003DC6  1040               	iorwf	main@stepNumber+1,w,c
  1941  003DC8  A4D8               	btfss	status,2,c
  1942  003DCA  D01F               	goto	l1844
  1943                           
  1944                           ;main.c: 527: {
  1945                           ;main.c: 528: stepNumber = 0;
  1946  003DCC  0E00               	movlw	0
  1947  003DCE  6E40               	movwf	main@stepNumber+1,c
  1948  003DD0  0E00               	movlw	0
  1949  003DD2  6E3F               	movwf	main@stepNumber,c
  1950                           
  1951                           ;main.c: 529: sequenceNumber++;
  1952  003DD4  2A3E               	incf	main@sequenceNumber,f,c
  1953                           
  1954                           ;main.c: 530: brightness = 0;
  1955  003DD6  6E10               	movwf	??_main& (0+255),c
  1956  003DD8  0E00               	movlw	0
  1957  003DDA  6E39               	movwf	main@brightness,c
  1958  003DDC  5010               	movf	??_main& (0+255),w,c
  1959                           
  1960                           ;main.c: 532: if (sequenceNumber == 1)
  1961  003DDE  043E               	decf	main@sequenceNumber,w,c
  1962  003DE0  A4D8               	btfss	status,2,c
  1963  003DE2  D013               	goto	l1844
  1964                           
  1965                           ;main.c: 533: {
  1966                           ;main.c: 534: sequenceNumber = 0;
  1967  003DE4  6E10               	movwf	??_main& (0+255),c
  1968  003DE6  0E00               	movlw	0
  1969  003DE8  6E3E               	movwf	main@sequenceNumber,c
  1970  003DEA  5010               	movf	??_main& (0+255),w,c
  1971                           
  1972                           ;main.c: 535: sequenceRepeats++;
  1973  003DEC  4A31               	infsnz	main@sequenceRepeats,f,c
  1974  003DEE  2A32               	incf	main@sequenceRepeats+1,f,c
  1975                           
  1976                           ;main.c: 536: if (sequenceRepeats > 100)
  1977  003DF0  5032               	movf	main@sequenceRepeats+1,w,c
  1978  003DF2  0A80               	xorlw	128
  1979  003DF4  0F80               	addlw	-128
  1980  003DF6  0E65               	movlw	101
  1981  003DF8  B4D8               	btfsc	status,2,c
  1982  003DFA  5C31               	subwf	main@sequenceRepeats,w,c
  1983  003DFC  A0D8               	btfss	status,0,c
  1984  003DFE  D005               	goto	l1844
  1985                           
  1986                           ;main.c: 537: {
  1987                           ;main.c: 538: sequenceRepeats = 0;
  1988  003E00  0E00               	movlw	0
  1989  003E02  6E32               	movwf	main@sequenceRepeats+1,c
  1990  003E04  0E00               	movlw	0
  1991  003E06  6E31               	movwf	main@sequenceRepeats,c
  1992                           
  1993                           ;main.c: 539: patternNumber++;
  1994  003E08  2A38               	incf	main@patternNumber,f,c
  1995  003E0A                     l1844:
  1996                           
  1997                           ;main.c: 540: }
  1998                           ;main.c: 541: }
  1999                           ;main.c: 542: }
  2000                           ;main.c: 543: }
  2001                           ;main.c: 544: }
  2002                           ;main.c: 547: if (patternNumber > 4) patternNumber = 0;
  2003  003E0A  0E04               	movlw	4
  2004  003E0C  6438               	cpfsgt	main@patternNumber,c
  2005  003E0E  D004               	goto	l1848
  2006  003E10  6E10               	movwf	??_main& (0+255),c
  2007  003E12  0E00               	movlw	0
  2008  003E14  6E38               	movwf	main@patternNumber,c
  2009  003E16  5010               	movf	??_main& (0+255),w,c
  2010  003E18                     l1848:
  2011                           
  2012                           ;main.c: 550: if (highPWM > PWMcount) PORTBbits.RB2 = 1; else PORTBbits.RB2 = 0;
  2013  003E18  503D               	movf	main@PWMcount+1,w,c
  2014  003E1A  0A80               	xorlw	128
  2015  003E1C  6E10               	movwf	??_main& (0+255),c
  2016  003E1E  502F               	movf	main@highPWM,w,c
  2017  003E20  5C3C               	subwf	main@PWMcount,w,c
  2018  003E22  5030               	movf	main@highPWM+1,w,c
  2019  003E24  0A80               	xorlw	128
  2020  003E26  5810               	subwfb	??_main& (0+255),w,c
  2021  003E28  B0D8               	btfsc	status,0,c
  2022  003E2A  D002               	goto	l179
  2023  003E2C  8481               	bsf	3969,2,c	;volatile
  2024  003E2E  D001               	goto	l1852
  2025  003E30                     l179:
  2026  003E30  9481               	bcf	3969,2,c	;volatile
  2027  003E32                     l1852:
  2028                           
  2029                           ;main.c: 551: if (midPWM > PWMcount) PORTBbits.RB1 = 1; else PORTBbits.RB1 = 0;
  2030  003E32  503D               	movf	main@PWMcount+1,w,c
  2031  003E34  0A80               	xorlw	128
  2032  003E36  6E10               	movwf	??_main& (0+255),c
  2033  003E38  5036               	movf	main@midPWM,w,c
  2034  003E3A  5C3C               	subwf	main@PWMcount,w,c
  2035  003E3C  5037               	movf	main@midPWM+1,w,c
  2036  003E3E  0A80               	xorlw	128
  2037  003E40  5810               	subwfb	??_main& (0+255),w,c
  2038  003E42  B0D8               	btfsc	status,0,c
  2039  003E44  D002               	goto	l181
  2040  003E46  8281               	bsf	3969,1,c	;volatile
  2041  003E48  D001               	goto	l1856
  2042  003E4A                     l181:
  2043  003E4A  9281               	bcf	3969,1,c	;volatile
  2044  003E4C                     l1856:
  2045                           
  2046                           ;main.c: 552: if (lowPWM > PWMcount) PORTBbits.RB0 = 1; else PORTBbits.RB0 = 0;
  2047  003E4C  503D               	movf	main@PWMcount+1,w,c
  2048  003E4E  0A80               	xorlw	128
  2049  003E50  6E10               	movwf	??_main& (0+255),c
  2050  003E52  502D               	movf	main@lowPWM,w,c
  2051  003E54  5C3C               	subwf	main@PWMcount,w,c
  2052  003E56  502E               	movf	main@lowPWM+1,w,c
  2053  003E58  0A80               	xorlw	128
  2054  003E5A  5810               	subwfb	??_main& (0+255),w,c
  2055  003E5C  B0D8               	btfsc	status,0,c
  2056  003E5E  D002               	goto	l183
  2057  003E60  8081               	bsf	3969,0,c	;volatile
  2058  003E62  D001               	goto	l1860
  2059  003E64                     l183:
  2060  003E64  9081               	bcf	3969,0,c	;volatile
  2061  003E66                     l1860:
  2062                           
  2063                           ;main.c: 555: PWMcount++;
  2064  003E66  4A3C               	infsnz	main@PWMcount,f,c
  2065  003E68  2A3D               	incf	main@PWMcount+1,f,c
  2066                           
  2067                           ;main.c: 556: if (PWMcount > 31) PWMcount = 0;
  2068  003E6A  503D               	movf	main@PWMcount+1,w,c
  2069  003E6C  0A80               	xorlw	128
  2070  003E6E  0F80               	addlw	-128
  2071  003E70  0E20               	movlw	32
  2072  003E72  B4D8               	btfsc	status,2,c
  2073  003E74  5C3C               	subwf	main@PWMcount,w,c
  2074  003E76  A0D8               	btfss	status,0,c
  2075  003E78  D004               	goto	l1866
  2076  003E7A  0E00               	movlw	0
  2077  003E7C  6E3D               	movwf	main@PWMcount+1,c
  2078  003E7E  0E00               	movlw	0
  2079  003E80  6E3C               	movwf	main@PWMcount,c
  2080  003E82                     l1866:
  2081                           
  2082                           ;main.c: 557: }
  2083                           ;main.c: 560: if (mode == 2)
  2084  003E82  5035               	movf	main@mode,w,c
  2085  003E84  0A02               	xorlw	2
  2086  003E86  A4D8               	btfss	status,2,c
  2087  003E88  EF90  F01A         	goto	l1318
  2088                           
  2089                           ;main.c: 561: {
  2090                           ;main.c: 563: if (fadeCounter == 0)
  2091  003E8C  5021               	movf	main@fadeCounter+1,w,c
  2092  003E8E  1020               	iorwf	main@fadeCounter,w,c
  2093  003E90  A4D8               	btfss	status,2,c
  2094  003E92  D021               	goto	l1882
  2095                           
  2096                           ;main.c: 564: {
  2097                           ;main.c: 565: if (highPWM > 0) highPWM--;
  2098  003E94  5030               	movf	main@highPWM+1,w,c
  2099  003E96  0A80               	xorlw	128
  2100  003E98  0F80               	addlw	-128
  2101  003E9A  0E01               	movlw	1
  2102  003E9C  B4D8               	btfsc	status,2,c
  2103  003E9E  5C2F               	subwf	main@highPWM,w,c
  2104  003EA0  A0D8               	btfss	status,0,c
  2105  003EA2  D003               	goto	l1874
  2106  003EA4  062F               	decf	main@highPWM,f,c
  2107  003EA6  A0D8               	btfss	status,0,c
  2108  003EA8  0630               	decf	main@highPWM+1,f,c
  2109  003EAA                     l1874:
  2110                           
  2111                           ;main.c: 566: if (midPWM > 0) midPWM--;
  2112  003EAA  5037               	movf	main@midPWM+1,w,c
  2113  003EAC  0A80               	xorlw	128
  2114  003EAE  0F80               	addlw	-128
  2115  003EB0  0E01               	movlw	1
  2116  003EB2  B4D8               	btfsc	status,2,c
  2117  003EB4  5C36               	subwf	main@midPWM,w,c
  2118  003EB6  A0D8               	btfss	status,0,c
  2119  003EB8  D003               	goto	l1878
  2120  003EBA  0636               	decf	main@midPWM,f,c
  2121  003EBC  A0D8               	btfss	status,0,c
  2122  003EBE  0637               	decf	main@midPWM+1,f,c
  2123  003EC0                     l1878:
  2124                           
  2125                           ;main.c: 567: if (lowPWM > 0) lowPWM--;
  2126  003EC0  502E               	movf	main@lowPWM+1,w,c
  2127  003EC2  0A80               	xorlw	128
  2128  003EC4  0F80               	addlw	-128
  2129  003EC6  0E01               	movlw	1
  2130  003EC8  B4D8               	btfsc	status,2,c
  2131  003ECA  5C2D               	subwf	main@lowPWM,w,c
  2132  003ECC  A0D8               	btfss	status,0,c
  2133  003ECE  D003               	goto	l1882
  2134  003ED0  062D               	decf	main@lowPWM,f,c
  2135  003ED2  A0D8               	btfss	status,0,c
  2136  003ED4  062E               	decf	main@lowPWM+1,f,c
  2137  003ED6                     l1882:
  2138                           
  2139                           ;main.c: 568: }
  2140                           ;main.c: 571: if (highLevel > 150) highPWM = 31;
  2141  003ED6  5025               	movf	main@highLevel+1,w,c
  2142  003ED8  0A80               	xorlw	128
  2143  003EDA  0F80               	addlw	-128
  2144  003EDC  0E97               	movlw	151
  2145  003EDE  B4D8               	btfsc	status,2,c
  2146  003EE0  5C24               	subwf	main@highLevel,w,c
  2147  003EE2  A0D8               	btfss	status,0,c
  2148  003EE4  D004               	goto	l1886
  2149  003EE6  0E00               	movlw	0
  2150  003EE8  6E30               	movwf	main@highPWM+1,c
  2151  003EEA  0E1F               	movlw	31
  2152  003EEC  6E2F               	movwf	main@highPWM,c
  2153  003EEE                     l1886:
  2154                           
  2155                           ;main.c: 572: if (midLevel > 520) midPWM = 31;
  2156  003EEE  5019               	movf	main@midLevel+1,w,c
  2157  003EF0  0A80               	xorlw	128
  2158  003EF2  0F7E               	addlw	-130
  2159  003EF4  0E09               	movlw	9
  2160  003EF6  B4D8               	btfsc	status,2,c
  2161  003EF8  5C18               	subwf	main@midLevel,w,c
  2162  003EFA  A0D8               	btfss	status,0,c
  2163  003EFC  D004               	goto	l1890
  2164  003EFE  0E00               	movlw	0
  2165  003F00  6E37               	movwf	main@midPWM+1,c
  2166  003F02  0E1F               	movlw	31
  2167  003F04  6E36               	movwf	main@midPWM,c
  2168  003F06                     l1890:
  2169                           
  2170                           ;main.c: 573: if (lowLevel > 470) lowPWM = 31;
  2171  003F06  501B               	movf	main@lowLevel+1,w,c
  2172  003F08  0A80               	xorlw	128
  2173  003F0A  0F7F               	addlw	-129
  2174  003F0C  0ED7               	movlw	215
  2175  003F0E  B4D8               	btfsc	status,2,c
  2176  003F10  5C1A               	subwf	main@lowLevel,w,c
  2177  003F12  A0D8               	btfss	status,0,c
  2178  003F14  D004               	goto	l1894
  2179  003F16  0E00               	movlw	0
  2180  003F18  6E2E               	movwf	main@lowPWM+1,c
  2181  003F1A  0E1F               	movlw	31
  2182  003F1C  6E2D               	movwf	main@lowPWM,c
  2183  003F1E                     l1894:
  2184                           
  2185                           ;main.c: 576: if (highPWM > PWMcount) PORTBbits.RB2 = 1; else PORTBbits.RB2 = 0;
  2186  003F1E  503D               	movf	main@PWMcount+1,w,c
  2187  003F20  0A80               	xorlw	128
  2188  003F22  6E10               	movwf	??_main& (0+255),c
  2189  003F24  502F               	movf	main@highPWM,w,c
  2190  003F26  5C3C               	subwf	main@PWMcount,w,c
  2191  003F28  5030               	movf	main@highPWM+1,w,c
  2192  003F2A  0A80               	xorlw	128
  2193  003F2C  5810               	subwfb	??_main& (0+255),w,c
  2194  003F2E  B0D8               	btfsc	status,0,c
  2195  003F30  D002               	goto	l194
  2196  003F32  8481               	bsf	3969,2,c	;volatile
  2197  003F34  D001               	goto	l1898
  2198  003F36                     l194:
  2199  003F36  9481               	bcf	3969,2,c	;volatile
  2200  003F38                     l1898:
  2201                           
  2202                           ;main.c: 577: if (midPWM > PWMcount) PORTBbits.RB1 = 1; else PORTBbits.RB1 = 0;
  2203  003F38  503D               	movf	main@PWMcount+1,w,c
  2204  003F3A  0A80               	xorlw	128
  2205  003F3C  6E10               	movwf	??_main& (0+255),c
  2206  003F3E  5036               	movf	main@midPWM,w,c
  2207  003F40  5C3C               	subwf	main@PWMcount,w,c
  2208  003F42  5037               	movf	main@midPWM+1,w,c
  2209  003F44  0A80               	xorlw	128
  2210  003F46  5810               	subwfb	??_main& (0+255),w,c
  2211  003F48  B0D8               	btfsc	status,0,c
  2212  003F4A  D002               	goto	l196
  2213  003F4C  8281               	bsf	3969,1,c	;volatile
  2214  003F4E  D001               	goto	l1902
  2215  003F50                     l196:
  2216  003F50  9281               	bcf	3969,1,c	;volatile
  2217  003F52                     l1902:
  2218                           
  2219                           ;main.c: 578: if (lowPWM > PWMcount) PORTBbits.RB0 = 1; else PORTBbits.RB0 = 0;
  2220  003F52  503D               	movf	main@PWMcount+1,w,c
  2221  003F54  0A80               	xorlw	128
  2222  003F56  6E10               	movwf	??_main& (0+255),c
  2223  003F58  502D               	movf	main@lowPWM,w,c
  2224  003F5A  5C3C               	subwf	main@PWMcount,w,c
  2225  003F5C  502E               	movf	main@lowPWM+1,w,c
  2226  003F5E  0A80               	xorlw	128
  2227  003F60  5810               	subwfb	??_main& (0+255),w,c
  2228  003F62  B0D8               	btfsc	status,0,c
  2229  003F64  D002               	goto	l198
  2230  003F66  8081               	bsf	3969,0,c	;volatile
  2231  003F68  D001               	goto	l1906
  2232  003F6A                     l198:
  2233  003F6A  9081               	bcf	3969,0,c	;volatile
  2234  003F6C                     l1906:
  2235                           
  2236                           ;main.c: 581: if (highPWM > PWMcount) PORTBbits.RB5 = 1; else PORTBbits.RB5 = 0;
  2237  003F6C  503D               	movf	main@PWMcount+1,w,c
  2238  003F6E  0A80               	xorlw	128
  2239  003F70  6E10               	movwf	??_main& (0+255),c
  2240  003F72  502F               	movf	main@highPWM,w,c
  2241  003F74  5C3C               	subwf	main@PWMcount,w,c
  2242  003F76  5030               	movf	main@highPWM+1,w,c
  2243  003F78  0A80               	xorlw	128
  2244  003F7A  5810               	subwfb	??_main& (0+255),w,c
  2245  003F7C  B0D8               	btfsc	status,0,c
  2246  003F7E  D002               	goto	l200
  2247  003F80  8A81               	bsf	3969,5,c	;volatile
  2248  003F82  D001               	goto	l1910
  2249  003F84                     l200:
  2250  003F84  9A81               	bcf	3969,5,c	;volatile
  2251  003F86                     l1910:
  2252                           
  2253                           ;main.c: 582: if (midPWM > PWMcount) PORTBbits.RB4 = 1; else PORTBbits.RB4 = 0;
  2254  003F86  503D               	movf	main@PWMcount+1,w,c
  2255  003F88  0A80               	xorlw	128
  2256  003F8A  6E10               	movwf	??_main& (0+255),c
  2257  003F8C  5036               	movf	main@midPWM,w,c
  2258  003F8E  5C3C               	subwf	main@PWMcount,w,c
  2259  003F90  5037               	movf	main@midPWM+1,w,c
  2260  003F92  0A80               	xorlw	128
  2261  003F94  5810               	subwfb	??_main& (0+255),w,c
  2262  003F96  B0D8               	btfsc	status,0,c
  2263  003F98  D002               	goto	l202
  2264  003F9A  8881               	bsf	3969,4,c	;volatile
  2265  003F9C  D001               	goto	l1914
  2266  003F9E                     l202:
  2267  003F9E  9881               	bcf	3969,4,c	;volatile
  2268  003FA0                     l1914:
  2269                           
  2270                           ;main.c: 583: if (lowPWM > PWMcount) PORTBbits.RB3 = 1; else PORTBbits.RB3 = 0;
  2271  003FA0  503D               	movf	main@PWMcount+1,w,c
  2272  003FA2  0A80               	xorlw	128
  2273  003FA4  6E10               	movwf	??_main& (0+255),c
  2274  003FA6  502D               	movf	main@lowPWM,w,c
  2275  003FA8  5C3C               	subwf	main@PWMcount,w,c
  2276  003FAA  502E               	movf	main@lowPWM+1,w,c
  2277  003FAC  0A80               	xorlw	128
  2278  003FAE  5810               	subwfb	??_main& (0+255),w,c
  2279  003FB0  B0D8               	btfsc	status,0,c
  2280  003FB2  D002               	goto	l204
  2281  003FB4  8681               	bsf	3969,3,c	;volatile
  2282  003FB6  D001               	goto	l1918
  2283  003FB8                     l204:
  2284  003FB8  9681               	bcf	3969,3,c	;volatile
  2285  003FBA                     l1918:
  2286                           
  2287                           ;main.c: 586: PWMcount++;
  2288  003FBA  4A3C               	infsnz	main@PWMcount,f,c
  2289  003FBC  2A3D               	incf	main@PWMcount+1,f,c
  2290                           
  2291                           ;main.c: 587: if (PWMcount > 31) PWMcount = 0;
  2292  003FBE  503D               	movf	main@PWMcount+1,w,c
  2293  003FC0  0A80               	xorlw	128
  2294  003FC2  0F80               	addlw	-128
  2295  003FC4  0E20               	movlw	32
  2296  003FC6  B4D8               	btfsc	status,2,c
  2297  003FC8  5C3C               	subwf	main@PWMcount,w,c
  2298  003FCA  A0D8               	btfss	status,0,c
  2299  003FCC  D004               	goto	l1924
  2300  003FCE  0E00               	movlw	0
  2301  003FD0  6E3D               	movwf	main@PWMcount+1,c
  2302  003FD2  0E00               	movlw	0
  2303  003FD4  6E3C               	movwf	main@PWMcount,c
  2304  003FD6                     l1924:
  2305                           
  2306                           ;main.c: 590: fadeCounter++;
  2307  003FD6  4A20               	infsnz	main@fadeCounter,f,c
  2308  003FD8  2A21               	incf	main@fadeCounter+1,f,c
  2309                           
  2310                           ;main.c: 591: if (fadeCounter > 30) fadeCounter = 0;
  2311  003FDA  5021               	movf	main@fadeCounter+1,w,c
  2312  003FDC  0A80               	xorlw	128
  2313  003FDE  0F80               	addlw	-128
  2314  003FE0  0E1F               	movlw	31
  2315  003FE2  B4D8               	btfsc	status,2,c
  2316  003FE4  5C20               	subwf	main@fadeCounter,w,c
  2317  003FE6  A0D8               	btfss	status,0,c
  2318  003FE8  EF90  F01A         	goto	l1318
  2319  003FEC  0E00               	movlw	0
  2320  003FEE  6E21               	movwf	main@fadeCounter+1,c
  2321  003FF0  0E00               	movlw	0
  2322  003FF2  6E20               	movwf	main@fadeCounter,c
  2323  003FF4  EF90  F01A         	goto	l1318
  2324  003FF8                     __end_of_main:
  2325                           	opt stack 0
  2326                           prodl	equ	0xFF3
  2327                           intcon	equ	0xFF2
  2328                           status	equ	0xFD8
  2329                           
  2330                           	psect	cinit
  2331  003282                     __pcinit:
  2332                           	opt stack 0
  2333  003282                     start_initialization:
  2334                           	opt stack 0
  2335  003282                     __initialization:
  2336                           	opt stack 0
  2337                           
  2338                           ; Clear objects allocated to BANK0 (128 bytes)
  2339  003282  EE00  F080         	lfsr	0,__pbssBANK0
  2340  003286  0E80               	movlw	128
  2341  003288                     clear_0:
  2342  003288  6AEE               	clrf	postinc0,c
  2343  00328A  06E8               	decf	wreg,f,c
  2344  00328C  E1FD               	bnz	clear_0
  2345                           
  2346                           ; Clear objects allocated to COMRAM (5 bytes)
  2347  00328E  6A45               	clrf	(__pbssCOMRAM+4)& (0+255),c
  2348  003290  6A44               	clrf	(__pbssCOMRAM+3)& (0+255),c
  2349  003292  6A43               	clrf	(__pbssCOMRAM+2)& (0+255),c
  2350  003294  6A42               	clrf	(__pbssCOMRAM+1)& (0+255),c
  2351  003296  6A41               	clrf	__pbssCOMRAM& (0+255),c
  2352  003298                     end_of_initialization:
  2353                           	opt stack 0
  2354  003298                     __end_of__initialization:
  2355                           	opt stack 0
  2356  003298  0E00               	movlw	low (__Lmediumconst shr (0+16))
  2357  00329A  6EF8               	movwf	tblptru,c
  2358  00329C  0100               	movlb	0
  2359  00329E  EF0E  F01A         	goto	_main	;jump to C main() function
  2360                           tblptru	equ	0xFF8
  2361                           prodl	equ	0xFF3
  2362                           intcon	equ	0xFF2
  2363                           postinc0	equ	0xFEE
  2364                           wreg	equ	0xFE8
  2365                           status	equ	0xFD8
  2366                           
  2367                           	psect	bssCOMRAM
  2368  000041                     __pbssCOMRAM:
  2369                           	opt stack 0
  2370  000041                     _randx:
  2371                           	opt stack 0
  2372  000041                     	ds	4
  2373  000045                     _randf:
  2374                           	opt stack 0
  2375  000045                     	ds	1
  2376                           tblptru	equ	0xFF8
  2377                           prodl	equ	0xFF3
  2378                           intcon	equ	0xFF2
  2379                           postinc0	equ	0xFEE
  2380                           wreg	equ	0xFE8
  2381                           status	equ	0xFD8
  2382                           
  2383                           	psect	bssBANK0
  2384  000080                     __pbssBANK0:
  2385                           	opt stack 0
  2386  000080                     _led_strip_colors:
  2387                           	opt stack 0
  2388  000080                     	ds	128
  2389                           tblptru	equ	0xFF8
  2390                           prodl	equ	0xFF3
  2391                           intcon	equ	0xFF2
  2392                           postinc0	equ	0xFEE
  2393                           wreg	equ	0xFE8
  2394                           status	equ	0xFD8
  2395                           
  2396                           	psect	cstackCOMRAM
  2397  000001                     __pcstackCOMRAM:
  2398                           	opt stack 0
  2399  000001                     ?_readMyADC:
  2400                           	opt stack 0
  2401  000001                     ?___aldiv:
  2402                           	opt stack 0
  2403  000001                     setGainLevel@gainLevel:
  2404                           	opt stack 0
  2405  000001                     ___aldiv@dividend:
  2406                           	opt stack 0
  2407                           
  2408                           ; 4 bytes @ 0x0
  2409  000001                     	ds	2
  2410  000003                     readMyADC@result:
  2411                           	opt stack 0
  2412                           
  2413                           ; 2 bytes @ 0x2
  2414  000003                     	ds	2
  2415  000005                     readMyADC@ADCnumber:
  2416                           	opt stack 0
  2417  000005                     ___aldiv@divisor:
  2418                           	opt stack 0
  2419                           
  2420                           ; 4 bytes @ 0x4
  2421  000005                     	ds	4
  2422  000009                     ??___aldiv:
  2423                           
  2424                           ; 0 bytes @ 0x8
  2425  000009                     	ds	1
  2426  00000A                     ___aldiv@counter:
  2427                           	opt stack 0
  2428                           
  2429                           ; 1 bytes @ 0x9
  2430  00000A                     	ds	1
  2431  00000B                     ___aldiv@sign:
  2432                           	opt stack 0
  2433                           
  2434                           ; 1 bytes @ 0xA
  2435  00000B                     	ds	1
  2436  00000C                     ___aldiv@quotient:
  2437                           	opt stack 0
  2438                           
  2439                           ; 4 bytes @ 0xB
  2440  00000C                     	ds	4
  2441  000010                     ??_main:
  2442                           
  2443                           ; 0 bytes @ 0xF
  2444  000010                     	ds	4
  2445  000014                     main@total:
  2446                           	opt stack 0
  2447                           
  2448                           ; 4 bytes @ 0x13
  2449  000014                     	ds	4
  2450  000018                     main@midLevel:
  2451                           	opt stack 0
  2452                           
  2453                           ; 2 bytes @ 0x17
  2454  000018                     	ds	2
  2455  00001A                     main@lowLevel:
  2456                           	opt stack 0
  2457                           
  2458                           ; 2 bytes @ 0x19
  2459  00001A                     	ds	2
  2460  00001C                     main@mainLevel:
  2461                           	opt stack 0
  2462                           
  2463                           ; 2 bytes @ 0x1B
  2464  00001C                     	ds	2
  2465  00001E                     main@sampleCount:
  2466                           	opt stack 0
  2467                           
  2468                           ; 2 bytes @ 0x1D
  2469  00001E                     	ds	2
  2470  000020                     main@fadeCounter:
  2471                           	opt stack 0
  2472                           
  2473                           ; 2 bytes @ 0x1F
  2474  000020                     	ds	2
  2475  000022                     main@soundDetectedCount:
  2476                           	opt stack 0
  2477                           
  2478                           ; 2 bytes @ 0x21
  2479  000022                     	ds	2
  2480  000024                     main@highLevel:
  2481                           	opt stack 0
  2482                           
  2483                           ; 2 bytes @ 0x23
  2484  000024                     	ds	2
  2485  000026                     main@soundFlag:
  2486                           	opt stack 0
  2487                           
  2488                           ; 1 bytes @ 0x25
  2489  000026                     	ds	1
  2490  000027                     main@average:
  2491                           	opt stack 0
  2492                           
  2493                           ; 2 bytes @ 0x26
  2494  000027                     	ds	2
  2495  000029                     main@clapCounter:
  2496                           	opt stack 0
  2497                           
  2498                           ; 2 bytes @ 0x28
  2499  000029                     	ds	2
  2500  00002B                     main@currentGainLevel:
  2501                           	opt stack 0
  2502                           
  2503                           ; 2 bytes @ 0x2A
  2504  00002B                     	ds	2
  2505  00002D                     main@lowPWM:
  2506                           	opt stack 0
  2507                           
  2508                           ; 2 bytes @ 0x2C
  2509  00002D                     	ds	2
  2510  00002F                     main@highPWM:
  2511                           	opt stack 0
  2512                           
  2513                           ; 2 bytes @ 0x2E
  2514  00002F                     	ds	2
  2515  000031                     main@sequenceRepeats:
  2516                           	opt stack 0
  2517                           
  2518                           ; 2 bytes @ 0x30
  2519  000031                     	ds	2
  2520  000033                     main@tickCounter:
  2521                           	opt stack 0
  2522                           
  2523                           ; 2 bytes @ 0x32
  2524  000033                     	ds	2
  2525  000035                     main@mode:
  2526                           	opt stack 0
  2527                           
  2528                           ; 1 bytes @ 0x34
  2529  000035                     	ds	1
  2530  000036                     main@midPWM:
  2531                           	opt stack 0
  2532                           
  2533                           ; 2 bytes @ 0x35
  2534  000036                     	ds	2
  2535  000038                     main@patternNumber:
  2536                           	opt stack 0
  2537                           
  2538                           ; 1 bytes @ 0x37
  2539  000038                     	ds	1
  2540  000039                     main@brightness:
  2541                           	opt stack 0
  2542                           
  2543                           ; 1 bytes @ 0x38
  2544  000039                     	ds	1
  2545  00003A                     main@currentStep:
  2546                           	opt stack 0
  2547                           
  2548                           ; 2 bytes @ 0x39
  2549  00003A                     	ds	2
  2550  00003C                     main@PWMcount:
  2551                           	opt stack 0
  2552                           
  2553                           ; 2 bytes @ 0x3B
  2554  00003C                     	ds	2
  2555  00003E                     main@sequenceNumber:
  2556                           	opt stack 0
  2557                           
  2558                           ; 1 bytes @ 0x3D
  2559  00003E                     	ds	1
  2560  00003F                     main@stepNumber:
  2561                           	opt stack 0
  2562                           
  2563                           ; 2 bytes @ 0x3E
  2564  00003F                     	ds	2
  2565                           tblptru	equ	0xFF8
  2566                           prodl	equ	0xFF3
  2567                           intcon	equ	0xFF2
  2568                           postinc0	equ	0xFEE
  2569                           wreg	equ	0xFE8
  2570                           status	equ	0xFD8
  2571                           
  2572 ;; *************** function _setupSPI *****************
  2573 ;; Defined at:
  2574 ;;		line 3 in file "spi.c"
  2575 ;; Parameters:    Size  Location     Type
  2576 ;;		None
  2577 ;; Auto vars:     Size  Location     Type
  2578 ;;		None
  2579 ;; Return value:  Size  Location     Type
  2580 ;;		None               void
  2581 ;; Registers used:
  2582 ;;		wreg, status,2
  2583 ;; Tracked objects:
  2584 ;;		On entry : 0/0
  2585 ;;		On exit  : 0/0
  2586 ;;		Unchanged: 0/0
  2587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2588 ;;      Params:         0       0       0       0       0
  2589 ;;      Locals:         0       0       0       0       0
  2590 ;;      Temps:          0       0       0       0       0
  2591 ;;      Totals:         0       0       0       0       0
  2592 ;;Total ram usage:        0 bytes
  2593 ;; Hardware stack levels used:    1
  2594 ;; This function calls:
  2595 ;;		Nothing
  2596 ;; This function is called by:
  2597 ;;		_main
  2598 ;; This function uses a non-reentrant model
  2599 ;;
  2600                           
  2601                           	psect	text1
  2602  00326E                     __ptext1:
  2603                           	opt stack 0
  2604  00326E                     _setupSPI:
  2605                           	opt stack 30
  2606                           
  2607                           ;spi.c: 6: TRISCbits.TRISC5 = 0;
  2608                           
  2609                           ;incstack = 0
  2610  00326E  9A94               	bcf	3988,5,c	;volatile
  2611                           
  2612                           ;spi.c: 7: TRISCbits.TRISC4 = 1;
  2613  003270  8894               	bsf	3988,4,c	;volatile
  2614                           
  2615                           ;spi.c: 8: TRISCbits.TRISC3 = 0;
  2616  003272  9694               	bcf	3988,3,c	;volatile
  2617                           
  2618                           ;spi.c: 11: TRISCbits.TRISC0 = 0;
  2619  003274  9094               	bcf	3988,0,c	;volatile
  2620                           
  2621                           ;spi.c: 12: PORTCbits.RC0 = 1;
  2622  003276  8082               	bsf	3970,0,c	;volatile
  2623                           
  2624                           ;spi.c: 15: SSPSTAT = 0x40;
  2625  003278  0E40               	movlw	64
  2626  00327A  6EC7               	movwf	4039,c	;volatile
  2627                           
  2628                           ;spi.c: 16: SSPCON1 = 0x20;
  2629  00327C  0E20               	movlw	32
  2630  00327E  6EC6               	movwf	4038,c	;volatile
  2631  003280  0012               	return	
  2632  003282                     __end_of_setupSPI:
  2633                           	opt stack 0
  2634                           tblptru	equ	0xFF8
  2635                           prodl	equ	0xFF3
  2636                           intcon	equ	0xFF2
  2637                           postinc0	equ	0xFEE
  2638                           wreg	equ	0xFE8
  2639                           status	equ	0xFD8
  2640                           
  2641 ;; *************** function _setGainLevel *****************
  2642 ;; Defined at:
  2643 ;;		line 21 in file "spi.c"
  2644 ;; Parameters:    Size  Location     Type
  2645 ;;  gainLevel       1    wreg     unsigned char 
  2646 ;; Auto vars:     Size  Location     Type
  2647 ;;  gainLevel       1    0[COMRAM] unsigned char 
  2648 ;; Return value:  Size  Location     Type
  2649 ;;		None               void
  2650 ;; Registers used:
  2651 ;;		wreg, status,2
  2652 ;; Tracked objects:
  2653 ;;		On entry : 0/0
  2654 ;;		On exit  : 0/0
  2655 ;;		Unchanged: 0/0
  2656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2657 ;;      Params:         0       0       0       0       0
  2658 ;;      Locals:         1       0       0       0       0
  2659 ;;      Temps:          0       0       0       0       0
  2660 ;;      Totals:         1       0       0       0       0
  2661 ;;Total ram usage:        1 bytes
  2662 ;; Hardware stack levels used:    1
  2663 ;; This function calls:
  2664 ;;		Nothing
  2665 ;; This function is called by:
  2666 ;;		_main
  2667 ;; This function uses a non-reentrant model
  2668 ;;
  2669                           
  2670                           	psect	text2
  2671  0032A2                     __ptext2:
  2672                           	opt stack 0
  2673  0032A2                     _setGainLevel:
  2674                           	opt stack 30
  2675                           
  2676                           ;incstack = 0
  2677                           ;setGainLevel@gainLevel stored from wreg
  2678  0032A2  CFE8 F001          	movff	wreg,setGainLevel@gainLevel
  2679                           
  2680                           ;spi.c: 24: SSPSTAT = 0xC0;
  2681  0032A6  0EC0               	movlw	192
  2682  0032A8  6EC7               	movwf	4039,c	;volatile
  2683                           
  2684                           ;spi.c: 27: SSPCON1 = 0x20;
  2685  0032AA  0E20               	movlw	32
  2686  0032AC  6EC6               	movwf	4038,c	;volatile
  2687                           
  2688                           ;spi.c: 31: PORTCbits.RC0 = 0;
  2689  0032AE  9082               	bcf	3970,0,c	;volatile
  2690                           
  2691                           ;spi.c: 34: SSPIF = 0;
  2692  0032B0  969E               	bcf	3998,3,c	;volatile
  2693                           
  2694                           ;spi.c: 35: SSPBUF = 0x13;
  2695  0032B2  0E13               	movlw	19
  2696  0032B4  6EC9               	movwf	4041,c	;volatile
  2697  0032B6                     l301:
  2698  0032B6  A69E               	btfss	3998,3,c	;volatile
  2699  0032B8  D7FE               	goto	l301
  2700                           
  2701                           ;spi.c: 39: SSPIF = 0;
  2702  0032BA  969E               	bcf	3998,3,c	;volatile
  2703                           
  2704                           ;spi.c: 40: SSPBUF = gainLevel;
  2705  0032BC  C001  FFC9         	movff	setGainLevel@gainLevel,4041	;volatile
  2706  0032C0                     l304:
  2707  0032C0  A69E               	btfss	3998,3,c	;volatile
  2708  0032C2  D7FE               	goto	l304
  2709                           
  2710                           ;spi.c: 44: PORTCbits.RC0 = 1;
  2711  0032C4  8082               	bsf	3970,0,c	;volatile
  2712  0032C6  0012               	return	
  2713  0032C8                     __end_of_setGainLevel:
  2714                           	opt stack 0
  2715                           tblptru	equ	0xFF8
  2716                           prodl	equ	0xFF3
  2717                           intcon	equ	0xFF2
  2718                           postinc0	equ	0xFEE
  2719                           wreg	equ	0xFE8
  2720                           status	equ	0xFD8
  2721                           
  2722 ;; *************** function _readMyADC *****************
  2723 ;; Defined at:
  2724 ;;		line 597 in file "main.c"
  2725 ;; Parameters:    Size  Location     Type
  2726 ;;  ADCnumber       1    wreg     unsigned char 
  2727 ;; Auto vars:     Size  Location     Type
  2728 ;;  ADCnumber       1    4[COMRAM] unsigned char 
  2729 ;;  result          2    2[COMRAM] int 
  2730 ;; Return value:  Size  Location     Type
  2731 ;;                  2    0[COMRAM] int 
  2732 ;; Registers used:
  2733 ;;		wreg, status,2, status,0
  2734 ;; Tracked objects:
  2735 ;;		On entry : 0/0
  2736 ;;		On exit  : 0/0
  2737 ;;		Unchanged: 0/0
  2738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2739 ;;      Params:         2       0       0       0       0
  2740 ;;      Locals:         3       0       0       0       0
  2741 ;;      Temps:          0       0       0       0       0
  2742 ;;      Totals:         5       0       0       0       0
  2743 ;;Total ram usage:        5 bytes
  2744 ;; Hardware stack levels used:    1
  2745 ;; This function calls:
  2746 ;;		Nothing
  2747 ;; This function is called by:
  2748 ;;		_main
  2749 ;; This function uses a non-reentrant model
  2750 ;;
  2751                           
  2752                           	psect	text3
  2753  0032C8                     __ptext3:
  2754                           	opt stack 0
  2755  0032C8                     _readMyADC:
  2756                           	opt stack 30
  2757                           
  2758                           ;incstack = 0
  2759                           ;readMyADC@ADCnumber stored from wreg
  2760  0032C8  CFE8 F005          	movff	wreg,readMyADC@ADCnumber
  2761                           
  2762                           ;main.c: 599: int result;
  2763                           ;main.c: 602: switch(ADCnumber)
  2764  0032CC  D009               	goto	l1012
  2765  0032CE                     l1002:
  2766  0032CE  0E01               	movlw	1
  2767  0032D0  D005               	goto	L21
  2768  0032D2                     l1004:
  2769  0032D2  0E05               	movlw	5
  2770  0032D4  D003               	goto	L21
  2771  0032D6                     l1006:
  2772  0032D6  0E09               	movlw	9
  2773  0032D8  D001               	goto	L21
  2774  0032DA                     l1008:
  2775  0032DA  0E0D               	movlw	13
  2776  0032DC                     L21:
  2777  0032DC  6EC2               	movwf	4034,c	;volatile
  2778                           
  2779                           ;main.c: 611: break;
  2780  0032DE  D00D               	goto	l1014
  2781  0032E0                     l1012:
  2782  0032E0  5005               	movf	readMyADC@ADCnumber,w,c
  2783                           
  2784                           ; Switch size 1, requested type "space"
  2785                           ; Number of cases is 4, Range of values is 0 to 3
  2786                           ; switch strategies available:
  2787                           ; Name         Instructions Cycles
  2788                           ; simple_byte           13     7 (average)
  2789                           ;	Chosen strategy is simple_byte
  2790  0032E2  0A00               	xorlw	0	; case 0
  2791  0032E4  B4D8               	btfsc	status,2,c
  2792  0032E6  D7F3               	goto	l1002
  2793  0032E8  0A01               	xorlw	1	; case 1
  2794  0032EA  B4D8               	btfsc	status,2,c
  2795  0032EC  D7F2               	goto	l1004
  2796  0032EE  0A03               	xorlw	3	; case 2
  2797  0032F0  B4D8               	btfsc	status,2,c
  2798  0032F2  D7F1               	goto	l1006
  2799  0032F4  0A01               	xorlw	1	; case 3
  2800  0032F6  B4D8               	btfsc	status,2,c
  2801  0032F8  D7F0               	goto	l1008
  2802  0032FA                     l1014:
  2803                           
  2804                           ;main.c: 615: ADCON0 |= 0x02;
  2805  0032FA  82C2               	bsf	4034,1,c	;volatile
  2806  0032FC                     l219:
  2807  0032FC  B2C2               	btfsc	4034,1,c	;volatile
  2808  0032FE  D7FE               	goto	l219
  2809                           
  2810                           ;main.c: 621: result = ADRESL;
  2811  003300  CFC3 F003          	movff	4035,readMyADC@result	;volatile
  2812  003304  6A04               	clrf	readMyADC@result+1,c
  2813                           
  2814                           ;main.c: 622: result += (ADRESH << 8);
  2815  003306  50C4               	movf	4036,w,c	;volatile
  2816  003308  2604               	addwf	readMyADC@result+1,f,c
  2817                           
  2818                           ;main.c: 624: return result;
  2819  00330A  C003  F001         	movff	readMyADC@result,?_readMyADC
  2820  00330E  C004  F002         	movff	readMyADC@result+1,?_readMyADC+1
  2821  003312  0012               	return	
  2822  003314                     __end_of_readMyADC:
  2823                           	opt stack 0
  2824                           tblptru	equ	0xFF8
  2825                           prodl	equ	0xFF3
  2826                           intcon	equ	0xFF2
  2827                           postinc0	equ	0xFEE
  2828                           wreg	equ	0xFE8
  2829                           status	equ	0xFD8
  2830                           
  2831 ;; *************** function ___aldiv *****************
  2832 ;; Defined at:
  2833 ;;		line 8 in file "/opt/microchip/xc8/v1.30/sources/common/aldiv.c"
  2834 ;; Parameters:    Size  Location     Type
  2835 ;;  dividend        4    0[COMRAM] long 
  2836 ;;  divisor         4    4[COMRAM] long 
  2837 ;; Auto vars:     Size  Location     Type
  2838 ;;  quotient        4   11[COMRAM] long 
  2839 ;;  sign            1   10[COMRAM] unsigned char 
  2840 ;;  counter         1    9[COMRAM] unsigned char 
  2841 ;; Return value:  Size  Location     Type
  2842 ;;                  4    0[COMRAM] long 
  2843 ;; Registers used:
  2844 ;;		wreg, status,2, status,0
  2845 ;; Tracked objects:
  2846 ;;		On entry : 0/0
  2847 ;;		On exit  : 0/0
  2848 ;;		Unchanged: 0/0
  2849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2850 ;;      Params:         8       0       0       0       0
  2851 ;;      Locals:         6       0       0       0       0
  2852 ;;      Temps:          1       0       0       0       0
  2853 ;;      Totals:        15       0       0       0       0
  2854 ;;Total ram usage:       15 bytes
  2855 ;; Hardware stack levels used:    1
  2856 ;; This function calls:
  2857 ;;		Nothing
  2858 ;; This function is called by:
  2859 ;;		_main
  2860 ;; This function uses a non-reentrant model
  2861 ;;
  2862                           
  2863                           	psect	text4
  2864  003314                     __ptext4:
  2865                           	opt stack 0
  2866  003314                     ___aldiv:
  2867                           	opt stack 30
  2868                           
  2869                           ;incstack = 0
  2870  003314  6E09               	movwf	??___aldiv& (0+255),c
  2871  003316  0E00               	movlw	0
  2872  003318  6E0B               	movwf	___aldiv@sign,c
  2873  00331A  5009               	movf	??___aldiv& (0+255),w,c
  2874  00331C  5008               	movf	___aldiv@divisor+3,w,c
  2875  00331E  0A80               	xorlw	128
  2876  003320  0F80               	addlw	128
  2877  003322  E108               	bnz	u425
  2878  003324  0E00               	movlw	0
  2879  003326  5C07               	subwf	___aldiv@divisor+2,w,c
  2880  003328  E105               	bnz	u425
  2881  00332A  0E00               	movlw	0
  2882  00332C  5C06               	subwf	___aldiv@divisor+1,w,c
  2883  00332E  E102               	bnz	u425
  2884  003330  0E00               	movlw	0
  2885  003332  5C05               	subwf	___aldiv@divisor,w,c
  2886  003334                     u425:
  2887  003334  B0D8               	btfsc	status,0,c
  2888  003336  D00C               	goto	l1244
  2889  003338  1E08               	comf	___aldiv@divisor+3,f,c
  2890  00333A  1E07               	comf	___aldiv@divisor+2,f,c
  2891  00333C  1E06               	comf	___aldiv@divisor+1,f,c
  2892  00333E  6C05               	negf	___aldiv@divisor,c
  2893  003340  0E00               	movlw	0
  2894  003342  2206               	addwfc	___aldiv@divisor+1,f,c
  2895  003344  2207               	addwfc	___aldiv@divisor+2,f,c
  2896  003346  2208               	addwfc	___aldiv@divisor+3,f,c
  2897  003348  6E09               	movwf	??___aldiv& (0+255),c
  2898  00334A  0E01               	movlw	1
  2899  00334C  6E0B               	movwf	___aldiv@sign,c
  2900  00334E  5009               	movf	??___aldiv& (0+255),w,c
  2901  003350                     l1244:
  2902  003350  5004               	movf	___aldiv@dividend+3,w,c
  2903  003352  0A80               	xorlw	128
  2904  003354  0F80               	addlw	128
  2905  003356  E108               	bnz	u435
  2906  003358  0E00               	movlw	0
  2907  00335A  5C03               	subwf	___aldiv@dividend+2,w,c
  2908  00335C  E105               	bnz	u435
  2909  00335E  0E00               	movlw	0
  2910  003360  5C02               	subwf	___aldiv@dividend+1,w,c
  2911  003362  E102               	bnz	u435
  2912  003364  0E00               	movlw	0
  2913  003366  5C01               	subwf	___aldiv@dividend,w,c
  2914  003368                     u435:
  2915  003368  B0D8               	btfsc	status,0,c
  2916  00336A  D00A               	goto	l1250
  2917  00336C  1E04               	comf	___aldiv@dividend+3,f,c
  2918  00336E  1E03               	comf	___aldiv@dividend+2,f,c
  2919  003370  1E02               	comf	___aldiv@dividend+1,f,c
  2920  003372  6C01               	negf	___aldiv@dividend,c
  2921  003374  0E00               	movlw	0
  2922  003376  2202               	addwfc	___aldiv@dividend+1,f,c
  2923  003378  2203               	addwfc	___aldiv@dividend+2,f,c
  2924  00337A  2204               	addwfc	___aldiv@dividend+3,f,c
  2925  00337C  0E01               	movlw	1
  2926  00337E  1A0B               	xorwf	___aldiv@sign,f,c
  2927  003380                     l1250:
  2928  003380  0E00               	movlw	0
  2929  003382  6E0C               	movwf	___aldiv@quotient,c
  2930  003384  0E00               	movlw	0
  2931  003386  6E0D               	movwf	___aldiv@quotient+1,c
  2932  003388  0E00               	movlw	0
  2933  00338A  6E0E               	movwf	___aldiv@quotient+2,c
  2934  00338C  0E00               	movlw	0
  2935  00338E  6E0F               	movwf	___aldiv@quotient+3,c
  2936  003390  5008               	movf	___aldiv@divisor+3,w,c
  2937  003392  1005               	iorwf	___aldiv@divisor,w,c
  2938  003394  1006               	iorwf	___aldiv@divisor+1,w,c
  2939  003396  1007               	iorwf	___aldiv@divisor+2,w,c
  2940  003398  B4D8               	btfsc	status,2,c
  2941  00339A  D02C               	goto	l1272
  2942  00339C  6E09               	movwf	??___aldiv& (0+255),c
  2943  00339E  0E01               	movlw	1
  2944  0033A0  6E0A               	movwf	___aldiv@counter,c
  2945  0033A2  5009               	movf	??___aldiv& (0+255),w,c
  2946  0033A4  D006               	goto	l1258
  2947  0033A6                     l1256:
  2948  0033A6  90D8               	bcf	status,0,c
  2949  0033A8  3605               	rlcf	___aldiv@divisor,f,c
  2950  0033AA  3606               	rlcf	___aldiv@divisor+1,f,c
  2951  0033AC  3607               	rlcf	___aldiv@divisor+2,f,c
  2952  0033AE  3608               	rlcf	___aldiv@divisor+3,f,c
  2953  0033B0  2A0A               	incf	___aldiv@counter,f,c
  2954  0033B2                     l1258:
  2955  0033B2  AE08               	btfss	___aldiv@divisor+3,7,c
  2956  0033B4  D7F8               	goto	l1256
  2957  0033B6                     l1260:
  2958  0033B6  90D8               	bcf	status,0,c
  2959  0033B8  360C               	rlcf	___aldiv@quotient,f,c
  2960  0033BA  360D               	rlcf	___aldiv@quotient+1,f,c
  2961  0033BC  360E               	rlcf	___aldiv@quotient+2,f,c
  2962  0033BE  360F               	rlcf	___aldiv@quotient+3,f,c
  2963  0033C0  5005               	movf	___aldiv@divisor,w,c
  2964  0033C2  5C01               	subwf	___aldiv@dividend,w,c
  2965  0033C4  5006               	movf	___aldiv@divisor+1,w,c
  2966  0033C6  5802               	subwfb	___aldiv@dividend+1,w,c
  2967  0033C8  5007               	movf	___aldiv@divisor+2,w,c
  2968  0033CA  5803               	subwfb	___aldiv@dividend+2,w,c
  2969  0033CC  5008               	movf	___aldiv@divisor+3,w,c
  2970  0033CE  5804               	subwfb	___aldiv@dividend+3,w,c
  2971  0033D0  A0D8               	btfss	status,0,c
  2972  0033D2  D009               	goto	l1268
  2973  0033D4  5005               	movf	___aldiv@divisor,w,c
  2974  0033D6  5E01               	subwf	___aldiv@dividend,f,c
  2975  0033D8  5006               	movf	___aldiv@divisor+1,w,c
  2976  0033DA  5A02               	subwfb	___aldiv@dividend+1,f,c
  2977  0033DC  5007               	movf	___aldiv@divisor+2,w,c
  2978  0033DE  5A03               	subwfb	___aldiv@dividend+2,f,c
  2979  0033E0  5008               	movf	___aldiv@divisor+3,w,c
  2980  0033E2  5A04               	subwfb	___aldiv@dividend+3,f,c
  2981  0033E4  800C               	bsf	___aldiv@quotient,0,c
  2982  0033E6                     l1268:
  2983  0033E6  90D8               	bcf	status,0,c
  2984  0033E8  3208               	rrcf	___aldiv@divisor+3,f,c
  2985  0033EA  3207               	rrcf	___aldiv@divisor+2,f,c
  2986  0033EC  3206               	rrcf	___aldiv@divisor+1,f,c
  2987  0033EE  3205               	rrcf	___aldiv@divisor,f,c
  2988  0033F0  2E0A               	decfsz	___aldiv@counter,f,c
  2989  0033F2  D7E1               	goto	l1260
  2990  0033F4                     l1272:
  2991  0033F4  500B               	movf	___aldiv@sign,w,c
  2992  0033F6  B4D8               	btfsc	status,2,c
  2993  0033F8  D008               	goto	l1276
  2994  0033FA  1E0F               	comf	___aldiv@quotient+3,f,c
  2995  0033FC  1E0E               	comf	___aldiv@quotient+2,f,c
  2996  0033FE  1E0D               	comf	___aldiv@quotient+1,f,c
  2997  003400  6C0C               	negf	___aldiv@quotient,c
  2998  003402  0E00               	movlw	0
  2999  003404  220D               	addwfc	___aldiv@quotient+1,f,c
  3000  003406  220E               	addwfc	___aldiv@quotient+2,f,c
  3001  003408  220F               	addwfc	___aldiv@quotient+3,f,c
  3002  00340A                     l1276:
  3003  00340A  C00C  F001         	movff	___aldiv@quotient,?___aldiv
  3004  00340E  C00D  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  3005  003412  C00E  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  3006  003416  C00F  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  3007  00341A  0012               	return	
  3008  00341C                     __end_of___aldiv:
  3009                           	opt stack 0
  3010  0000                     tblptru	equ	0xFF8
  3011                           prodl	equ	0xFF3
  3012                           intcon	equ	0xFF2
  3013                           postinc0	equ	0xFEE
  3014                           wreg	equ	0xFE8
  3015                           status	equ	0xFD8
  3016                           tblptru	equ	0xFF8
  3017                           prodl	equ	0xFF3
  3018                           intcon	equ	0xFF2
  3019                           postinc0	equ	0xFEE
  3020                           wreg	equ	0xFE8
  3021                           status	equ	0xFD8
  3022                           
  3023                           	psect	rparam
  3024  0000                     tblptru	equ	0xFF8
  3025                           prodl	equ	0xFF3
  3026                           intcon	equ	0xFF2
  3027                           postinc0	equ	0xFEE
  3028                           wreg	equ	0xFE8
  3029                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         133
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     64      69
    BANK0           128      0     128
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___aldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                49    49      0    2528
                                             15 COMRAM    49    49      0
                            ___aldiv
                          _readMyADC
                       _setGainLevel
                           _setupSPI
 ---------------------------------------------------------------------------------
 (1) _setupSPI                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setGainLevel                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _readMyADC                                            5     3      2      30
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             15     7      8     263
                                              0 COMRAM    15     7      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___aldiv
   _readMyADC
   _setGainLevel
   _setupSPI

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0      80       4      100.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     40      45       1       54.3%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C5      11        0.0%
DATA                 0      0      C5      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Sun Sep  7 00:58:01 2014

                     l45 3540                       l54 367A                       l80 3840  
                     l68 376E                       l79 383E             __CFG_CP0$OFF 000000  
                    l200 3F84                      l202 3F9E                      l204 3FB8  
                    l301 32B6                      l304 32C0                      l154 3CC0  
                    l219 32FC                      l181 3E4A                      l183 3E64  
                    l194 3F36                      l179 3E30                      l196 3F50  
                    l198 3F6A                      u425 3334                      u435 3368  
                    u815 389C                      u855 38F0                      u785 3852  
                    u885 393C                      wreg 000FE8             __CFG_IESO$ON 000000  
           __CFG_FOSC$EC 000000              main@highPWM 002F              main@average 0027  
                   l1002 32CE                     l1004 32D2                     l1012 32E0  
                   l1006 32D6                     l1014 32FA                     l1008 32DA  
                   l1250 3380                     l1260 33B6                     l1244 3350  
                   l1412 36B0                     l1510 3878                     l1430 3706  
                   l1422 36E6                     l1318 3520                     l1256 33A6  
                   l1272 33F4                     l1512 387C                     l1432 370E  
                   l1416 36C8                     l1408 3694                     l1328 354A  
                   l1258 33B2                     l1530 38CE                     l1514 3884  
                   l1442 373E                     l1450 3766                     l1276 340A  
                   l1268 33E6                     l1700 3BAE                     l1620 3A66  
                   l1516 388C                     l1444 3746                     l1460 3784  
                   l1702 3BB6                     l1550 392A                     l1534 38DE  
                   l1526 38C2                     l1454 3770                     l1438 3724  
                   l1390 35CC                     l1720 3C00                     l1640 3AB4  
                   l1560 3962                     l1544 3916                     l1528 38C6  
                   l1472 37BC                     l1810 3D7C                     l1802 3D58  
                   l1714 3BE6                     l1722 3C08                     l1634 3A9A  
                   l1642 3ABC                     l1562 3966                     l1546 391A  
                   l1458 377C                     l1820 3DA6                     l1708 3BCE  
                   l1660 3B04                     l1628 3A82                     l1564 396E  
                   l1548 3922                     l1468 37A8                     l1910 3F86  
                   l1902 3F52                     l1806 3D6A                     l1654 3AEA  
                   l1662 3B0C                     l1494 3822                     l1816 3D96  
                   l1760 3CAE                     l1680 3B56                     l1648 3AD2  
                   l1568 397C                     l1592 39E2                     l1496 382A  
                   l1914 3FA0                     l1906 3F6C                     l1690 3B80  
                   l1674 3B3C                     l1682 3B5E                     l1746 3C6E  
                   l1924 3FD6                     l1860 3E66                     l1852 3E32  
                   l1844 3E0A                     l1668 3B24                     l1918 3FBA  
                   l1758 3CAA                     l1694 3B92                     l1856 3E4C  
                   l1848 3E18                     l1696 3B9A                     l1688 3B78  
                   l1890 3F06                     l1874 3EAA                     l1882 3ED6  
                   l1866 3E82                     l1796 3D40                     l1788 3D24  
                   l1894 3F1E                     l1886 3EEE                     l1878 3EC0  
                   l1898 3F38                     u1275 3C84            __CFG_FCMEN$ON 000000  
                   _main 341C                     prodl 000FF3                     start 0000  
          __CFG_FOSC2$ON 000000          __end_of___aldiv 341C                    ?_main 0001  
           main@midLevel 0018                    _T0CON 000FD5                    _TMR0H 000FD7  
                  _TMR0L 000FD6                    _PORTA 000F80                    _PORTB 000F81  
                  _PORTC 000F82                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISC 000F94                    _SSPIF 007CF3             main@lowLevel 001A  
                  _randf 0045                    _randx 0041                    status 000FD8  
        __initialization 3282             __end_of_main 3FF8       main@sequenceNumber 003E  
                 ??_main 0010            __activetblptr 000002            main@highLevel 0024  
          main@mainLevel 001C                   _ADCON0 000FC2                   _ADCON1 000FC1  
                 _ADCON2 000FC0                   _ADRESH 000FC4                   _ADRESL 000FC3  
                 _GODONE 007E11           __CFG_WDTEN$OFF 000000                   _TMR0IF 007F92  
                 _SSPBUF 000FC9           __CFG_XINST$OFF 000000                ??___aldiv 0009  
         __CFG_STVREN$ON 000000                   clear_0 3288     main@currentGainLevel 002B  
       __end_of_setupSPI 3282                   tblptru 000FF8            main@soundFlag 0026  
             __accesstop 0080  __end_of__initialization 3298           __pcstackCOMRAM 0001  
          ?_setGainLevel 0001      main@sequenceRepeats 0031        main@patternNumber 0038  
             __pbssBANK0 0080       __size_of_readMyADC 004C           main@brightness 0039  
         ??_setGainLevel 0001       readMyADC@ADCnumber 0005                  _SSP1BUF 000FC9  
                _SSPCON1 000FC6                  _SSPSTAT 000FC7                  __Hparam 0000  
                __Lparam 0000                ?_setupSPI 0001                  ___aldiv 3314  
                __pcinit 3282                  __ramtop 0400                  __ptext0 341C  
                __ptext1 326E                  __ptext2 32A2                  __ptext3 32C8  
                __ptext4 3314        __end_of_readMyADC 3314         ___aldiv@dividend 0001  
   end_of_initialization 3298            __Lmediumconst 0000         _led_strip_colors 0080  
             ??_setupSPI 0001         ___aldiv@quotient 000C           main@stepNumber 003F  
                postinc0 000FEE                _PORTBbits 000F81                _PORTCbits 000F82  
              _TRISCbits 000F94     __end_of_setGainLevel 32C8               main@midPWM 0036  
        main@fadeCounter 0020               main@lowPWM 002D      start_initialization 3282  
        main@clapCounter 0029              __pbssCOMRAM 0041      __CFG_CCP2MX$DEFAULT 000000  
               ?___aldiv 0001        __size_of_setupSPI 0014    __size_of_setGainLevel 0026  
              _readMyADC 32C8          ___aldiv@divisor 0005          ___aldiv@counter 000A  
               _PIR1bits 000F9E         __CFG_WDTPS$32768 000000                 _SSP1CON1 000FC6  
           _setGainLevel 32A2          main@currentStep 003A                main@total 0014  
             ?_readMyADC 0001                 __Hrparam 0000                 __Lrparam 0000  
       __size_of___aldiv 0108          main@sampleCount 001E          readMyADC@result 0003  
        main@tickCounter 0033             _SSP1CON1bits 000FC6            __size_of_main 0BDC  
               _setupSPI 326E                 main@mode 0035              ??_readMyADC 0003  
 main@soundDetectedCount 0022    setGainLevel@gainLevel 0001             ___aldiv@sign 000B  
           main@PWMcount 003C  
